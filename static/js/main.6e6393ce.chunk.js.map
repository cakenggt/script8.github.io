{"version":3,"sources":["index.js","toLetter.js","colors.js","skeleton.js","getUserInput.js","utils/runningSum.js","gistParsers/game.js","Iframe.js","utils/bios.js","contextCanvasAPI/trimCanvas.js","validateToken.js","createReducer.js","gistParsers/map.js","gistParsers/sprites.js","gistParsers/phrases.js","utils/screenTypes.js","store/initialState.js","blank.js","gistParsers/chains.js","gistParsers/songs.js","utils/errorLocation.js","frameBufferCanvasAPI/line.js","frameBufferCanvasAPI/polyStroke.js","frameBufferCanvasAPI/circle.js","frameBufferCanvasAPI/sprite.js","frameBufferCanvasAPI/alphabet.js","frameBufferCanvasAPI/print.js","frameBufferCanvasAPI/index.js","frameBufferCanvasAPI/rect.js","contextCanvasAPI/circle.js","contextCanvasAPI/line.js","contextCanvasAPI/polyStroke.js","contextCanvasAPI/alphabet.js","contextCanvasAPI/print.js","contextCanvasAPI/sprite.js","contextCanvasAPI/index.js","contextCanvasAPI/pixel.js","settings.js","normalize.js","soundAPI/index.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","_Iframe__WEBPACK_IMPORTED_MODULE_2__","ReactDOM","render","a","createElement","document","getElementById","d","letterToNumber","notes","letter","indexOf","toLetter","number","includeOctave","normalize","length","numberToNote","octave","Math","floor","numberToOctave","concat","triplets","rgbStrings","map","_ref","_ref2","Object","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","g","b","intLookup","i","values","possiblyNegativeInteger","reverseIntLookup","colors","rgb","triplet","int","lookupInt","allowedKeys","previousUserInput","getUserInput","keys","buttons","window","navigator","getGamepads","newUserInput","__mousedown","has","up","pressed","right","down","left","start","select","_arr","_i","key","startsWith","keyPressed","keyReleased","runningSum","array","push","reduce","acc","cur","idx","previous","toConsumableArray","assembleOrderedGame","game","_","orderBy","value","filter","isEmpty","join","parseGistGame","data","misc","JSON","parse","get","content","lines","ranges","contentLines","split","objectSpread","defineProperty","text","slice","apply","active","0","platform","console","log","stringify","version","getUniqueErrorMessages","errors","type","sortBy","uniqBy","initialState","update","drawActors","draw","embedState","_script8","globalKeys","Set","NOOP","FPS","SECONDS","CANVAS_SIZE","ACTOR_FRAME_SKIP","Iframe","props","_this","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","this","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","call","ArrowUpElement","setArrowUpRef","e","ArrowRightElement","setArrowRightRef","ArrowDownElement","setArrowDownRef","ArrowLeftElement","setArrowLeftRef","aElement","setaRef","bElement","setbRef","EnterElement","setEnterRef","SpaceElement","setSpaceRef","touchstartArrowUp","bind","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","touchstartArrowRight","touchstartArrowDown","touchstartArrowLeft","touchstarta","touchstartb","touchstartEnter","touchstartSpace","touchendArrowUp","touchendArrowRight","touchendArrowDown","touchendArrowLeft","touchenda","touchendb","touchendEnter","touchendSpace","updateGlobals","evalCode","startTimer","handleTimelineInput","handleActorClick","handlePauseClick","handleRestartClick","errorLogger","loggerErrors","logger","heightSent","shadows","blacklist","timer","previousElapsed","fpsValues","volumeNode","Tone","reducer","createReducer","store","previousInitialState","reduxHistory","reduxLogger","next","action","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","state","getState","soundFunctions","songSequences","started","fps","sprites","songs","chains","phrases","timelineIndex","actors","selectedActors","message","callbacks","isPaused","alteredStates","run","sound","_pixelData","ImageData","_pixelBuffer","ArrayBuffer","_pixelBytes","Uint8ClampedArray","_pixelIntegers","Uint32Array","isEmbed","_this$state","isNil","ports","postMessage","_ref$error","error","_this$state2","errorData","position","getEvaledErrorPosition","errorMessages","chunk","forEach","errorMessage","theString","range","x","y","print","useFrameBufferRenderer","writePixelDataToCanvas","classList","add","remove","delete","providedGlobals","globals","canvasAPI","frameBufferCanvasAPI","contextCanvasAPI","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","StateMachine","Array","pixels","ctx","_canvas","getContext","width","height","flatten","random","clamp","set","putImageData","_this2","USE_FRAME_BUFFER_RENDERER","soundAPI","playSong","playPhrase","stopSong","mousedownHandler","mouseupHandler","keydownHandler","event","altKey","metaKey","ctrlKey","includes","preventDefault","shortcut","stopPropagation","keyupHandler","addEventListener","handleData","_message$data","payload","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","isNew","setState","isDoneFetching","invalidTokenIndex","tokens","findIndex","token","validateToken","smallCanvas","drawImage","toDataURL","SCRIPT_8_EMBEDDED_GIST_ID","fetch","process","then","response","json","gist","bios","extractGistSongs","extractGistChains","extractGistPhrases","extractGistSprites","extractGistMap","removeEventListener","_this3","end","once","callback","endCallback","embedStateString","shadowString","innerSkeleton","skeleton","eval","stop","_this4","interval","elapsed","newFps","tickLength","round","avg","current","userInput","dispatch","input","drawUserGraphics","undefined","target","actorName","Date","now","resetMap","forceUpdate","stopTimer","prevProps","prevState","storeState","_this5","equal","mute","makeSongs","_ul","querySelectorAll","canvases","tempCtx","actor","fill","save","setTransform","clearRect","lilCanvas","trimCanvas","appendChild","restore","createStore","newTimelineIndex","stateToDraw","allActors","id","matchingActors","lastAlteredState","applyMiddleware","body","querySelector","scrollHeight","_this6","_this$state3","react__WEBPACK_IMPORTED_MODULE_9___default","className","ref","classNames","hide","onTouchStart","onTouchEnd","invisible","onClick","min","max","onChange","Component","_package_json__WEBPACK_IMPORTED_MODULE_0__","_skeleton_js__WEBPACK_IMPORTED_MODULE_1__","boot","getImageData","bound","top","bottom","copyCanvas","copy","trimHeight","trimWidth","side","trimmed","canvas","isValid","hasOwnProperty","arguments","newState","Error","lodash__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_0___default","_store_initialState_js__WEBPACK_IMPORTED_MODULE_1__","omit_empty__WEBPACK_IMPORTED_MODULE_1__","omit_empty__WEBPACK_IMPORTED_MODULE_1___default","_store_initialState_js__WEBPACK_IMPORTED_MODULE_2__","_toLetter_js__WEBPACK_IMPORTED_MODULE_3__","omitEmpty","mapValues","phrase","phraseIsArray","isArray","note","match","index","volume","keyBy","omit","tempo","screenTypes","BOOT","HOME","RUN","HELP","CODE","SPRITE","MAP","SONG","CHAIN","PHRASE","SHELF","iframeVersion","errorLine","screen","booted","nextAction","docHistories","dismissedNotices","selectedUi","chain","song","tutorial","shelving","detect_browser__WEBPACK_IMPORTED_MODULE_0__","browser","detect","regexLookup","chrome","firefox","edge","regex","name","stack","exec","line","column","drawLine","x1","y1","x2","y2","setPixel","color","steep","abs","_ref3","_ref4","_ref5","dx","dy","derror","drawPolyStroke","points","args","c","newPoints","xRot","yRot","midX","midY","p","cos","PI","sin","xs","ys","drawCircle","cx","cy","radius","onlyStroke","err","drawReflectedPair","drawSprite","spriteIndex","darken","flipH","flipV","cells","rowIndex","colIndex","clamped","alphabet","<",">","/",":","|","(",")","1","2","3","4","5","6","7","8","9"," ",".",",","+","-","!","?","f","h","j","k","l","m","o","q","s","t","u","v","w","z","drawText","letters","currentX","currentY","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","toString","Symbol","iterator","done","toLowerCase","letterWidth","return","canvasWidth","canvasHeight","_ref$map","initialMap","_runningMap","_cameraX","_cameraY","sprite","camera","clear","getPixel","polyStroke","_len","_key","rectStroke","drawRectStroke","rectFill","rectX","drawRectFill","circStroke","circFill","getTile","mx","my","tile","result","setTile","spriteNumber","row","rowNumber","colNumber","circle","fillStyle","strokeStyle","drawPixel","fillRect","x0","beginPath","moveTo","lineTo","stroke","xOffset","yOffset","grid","imageData","pixel","pixelIndex","offset","_ref$darken","_ref$flipH","_ref$flipV","_memoryCanvas","_mCtx","entries","slicedToArray","skey","pixelSprite","strokeRect","translate","sx","sy","_ctx$getImageData$dat","alpha","lookup","settings","octaves","volumes","matrixLength","chainChannels","startOffset","startOffsetDouble","bpm","subdivision","vol","pulseOptions","oscillator","envelope","release","tempoToPlaybackRate","createSynth","pulseSynth","playNote","_ref$time","time","currentTime","synth","normalizedVolume","tempoToSubdivision","triggerAttackRelease","chainSynths","phraseSynth","songContainers","localPhrases","phrasePool","sequence","makeSongContainer","notePositions","pow","_$padStart$split$map","padStart","parseInt","_$padStart$split$map2","chainPosition","phrasePosition","notePosition","chainIndex","phrasesIndices","channel","phraseIndex","noteElement","dropRightWhile","events","loop","playbackRate","pop","dispose"],"mappings":"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","file":"static/js/main.6e6393ce.chunk.js","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Iframe from './Iframe'\n\nReactDOM.render(<Iframe />, document.getElementById('root'))\n","const notes = ['c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b']\n\nconst numberToNote = number => notes[number % notes.length]\n\nconst numberToOctave = number => Math.floor(number / notes.length)\n\nconst toLetter = (number, includeOctave, normalize) => {\n  const letter = numberToNote(number)\n  const octave = numberToOctave(number) + (normalize ? 2 : 0)\n  return !includeOctave ? letter : `${letter}${octave}`\n}\n\nconst letterToNumber = letter => notes.indexOf(letter)\n\nexport { numberToOctave, letterToNumber }\n\nexport default toLetter\n","// Lookup table for triplet arrays containing R, G, and B values.\nconst triplets = [\n  [246, 214, 189],\n  [195, 163, 138],\n  [153, 117, 119],\n  [129, 98, 113],\n  [78, 73, 95],\n  [32, 57, 79],\n  [15, 42, 63],\n  [8, 20, 30]\n]\n\n// Lookup table for the css color strings.\nconst rgbStrings = triplets.map(([r, g, b]) => `rgb(${r},${g},${b})`)\n\n// Lookup tree for the combined integer representation of each color.\nlet intLookup = []\n\n// Loops over each of the color indexes, looks up associated color triplet, and\n// calculates the equivalent integer representation by bit shifting each byte\n// into the correct position.\nfor (let i = 0; i < 8; i++) {\n  let values = triplets[i]\n\n  // Shift each byte into the correct integer position.\n  let possiblyNegativeInteger =\n    (255 << 24) | // Alpha byte\n    (values[2] << 16) | // B byte\n    (values[1] << 8) | // G byte\n    values[0] // R byte\n\n  // Set the positive version of the above calculated integer into the lookup\n  // table. A bitwise right shift of 0 places forces the number to be\n  // interpreted as a positive integer.\n  intLookup[i] = possiblyNegativeInteger >>> 0\n\n  // For example, intLookup[0] = 4290631414.\n}\n\n// The opposite of the intLookup. Each index is the color integer, and the value\n// is the SCRIPT-8 integer color.\nconst reverseIntLookup = {}\nfor (let i = 0; i < 8; i++) {\n  reverseIntLookup[intLookup[i]] = i\n}\n\nconst colors = {\n  rgb(i) {\n    return rgbStrings[i % rgbStrings.length]\n  },\n\n  triplet(i) {\n    return triplets[i % triplets.length]\n  },\n\n  int(i) {\n    return intLookup[i % intLookup.length]\n  },\n\n  // Looks up the integer value in the reverseIntLookup table. If it doesn't\n  // exist, then the background color of 7 is returned instead.\n  lookupInt(int) {\n    if (int in reverseIntLookup) {\n      return reverseIntLookup[int]\n    }\n    return 7\n  }\n}\n\nexport default colors\n","export default `initialState = {\n}\n\nupdate = (state, input, elapsed) => {\n}\n\ndrawActors = (state, fade) =>\n  state.actors && state.actors.forEach(actor =>\n    sprite(\n      actor.x,\n      actor.y,\n      actor.sprite,\n      fade ? actor.trailBrighten || -3 : actor.brighten,\n      actor.flipH,\n      actor.flipV\n    )\n  )\n\ndraw = state => {\n  camera()\n  clear()\n}`\n","let previousUserInput = {}\n\nconst allowedKeys = [\n  'mousedown',\n  'ArrowUp',\n  'ArrowRight',\n  'ArrowDown',\n  'ArrowLeft',\n  'a',\n  'b',\n  'Enter',\n  ' '\n]\n\nconst getUserInput = keys => {\n  const { buttons } = window.navigator.getGamepads\n    ? window.navigator.getGamepads()[0] || {}\n    : {}\n\n  let newUserInput = {\n    __mousedown: keys.has('mousedown'),\n    up: keys.has('ArrowUp') || (buttons && buttons[12].pressed),\n    right: keys.has('ArrowRight') || (buttons && buttons[15].pressed),\n    down: keys.has('ArrowDown') || (buttons && buttons[13].pressed),\n    left: keys.has('ArrowLeft') || (buttons && buttons[14].pressed),\n    a: keys.has('a') || (buttons && (buttons[1].pressed || buttons[2].pressed)),\n    b: keys.has('b') || (buttons && (buttons[0].pressed || buttons[3].pressed)),\n    start: keys.has('Enter') || (buttons && buttons[9].pressed),\n    select: keys.has(' ') || (buttons && buttons[8].pressed)\n  }\n\n  for (const key of Object.keys(newUserInput)) {\n    if (key.startsWith('__')) continue\n\n    let keyPressed = !previousUserInput[key] && newUserInput[key]\n    newUserInput[key + 'Pressed'] = keyPressed\n\n    let keyReleased = previousUserInput[key] && !newUserInput[key]\n    newUserInput[key + 'Released'] = keyReleased\n  }\n\n  previousUserInput = newUserInput\n\n  return newUserInput\n}\n\nexport { allowedKeys }\n\nexport default getUserInput\n","const runningSum = array => {\n  if (!array.length) array.push(0)\n  return array.reduce((acc, cur, idx) => {\n    if (idx > 0) {\n      const previous = acc[idx - 1]\n      return [...acc, [previous[1], previous[1] + cur]]\n    } else {\n      return [[0, cur]]\n    }\n  }, [])\n}\n\nexport default runningSum\n","import _ from 'lodash'\nimport runningSum from '../utils/runningSum.js'\n\nconst assembleOrderedGame = game =>\n  _(game)\n    .orderBy((value, key) => key)\n    .map('text')\n    .filter(d => !_.isEmpty(d))\n    .value()\n    .join('\\n')\n\nconst parseGistGame = data => {\n  const misc = JSON.parse(_.get(data, 'files[\"misc.json\"].content', '{}'))\n  const content = _.get(data, 'files[\"code.js\"].content', '')\n  if (misc.lines) {\n    const ranges = runningSum(misc.lines)\n    const contentLines = content.split('\\n')\n    return ranges.reduce(\n      (acc, cur, idx) => ({\n        ...acc,\n        [idx]: {\n          text: contentLines.slice(...cur).join('\\n'),\n          active: idx === 0,\n          key: idx\n        }\n      }),\n      {}\n    )\n  } else {\n    return {\n      0: {\n        text: content,\n        active: true,\n        key: 0\n      }\n    }\n  }\n}\n\nexport { parseGistGame, assembleOrderedGame }\n","import React, { Component } from 'react'\nimport classNames from 'classnames'\nimport equal from 'deep-equal'\nimport * as Tone from 'tone'\nimport { interval } from 'd3-timer'\nimport { createStore, applyMiddleware } from 'redux'\nimport _ from 'lodash'\nimport range from 'lodash/range'\nimport flatten from 'lodash/flatten'\nimport random from 'lodash/random'\nimport clamp from 'lodash/clamp'\nimport once from 'lodash/once'\nimport uniqBy from 'lodash/uniqBy'\nimport isEmpty from 'lodash/isEmpty'\nimport bios from './utils/bios.js'\nimport StateMachine from 'javascript-state-machine'\nimport soundAPI from './soundAPI/index.js'\nimport { default as frameBufferCanvasAPI } from './frameBufferCanvasAPI/index.js'\nimport { default as contextCanvasAPI } from './contextCanvasAPI/index.js'\nimport trimCanvas from './contextCanvasAPI/trimCanvas.js'\nimport validateToken from './validateToken.js'\nimport getUserInput, { allowedKeys } from './getUserInput.js'\nimport createReducer from './createReducer.js'\nimport skeleton from './skeleton.js'\nimport { extractGistMap } from './gistParsers/map.js'\nimport { extractGistSprites } from './gistParsers/sprites.js'\nimport { extractGistPhrases } from './gistParsers/phrases.js'\nimport { extractGistChains } from './gistParsers/chains.js'\nimport { extractGistSongs } from './gistParsers/songs.js'\nimport { parseGistGame, assembleOrderedGame } from './gistParsers/game.js'\nimport { getEvaledErrorPosition } from './utils/errorLocation.js'\nimport './css/Iframe.css'\nimport { version } from '../package.json'\n\n// window.USE_FRAME_BUFFER_RENDERER = true\n// window.SCRIPT_8_EMBEDDED_GIST_ID = 'd5dacf8f639a775996c4ed9f9156d4d5'\n\nconst { platform } = window.navigator\n\nconsole.log(JSON.stringify(`SCRIPT-8 iframe v ${version}`, null, 2))\n\nconst getUniqueErrorMessages = errors =>\n  _(errors)\n    .map((data, type) => ({ type, data }))\n    .filter(d => d.data && d.type)\n    .sortBy('type')\n    .uniqBy('data')\n    .value()\n\nwindow.initialState = null\nwindow.update = null\nwindow.drawActors = null\nwindow.draw = null\nwindow.embedState = {}\nwindow._script8 = {\n  globalKeys: new Set()\n}\n\nconst NOOP = () => {}\nconst FPS = 60\nconst SECONDS = 2\nconst CANVAS_SIZE = 128\nconst ACTOR_FRAME_SKIP = 5\n\nclass Iframe extends Component {\n  constructor(props) {\n    super(props)\n\n    this.ArrowUpElement = null\n    this.setArrowUpRef = e => {\n      this.ArrowUpElement = e\n    }\n    this.ArrowRightElement = null\n    this.setArrowRightRef = e => {\n      this.ArrowRightElement = e\n    }\n    this.ArrowDownElement = null\n    this.setArrowDownRef = e => {\n      this.ArrowDownElement = e\n    }\n    this.ArrowLeftElement = null\n    this.setArrowLeftRef = e => {\n      this.ArrowLeftElement = e\n    }\n    this.aElement = null\n    this.setaRef = e => {\n      this.aElement = e\n    }\n    this.bElement = null\n    this.setbRef = e => {\n      this.bElement = e\n    }\n    this.EnterElement = null\n    this.setEnterRef = e => {\n      this.EnterElement = e\n    }\n    this.SpaceElement = null\n    this.setSpaceRef = e => {\n      this.SpaceElement = e\n    }\n\n    this.touchstartArrowUp = this.touchstartArrowUp.bind(this)\n    this.touchstartArrowRight = this.touchstartArrowRight.bind(this)\n    this.touchstartArrowDown = this.touchstartArrowDown.bind(this)\n    this.touchstartArrowLeft = this.touchstartArrowLeft.bind(this)\n    this.touchstarta = this.touchstarta.bind(this)\n    this.touchstartb = this.touchstartb.bind(this)\n    this.touchstartEnter = this.touchstartEnter.bind(this)\n    this.touchstartSpace = this.touchstartSpace.bind(this)\n\n    this.touchendArrowUp = this.touchendArrowUp.bind(this)\n    this.touchendArrowRight = this.touchendArrowRight.bind(this)\n    this.touchendArrowDown = this.touchendArrowDown.bind(this)\n    this.touchendArrowLeft = this.touchendArrowLeft.bind(this)\n    this.touchenda = this.touchenda.bind(this)\n    this.touchendb = this.touchendb.bind(this)\n    this.touchendEnter = this.touchendEnter.bind(this)\n    this.touchendSpace = this.touchendSpace.bind(this)\n\n    this.updateGlobals = this.updateGlobals.bind(this)\n    this.evalCode = this.evalCode.bind(this)\n    this.startTimer = this.startTimer.bind(this)\n    this.handleTimelineInput = this.handleTimelineInput.bind(this)\n    this.handleActorClick = this.handleActorClick.bind(this)\n    this.handlePauseClick = this.handlePauseClick.bind(this)\n    this.handleRestartClick = this.handleRestartClick.bind(this)\n    this.errorLogger = this.errorLogger.bind(this)\n    this.loggerErrors = {}\n    this.logger = this.logger.bind(this)\n    this.log = null\n\n    this.heightSent = 0\n\n    this.shadows = new Set(['document'])\n    this.blacklist = new Set(['eval', 'alert', '_script8'])\n    this.keys = new Set()\n\n    this.timer = null\n    this.previousElapsed = 0\n    this.fpsValues = []\n\n    this.volumeNode = new Tone.Volume()\n\n    this.reducer = createReducer(this.errorLogger)\n    this.store = null\n    this.previousInitialState = null\n    this.reduxHistory = []\n    this.reduxLogger = store => next => action => {\n      // Add this state and action to history,\n      // and limit it to the 3 seconds worth of entries.\n      // We calculate this by using fps.\n      this.reduxHistory = [\n        ...this.reduxHistory,\n        {\n          state: store.getState(),\n          action\n        }\n      ].slice(-(FPS * SECONDS))\n\n      return next(action)\n    }\n\n    this.soundFunctions = null\n    this.songSequences = null\n\n    this.state = {\n      started: false,\n      fps: null,\n      game: '',\n      sprites: {},\n      map: {},\n      songs: {},\n      chains: {},\n      phrases: {},\n      timelineIndex: 0,\n      actors: [],\n      selectedActors: [],\n      message: null,\n      callbacks: {},\n      isPaused: true,\n      alteredStates: [],\n      run: true,\n      sound: true\n    }\n\n    // Pixel data has the actual image data object which can be passed to putImageData.\n    this._pixelData = new ImageData(CANVAS_SIZE, CANVAS_SIZE)\n\n    // This contains the actual binary data for setting on _pixelData. It cannot\n    // be accessed directly, but is instead modified through TypedArrays such as\n    // Uint8ClampedArray and Uint32Array. Both the TypedArrays below refer to\n    // the same backing buffer, so modifying values via one will be reflected in\n    // the other.\n    this._pixelBuffer = new ArrayBuffer(4 * CANVAS_SIZE * CANVAS_SIZE)\n\n    // The pixelBytes array is only used to set the data in the _pixelData\n    // object. ImageData only has an Uint8ClampedArray to access the underlying\n    // bytes, so a Uint8ClampedArray must be kept around to copy the data.\n    this._pixelBytes = new Uint8ClampedArray(this._pixelBuffer)\n\n    // It turns out that setting pixels all at once via a single integer is much\n    // faster than setting each byte individually. So the pixel data is only\n    // ever modified via the Uint32Array for performance reasons.\n    this._pixelIntegers = new Uint32Array(this._pixelBuffer)\n  }\n\n  logger(value) {\n    // Don't use logger if we're on embed mode.\n    if (!this.isEmbed) {\n      const { message, run } = this.state\n      // If we have something to log,\n      if (!run && !_.isNil(value)) {\n        // and it is different than the previous one,\n        if (JSON.stringify(this.log) !== JSON.stringify(this.value)) {\n          // update the log,\n          this.log = value\n          // and send to parent.\n          message.ports[0].postMessage({\n            log: this.log\n          })\n        }\n      }\n    }\n  }\n\n  errorLogger({ type, error = null }) {\n    const { message, run } = this.state\n    // If we have an error,\n    if (error) {\n      const errorData = {\n        message: error.message,\n        position: getEvaledErrorPosition(error)\n      }\n\n      // and it is different than the previous one,\n      if (\n        JSON.stringify(this.loggerErrors[type]) !== JSON.stringify(errorData)\n      ) {\n        // update the loggerErrors,\n        this.loggerErrors[type] = errorData\n        // and send to parent.\n        if (!this.isEmbed) {\n          message.ports[0].postMessage({\n            errors: getUniqueErrorMessages(this.loggerErrors)\n          })\n        }\n      }\n    } else {\n      // If we don't have an error,\n      // and we had one before,\n      if (this.loggerErrors[type]) {\n        // update the loggerErrors for this type,\n        this.loggerErrors[type] = null\n        // and send to parent.\n        if (!this.isEmbed) {\n          message.ports[0].postMessage({\n            errors: getUniqueErrorMessages(this.loggerErrors)\n          })\n        }\n      }\n    }\n\n    // If we're on run mode,\n    if (run) {\n      // create one string with all the unique error messages.\n      const errorMessages = getUniqueErrorMessages(this.loggerErrors)\n        .map(error => `error: ${error.data.message}`)\n        .join('. ')\n      // console.log(errorMessages)\n\n      if (errorMessages.length) {\n        // Print the error message in black, offset.\n        _.chunk(errorMessages, 32).forEach((errorMessage, i) => {\n          const theString = errorMessage.join('')\n          range(3).forEach(x =>\n            range(3).forEach(y =>\n              window.print(1 + x, 1 + y + i * 8, theString, 7)\n            )\n          )\n          // Now print the error message in white.\n          window.print(2, 2 + i * 8, theString, 0)\n        })\n\n        // If we're in framebuffer mode,\n        if (this.useFrameBufferRenderer) {\n          // draw it now.\n          this.writePixelDataToCanvas()\n        }\n      }\n    }\n  }\n\n  touchstartArrowUp() {\n    this.ArrowUpElement.classList.add('on')\n    this.keys.add('ArrowUp')\n  }\n  touchstartArrowRight() {\n    this.ArrowRightElement.classList.add('on')\n    this.keys.add('ArrowRight')\n  }\n  touchstartArrowDown() {\n    this.ArrowDownElement.classList.add('on')\n    this.keys.add('ArrowDown')\n  }\n  touchstartArrowLeft() {\n    this.ArrowLeftElement.classList.add('on')\n    this.keys.add('ArrowLeft')\n  }\n  touchstarta() {\n    this.aElement.classList.add('on')\n    this.keys.add('a')\n  }\n  touchstartb() {\n    this.bElement.classList.add('on')\n    this.keys.add('b')\n  }\n  touchstartEnter() {\n    this.EnterElement.classList.add('on')\n    this.keys.add('Enter')\n  }\n  touchstartSpace() {\n    this.SpaceElement.classList.add('on')\n    this.keys.add(' ')\n  }\n\n  touchendArrowUp() {\n    this.ArrowUpElement.classList.remove('on')\n    this.keys.delete('ArrowUp')\n  }\n  touchendArrowRight() {\n    this.ArrowRightElement.classList.remove('on')\n    this.keys.delete('ArrowRight')\n  }\n  touchendArrowDown() {\n    this.ArrowDownElement.classList.remove('on')\n    this.keys.delete('ArrowDown')\n  }\n  touchendArrowLeft() {\n    this.ArrowLeftElement.classList.remove('on')\n    this.keys.delete('ArrowLeft')\n  }\n  touchenda() {\n    this.aElement.classList.remove('on')\n    this.keys.delete('a')\n  }\n  touchendb() {\n    this.bElement.classList.remove('on')\n    this.keys.delete('b')\n  }\n  touchendEnter() {\n    this.EnterElement.classList.remove('on')\n    this.keys.delete('Enter')\n  }\n  touchendSpace() {\n    this.SpaceElement.classList.remove('on')\n    this.keys.delete(' ')\n  }\n\n  updateGlobals(providedGlobals) {\n    // Assign various properties to global scope, for the user.\n    let globals\n\n    if (!providedGlobals) {\n      const canvasAPI = this.useFrameBufferRenderer\n        ? frameBufferCanvasAPI\n        : contextCanvasAPI\n\n      globals = {\n        console,\n        StateMachine,\n        JSON,\n        Math,\n        Object,\n        Array,\n        log: this.logger,\n        ...canvasAPI({\n          pixels: this._pixelIntegers,\n          ctx: this._canvas.getContext('2d'),\n          width: CANVAS_SIZE,\n          height: CANVAS_SIZE,\n          sprites: this.state.sprites,\n          map: this.state.map\n        }),\n        range,\n        flatten,\n        random,\n        clamp\n      }\n    } else {\n      globals = providedGlobals\n    }\n\n    // For each global key,\n    Object.keys(globals).forEach(key => {\n      // assign the corresponding global object to window,\n      window[key] = globals[key]\n\n      // and assign the key itself to window._script8.globalKeys.\n      window._script8.globalKeys.add(key)\n    })\n  }\n\n  writePixelDataToCanvas() {\n    this._pixelData.data.set(this._pixelBytes)\n    const ctx = this._canvas.getContext('2d')\n    ctx.putImageData(this._pixelData, 0, 0)\n  }\n\n  drawUserGraphics(state) {\n    if (window.draw) {\n      window.draw(state)\n      if (this.useFrameBufferRenderer) {\n        this.writePixelDataToCanvas()\n      }\n    }\n  }\n\n  componentDidMount() {\n    if (window.USE_FRAME_BUFFER_RENDERER) {\n      this.useFrameBufferRenderer = true\n    }\n\n    // Initialize sound API with this Tone.js volumeNode.\n    this.soundFunctions = soundAPI(this.volumeNode)\n\n    // Update globals with sound API functions.\n    this.updateGlobals({\n      playSong: this.soundFunctions.playSong,\n      playPhrase: this.soundFunctions.playPhrase,\n      stopSong: this.soundFunctions.stopSong\n    })\n\n    // Keep track of what keys we're pressing.\n    this.mousedownHandler = () => {\n      this.keys.add('mousedown')\n    }\n    this.mouseupHandler = () => {\n      this.keys.delete('mousedown')\n    }\n    this.keydownHandler = event => {\n      // Listen for record cassette and go to previous/next screen,\n      // and send them to parent.\n      const { altKey, metaKey, ctrlKey, key } = event\n      const { message } = this.state\n\n      // Listen to Ctrl-s / Cmd-s.\n      if (\n        (!this.isEmbed &&\n          (metaKey && key === 's' && _.includes(platform, 'Mac'))) ||\n        (ctrlKey && key === 's' && !_.includes(platform, 'Mac'))\n      ) {\n        event.preventDefault()\n        message.ports[0].postMessage({\n          shortcut: 'save'\n        })\n      }\n\n      // Listen Alt-. / Alt-/ .\n      if (!this.isEmbed && altKey) {\n        if (key === '.') {\n          event.preventDefault()\n          message.ports[0].postMessage({\n            shortcut: 'previous'\n          })\n        }\n        if (key === '/') {\n          event.preventDefault()\n          message.ports[0].postMessage({\n            shortcut: 'next'\n          })\n        }\n      }\n\n      // If we pressed an allowed key, e.g. up, down, a, etc,\n      if (allowedKeys.includes(key)) {\n        // don't let it bubble up to the parent.\n        // The inverse of this means that something like Ctrl-R (reload on windows)\n        // will be indeed allowed to bubble up.\n        event.preventDefault()\n        event.stopPropagation()\n      }\n\n      // Finally, add the keyDown to the keys object.\n      this.keys.add(key)\n    }\n    this.keyupHandler = event => {\n      // Only handle the keys we want. Same as above.\n      const { key } = event\n      if (allowedKeys.includes(key)) {\n        event.preventDefault()\n        event.stopPropagation()\n      }\n      this.keys.delete(key)\n    }\n\n    document.addEventListener('touchstart', this.mousedownHandler)\n    document.addEventListener('mousedown', this.mousedownHandler)\n    document.addEventListener('touchend', this.mouseupHandler)\n    document.addEventListener('mouseup', this.mouseupHandler)\n    document.addEventListener('keydown', this.keydownHandler)\n    document.addEventListener('keyup', this.keyupHandler)\n\n    // Listen for callCode or validateToken parent messages.\n    const handleData = message => {\n      const { type, ...payload } = message.data\n      const { blacklist, shadows } = this\n\n      // Run user code.\n      if (type === 'callCode') {\n        let isPaused = payload.run === true ? false : this.state.isPaused\n\n        // If we're in run mode (e.g. BOOT or RUN screens),\n        // and we're paused,\n        // and the timer already exists (e.g. we came here from CODE),\n        // resume.\n        if (payload.run && this.state.isPaused) {\n          this.handlePauseClick()\n          isPaused = false\n        }\n\n        // If we're paused, and this is a new cassette,\n        // and it wasn't new before, resume.\n        if (this.state.isPaused && payload.isNew && !this.state.isNew) {\n          this.handlePauseClick()\n          isPaused = false\n        }\n\n        if (payload.useFrameBufferRenderer) {\n          this.useFrameBufferRenderer = true\n          this.updateGlobals()\n        }\n\n        this.setState({\n          game: payload.game,\n          sprites: payload.sprites,\n          map: payload.map,\n          message,\n          run: payload.run,\n          isPaused,\n          sound: payload.sound,\n          callbacks: payload.callbacks,\n          phrases: payload.phrases,\n          chains: payload.chains,\n          songs: payload.songs,\n          isNew: payload.isNew,\n          isDoneFetching: payload.isDoneFetching\n        })\n      } else if (type === 'findInvalidToken') {\n        // Find the first invalid token in the provided tokens array.\n        const invalidTokenIndex = payload.tokens.findIndex(\n          token =>\n            !validateToken({\n              token,\n              blacklist,\n              globals: window._script8.globalKeys,\n              shadows\n            })\n        )\n        message.ports[0].postMessage(invalidTokenIndex)\n      } else if (type === 'image') {\n        const smallCanvas = document.createElement('canvas')\n        const size = 128\n        smallCanvas.width = size\n        smallCanvas.height = size\n        smallCanvas.getContext('2d').drawImage(this._canvas, 0, 0, size, size)\n        message.ports[0].postMessage(smallCanvas.toDataURL())\n      }\n    }\n\n    // If there's an id in index.html,\n    if (window.SCRIPT_8_EMBEDDED_GIST_ID) {\n      this.isEmbed = true\n      // try fetching the gist,\n      window\n        .fetch(\n          `${process.env.REACT_APP_NOW}/gist/${\n            window.SCRIPT_8_EMBEDDED_GIST_ID\n          }`\n        )\n        .then(response => response.json())\n        .then(json => {\n          // parse the gist, then send data to `handleData`,\n          // which starts the game.\n          this.gist = json\n          handleData({\n            data: {\n              type: 'callCode',\n              game: bios,\n              isDoneFetching: true,\n              songs: extractGistSongs(json),\n              chains: extractGistChains(json),\n              phrases: extractGistPhrases(json),\n              sprites: extractGistSprites(json),\n              map: extractGistMap(json),\n              run: true,\n              callbacks: {},\n              sound: true\n            }\n          })\n        })\n    } else {\n      // Otherwise, wait for messages from parent.\n      window.addEventListener('message', handleData)\n    }\n\n    // Update globals - e.g. set `console`, `range`, the canvasAPI functions, etc\n    // to the global scope for our user.\n    this.updateGlobals()\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('touchstart', this.mousedownHandler)\n    document.removeEventListener('mousedown', this.mousedownHandler)\n    document.removeEventListener('touchend', this.mouseupHandler)\n    document.removeEventListener('mouseup', this.mouseupHandler)\n    document.removeEventListener('keydown', this.keydownHandler)\n    document.removeEventListener('keyup', this.keyupHandler)\n  }\n\n  evalCode() {\n    const { shadows, state } = this\n    // eslint-disable-next-line no-unused-vars\n    const { game, message, callbacks, isDoneFetching } = state\n    try {\n      // If we're done fetching,\n      if (isDoneFetching)\n        // define the following end function, which we can only call once:\n        window._script8.end = once(() => {\n          this.setState({\n            game: assembleOrderedGame(parseGistGame(this.gist)),\n            started: true\n          })\n          // If Tone.js is not running,\n          if (Tone.context.state !== 'running') {\n            // start it.\n            // This is allowed because the root event is a click event.\n            Tone.start()\n          }\n          // Then, call the callback once.\n          if (!this.isEmbed) {\n            message.ports[0].postMessage({\n              callback: callbacks.endCallback\n            })\n          }\n        })\n      // Save previous initial state.\n      this.previousInitialState = window.initialState\n\n      const embedStateString = this.isEmbed\n        ? `embedState = JSON.parse(JSON.stringify(initialState))`\n        : ''\n\n      // Eval the supplied game.\n      const shadowString = `var ${[...shadows].join(',')}`\n      // eslint-disable-next-line no-unused-vars\n      const innerSkeleton = skeleton\n      // eslint-disable-next-line no-eval\n      eval(`\n      // Shadow variables we don't want available.\n      ${shadowString}\n      // The inception eval allows the user to declare vars (e.g. screen).\n      eval(innerSkeleton)\n      eval(game)\n      ${embedStateString}\n      if (initialState && typeof initialState === 'function') {\n        initialState = this.previousInitialState\n      }\n    `)\n      this.errorLogger({ type: 'evalCode' })\n    } catch (e) {\n      this.errorLogger({ type: 'evalCode', error: e })\n    }\n  }\n\n  stopTimer() {\n    if (this.timer) {\n      this.timer.stop()\n    }\n  }\n\n  startTimer() {\n    const timerCallback = elapsed => {\n      try {\n        // Calculate the actual FPS,\n        const tickLength = elapsed - this.previousElapsed\n        const fps = Math.round(1000 / tickLength)\n\n        // add fps to array,\n        this.fpsValues.push(fps)\n\n        // and update fps stats once per second.\n        let newFps\n        if (this.fpsValues.length % 60 === 0) {\n          const avg =\n            this.fpsValues.reduce((acc, current) => acc + current) /\n            this.fpsValues.length\n          newFps = Math.round(avg)\n        }\n\n        // Save current elapsed.\n        this.previousElapsed = elapsed\n\n        // Update the redux store.\n        const userInput = getUserInput(this.keys)\n        if (this.isEmbed) {\n          window.update(window.embedState, userInput, tickLength)\n        } else {\n          this.store.dispatch({\n            type: 'TICK',\n            input: userInput,\n            elapsed: tickLength\n          })\n        }\n\n        // Draw this state.\n        this.drawUserGraphics(\n          this.isEmbed ? window.embedState : this.store.getState()\n        )\n\n        // Update fps, only if we had a new measurement.\n        if (newFps !== undefined && newFps !== this.state.fps) {\n          this.setState({\n            fps: newFps\n          })\n        }\n        this.errorLogger({ type: 'startTimer' })\n      } catch (e) {\n        this.errorLogger({ type: 'startTimer', error: e })\n      }\n    }\n    if (this.timer) {\n      this.timer.stop()\n    }\n    this.previousElapsed = 0\n    this.timer = interval(timerCallback, 1000 / FPS)\n  }\n\n  handleTimelineInput(e) {\n    this.setState({\n      timelineIndex: +e.target.value\n    })\n  }\n\n  handleActorClick(actorName) {\n    const { selectedActors } = this.state\n\n    // If actorName is in selectedActors, take it out.\n    // Otherwise put it in.\n    const actors = selectedActors.includes(actorName)\n      ? selectedActors.filter(d => d !== actorName)\n      : [...selectedActors, actorName]\n\n    this.setState({\n      selectedActors: actors\n    })\n  }\n\n  handleRestartClick() {\n    window.initialState = Date.now()\n    window.embedState = 'SCRIPT-8-RESTART'\n    this.reduxHistory = []\n    window.resetMap()\n    this.forceUpdate()\n  }\n\n  handlePauseClick() {\n    if (this.state.isPaused) {\n      this.reduxHistory = []\n      this.startTimer()\n    } else {\n      this.stopTimer()\n    }\n\n    this.setState({\n      selectedActors: [],\n      actors: [],\n      fps: null,\n      isPaused: !this.state.isPaused\n    })\n  }\n\n  // When the app's UI state has changed,\n  componentDidUpdate(prevProps, prevState) {\n    const { state, shadows } = this\n    const {\n      message,\n      isPaused,\n      game,\n      sprites,\n      map,\n      timelineIndex,\n      actors,\n      selectedActors,\n      sound,\n      songs,\n      chains,\n      phrases,\n      run\n    } = state\n\n    // If the sprites or map have changed, update the globals.\n    if (!equal(sprites, prevState.sprites) || !equal(map, prevState.map)) {\n      this.updateGlobals()\n    }\n\n    // If soundon/soundoff has changed,\n    // toggle volume.\n    // Also resume AudioContext IF it's not running.\n    if (!equal(sound, prevState.sound)) {\n      Tone.Master.mute = !sound\n    }\n\n    // If the music data changed,\n    if (\n      !equal(songs, prevState.songs) ||\n      !equal(chains, prevState.chains) ||\n      !equal(phrases, prevState.phrases)\n    ) {\n      // make sequences,\n      this.soundFunctions.makeSongs({\n        songs,\n        chains,\n        phrases\n      })\n      // and restart game.\n      this.handleRestartClick()\n    }\n\n    // If we are not on a run screen,\n    if (!run) {\n      // mute the volume node.\n      this.volumeNode.mute = true\n    } else {\n      // If we are on the run screen,\n      // unmute the volume node.\n      this.volumeNode.mute = false\n    }\n\n    // If we're playing, check for two overall scenarios:\n    if (!isPaused) {\n      // 1 - We're embedded.\n      if (this.isEmbed) {\n        // Then, if the game is different,\n        // or the initialState has changed,\n        if (\n          game !== prevState.game ||\n          window.embedState === 'SCRIPT-8-RESTART'\n        ) {\n          // evaluate user code.\n          this.evalCode({ ...state, shadows })\n        }\n      } else {\n        // 2 - We're not embedded.\n        // Then, if we came back from being paused,\n        // or the game is different,\n        // or the run mode was different,\n        // or the initialState has changed,\n        if (\n          prevState.isPaused ||\n          game !== prevState.game ||\n          run !== prevState.run ||\n          !equal(window.initialState, this.previousInitialState)\n        ) {\n          // evaluate user code,\n          // get redux state,\n          // and create redux store.\n\n          // Evaluate user code.\n          this.evalCode({ ...state, shadows })\n\n          // Before we create a redux store, let's think about what state we want.\n          // If the user has changed initialState, use that.\n          // This way we let the user start over when they modify initialState.\n          // This is an escape hatch of sorts.\n          // Otherwise use the current store state. This will enable us to modify game\n          // code and not lose game state.\n          let storeState\n          if (!equal(window.initialState, this.previousInitialState)) {\n            storeState = window.initialState\n            this.reduxHistory = []\n          } else {\n            storeState = (this.store && this.store.getState()) || {}\n          }\n          // Now we can create the store.\n          // Notice that we'll pass in reduxLogger as middleware.\n          // This enables us to save each action. We'll need them for the time debugger.\n          this.store = createStore(\n            this.reducer,\n            storeState || undefined,\n            applyMiddleware(this.reduxLogger)\n          )\n        }\n      }\n    } else {\n      // If we're not playing,\n      // we can have several different kinds of inputs:\n      // - game has changed\n      // - sprites have changed\n      // - timelineIndex has changed\n      // - selectedActors has changed\n      // Stop the timer (ONLY when pause was clicked).\n      // Evaluate user code (ONLY when game has changed).\n      // Create array of alteredStates (ONLY when game has changed).\n      // Populated list of actor buttons (ONLY when game has changed).\n      // Set timeline length to alteredStates' length (ONLY when pause was clicked).\n      // Set timeline index to max (ONLY when pause was clicked).\n      // Draw the last state, and draw selected actors (highlight timeline index actors).\n\n      // If we're paused,\n      // and either game, timelineIndex, or selectedActors is different:\n      if (\n        !equal(isPaused, prevState.isPaused) ||\n        !equal(game, prevState.game) ||\n        !equal(sprites, prevState.sprites) ||\n        !equal(map, prevState.map) ||\n        !equal(timelineIndex, prevState.timelineIndex) ||\n        !equal(selectedActors, prevState.selectedActors)\n      ) {\n        try {\n          if (this.reduxHistory.length) {\n            // Evaluate user code.\n            this.evalCode({ ...state, shadows })\n\n            // Create the store with the first item in reduxHistory as initial state.\n            // Save that state to alteredStates.\n            // Then, for all next actions in the history, dispatch the action,\n            // and save resulting state to alteredStates.\n            let alteredStates = []\n            this.store = createStore(this.reducer, this.reduxHistory[0].state)\n            alteredStates.push(this.store.getState())\n\n            this.reduxHistory.forEach(({ state, action }, i) => {\n              if (i === timelineIndex - 1) {\n                // Enable logging only if this is the selected frame.\n                this.updateGlobals({ log: this.logger })\n              } else {\n                this.updateGlobals({ log: NOOP })\n              }\n              this.store.dispatch(action)\n              alteredStates.push(this.store.getState())\n            })\n\n            // Re-enable logging.\n            this.updateGlobals({ log: this.logger })\n\n            alteredStates = alteredStates.filter(d => !isEmpty(d))\n\n            // If we were previously in pause mode,\n            // use the provided timelineIndex.\n            // Otherwise,\n            // set the timeline to the max.\n            const newTimelineIndex = prevState.isPaused\n              ? timelineIndex\n              : alteredStates.length - 1\n\n            // Draw the timeline index state.\n            const stateToDraw = alteredStates[newTimelineIndex]\n            this.drawUserGraphics(stateToDraw)\n\n            // Get all unique actors.\n            const allActors = flatten(\n              alteredStates.map(state => state.actors)\n            ).filter(d => d)\n            const actors = uniqBy(allActors, d => d.id)\n\n            // For each altered state, minus the timeLineIndex one,\n            // draw the actors, if they're selected, faded.\n            alteredStates.forEach((state, i) => {\n              if (\n                (i !== newTimelineIndex && i % ACTOR_FRAME_SKIP === 0) ||\n                i === alteredStates.length - 1\n              ) {\n                const matchingActors =\n                  (state.actors &&\n                    state.actors.filter(d => selectedActors.includes(d.id))) ||\n                  []\n                // Disable logging during window.draw calls.\n                this.updateGlobals({ log: NOOP })\n                window.drawActors &&\n                  window.drawActors({ actors: matchingActors }, true)\n                // Re-enable console.log.\n                this.updateGlobals({ log: this.logger })\n              }\n            })\n\n            // Draw the timeLineIndex one last, not faded.\n            const lastAlteredState = alteredStates[newTimelineIndex]\n            if (\n              window.drawActors &&\n              lastAlteredState &&\n              lastAlteredState.actors\n            ) {\n              window.drawActors({\n                actors: lastAlteredState.actors.filter(d =>\n                  selectedActors.includes(d.id)\n                )\n              })\n            }\n\n            // If we're using the framebuffer renderer,\n            // draw it to canvas right now.\n            if (this.useFrameBufferRenderer) {\n              this.writePixelDataToCanvas()\n            }\n\n            // Finally, set the store to point to the timeLineIndex altered state,\n            // so that when we hit play, we can resume right from this point.\n            this.store = createStore(this.reducer, stateToDraw)\n\n            this.setState({\n              alteredStates,\n              actors,\n              timelineIndex: newTimelineIndex\n            })\n          }\n          this.errorLogger({ type: 'isPaused' })\n        } catch (e) {\n          this.errorLogger({ type: 'isPaused', error: e })\n        }\n      } else {\n        // If the ul buttons don't have any canvases, add them!\n        const buttons = [...this._ul.querySelectorAll('button')]\n        const canvases = [...this._ul.querySelectorAll('canvas')]\n\n        if (buttons.length !== canvases.length) {\n          let tempCtx = this._canvas.getContext('2d')\n          actors.forEach((actor, i) => {\n            // If we're using the framebuffer renderer,\n            // fill the buffer with 0.\n            if (this.useFrameBufferRenderer) {\n              this._pixelIntegers.fill(0)\n            } else {\n              // Otherwise reset the context.\n              tempCtx.save()\n              tempCtx.setTransform(1, 0, 0, 1, 0, 0)\n              tempCtx.clearRect(0, 0, CANVAS_SIZE, CANVAS_SIZE)\n            }\n\n            // Draw this actor on the center of the screen.\n            window.drawActors({\n              actors: [\n                {\n                  ...actor,\n                  x: 64,\n                  y: 64\n                }\n              ]\n            })\n\n            // If we're using the framebuffer renderer,\n            // draw it to canvas right now.\n            if (this.useFrameBufferRenderer) {\n              this.writePixelDataToCanvas()\n            }\n\n            // Get its canvas.\n            const lilCanvas = trimCanvas({\n              ctx: this._canvas.getContext('2d'),\n              width: CANVAS_SIZE,\n              height: CANVAS_SIZE\n            })\n\n            // and append to button.\n            buttons[i].appendChild(lilCanvas)\n          })\n\n          this.drawUserGraphics(this.store.getState())\n          if (!this.useFrameBufferRenderer) {\n            tempCtx.restore()\n          }\n        }\n      }\n    }\n\n    // If we haven't started the timer yet, do so now.\n    if (!this.timer && !isPaused) {\n      this.startTimer()\n    }\n\n    // If we had a message,\n    if (message) {\n      // send the height to parent.\n      const height = document.body.querySelector('.container').scrollHeight\n      if (height !== this.heightSent && !this.isEmbed) {\n        message.ports[0].postMessage({ height })\n        this.heightSent = height\n      }\n    }\n  }\n\n  render() {\n    const {\n      isPaused,\n      actors,\n      alteredStates,\n      timelineIndex,\n      selectedActors,\n      fps,\n      run,\n      started\n    } = this.state\n    return (\n      <div className=\"Iframe\">\n        <div className=\"container\">\n          <canvas\n            className=\"master\"\n            width={CANVAS_SIZE}\n            height={CANVAS_SIZE}\n            ref={_canvas => {\n              this._canvas = _canvas\n            }}\n          />\n\n          <div\n            className={classNames('mobile-buttons', {\n              hide: !run\n            })}\n          >\n            <div\n              ref={this.setArrowLeftRef}\n              className=\"button left\"\n              onTouchStart={this.touchstartArrowLeft}\n              onTouchEnd={this.touchendArrowLeft}\n            >\n              &lt;\n            </div>\n            <div\n              ref={this.setArrowUpRef}\n              className=\"button up\"\n              onTouchStart={this.touchstartArrowUp}\n              onTouchEnd={this.touchendArrowUp}\n            >\n              <span>&gt;</span>\n            </div>\n            <div\n              ref={this.setArrowRightRef}\n              className=\"button right\"\n              onTouchStart={this.touchstartArrowRight}\n              onTouchEnd={this.touchendArrowRight}\n            >\n              &gt;\n            </div>\n            <div\n              ref={this.setaRef}\n              className=\"button a\"\n              onTouchStart={this.touchstarta}\n              onTouchEnd={this.touchenda}\n            >\n              A\n            </div>\n            <div\n              ref={this.setbRef}\n              className=\"button b\"\n              onTouchStart={this.touchstartb}\n              onTouchEnd={this.touchendb}\n            >\n              B\n            </div>\n            <div\n              ref={this.setArrowDownRef}\n              className=\"button down\"\n              onTouchStart={this.touchstartArrowDown}\n              onTouchEnd={this.touchendArrowDown}\n            >\n              <span>&lt;</span>\n            </div>\n            <div\n              ref={this.setSpaceRef}\n              className=\"button select\"\n              onTouchStart={this.touchstartSpace}\n              onTouchEnd={this.touchendSpace}\n            >\n              Select\n            </div>\n            <div\n              ref={this.setEnterRef}\n              className=\"button start\"\n              onTouchStart={this.touchstartEnter}\n              onTouchEnd={this.touchendEnter}\n            >\n              Start\n            </div>\n          </div>\n          <div className={classNames('stats', { invisible: run && !started })}>\n            <button className=\"button play\" onClick={this.handlePauseClick}>\n              {isPaused ? 'play' : 'pause'}\n            </button>\n\n            <button\n              className={classNames('button play', {\n                hide: isPaused\n              })}\n              onClick={this.handleRestartClick}\n            >\n              restart\n            </button>\n\n            <div\n              className={classNames('fps', {\n                hide: isPaused || true\n              })}\n            >\n              fps (avg): <span>{fps}</span>\n            </div>\n          </div>\n          <div\n            className={classNames('timeline', {\n              hide: run || alteredStates.length === 0,\n              invisible: !isPaused\n            })}\n          >\n            <input\n              type=\"range\"\n              value={timelineIndex}\n              min={0}\n              max={alteredStates.length - 1}\n              onChange={this.handleTimelineInput}\n            />\n            <ul\n              ref={_ul => {\n                this._ul = _ul\n              }}\n            >\n              {actors.map((actor, i) => (\n                <li\n                  key={actor.id}\n                  className={classNames({\n                    hide: i > 6\n                  })}\n                >\n                  <button\n                    className={classNames({\n                      active: selectedActors.includes(actor.id)\n                    })}\n                    onClick={() => this.handleActorClick(actor.id)}\n                  />\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Iframe\n","import { version } from '../../package.json'\nimport skeleton from '../skeleton.js'\nconst boot = `\n\nconst modes = ['glitch', 'numbers', 'pre-ram', 'ram', 'run', 'end']\n\nconst size = range(128)\nconst d = 1\n\nconst rects = flatten(size.map(x => size.map(y => [x, y, d, 128])))\n\nconst biosLines = range(18).map(() => {\n  return (\n    '  ' +\n    range(4)\n      .map(() => random(1000, 9999))\n      .join('      ')\n  )\n})\n\ninitialState = {\n  counter: 0,\n  totalElapsed: 0,\n  modeIndex: 0\n}\n\nupdate = (state, input, elapsed) => {\n  const mode = modes[state.modeIndex]\n\n  state.counter++\n  state.totalElapsed += elapsed\n\n  if (mode === 'glitch' && state.totalElapsed > 500) {\n    state.modeIndex++\n    state.totalElapsed = 0\n  } else if (mode === 'numbers' && state.totalElapsed > 100) {\n    state.modeIndex++\n    state.totalElapsed = 0\n  } else if (mode === 'pre-ram' && state.totalElapsed > 100) {\n    state.modeIndex++\n    state.totalElapsed = 0\n    state.counter = 0\n  } else if (mode === 'ram' && state.counter > 64 && _script8.end) {\n    // The _script8.end function is not defined until we're done fetching the gist.\n    state.modeIndex++\n    state.totalElapsed = 0\n    state.counter++\n  } else if (mode === 'run') {\n    if (input.__mousedown) {\n      ${skeleton}\n      _script8.end()\n    }\n  }\n}\n\ndraw = state => {\n  const { modeIndex, counter } = state\n  const mode = modes[modeIndex]\n\n  if (mode === 'glitch') {\n    rects.forEach(rect => {\n      rectFill(...rect, rect[0] + (rect[1] * counter) / 100)\n    })\n  }\n\n  if (mode === 'numbers') {\n    const factor = 4\n    if (counter % factor === 0) {\n      rectFill(0, 0, 128, 128, 7)\n      biosLines.forEach((line, j) => {\n        print(0, 128 + 7 * j - (7 * counter) / factor, line, 5)\n      })\n    }\n  }\n\n  if (mode === 'pre-ram') {\n    rectFill(0, 0, 128, 128, 7)\n  }\n\n  if (mode === 'ram') {\n    rectFill(0, 0, 128, 128, 6)\n    print(7, 7 * 1, 'script-8', 0)\n    print(7, 7 * 3, 'bios (c) 1980 pantron inc.', 3)\n    print(7, 7 * 4, 'version ${version}', 3)\n    print(7, 7 * 6, 'RAM: ' + Math.min(state.counter, 32) + ' kb', 3)\n\n    print(\n      7,\n      7 * 9,\n      'booting cassette ' +\n        (Math.floor(state.counter / 20) % 2 === 0 ? '' : '+'),\n      3\n    )\n\n    rectFill(48 + 3 * 0, 7, 3, 5, 0)\n    rectFill(48 + 3 * 1, 7, 3, 5, 1)\n    rectFill(48 + 3 * 2, 7, 3, 5, 2)\n    rectFill(48 + 3 * 3, 7, 3, 5, 3)\n    rectFill(48 + 3 * 4, 7, 3, 5, 4)\n    rectFill(48 + 3 * 5, 7, 3, 5, 5)\n    rectFill(48 + 3 * 6, 7, 3, 5, 4)\n    rectFill(48 + 3 * 7, 7, 3, 5, 3)\n    rectFill(48 + 3 * 8, 7, 3, 5, 2)\n    rectFill(48 + 3 * 9, 7, 3, 5, 1)\n    rectFill(48 + 3 * 10, 7, 3, 5, 0)\n  }\n\n  if (mode === 'run') {\n    rectFill(0, 0, 128, 128, 6)\n    print(7, 7 * 1, 'script-8', 0)\n    print(7, 7 * 3, 'bios (c) 1980 pantron inc.', 3)\n    print(7, 7 * 4, 'version ${version}', 3)\n    print(7, 7 * 6, 'RAM: ' + Math.min(state.counter, 32) + ' kb', 3)\n\n    print(7, 7 * 9, 'booting cassette done. ', 3)\n\n    rectFill(48 + 3 * 0, 7, 3, 5, 0)\n    rectFill(48 + 3 * 1, 7, 3, 5, 1)\n    rectFill(48 + 3 * 2, 7, 3, 5, 2)\n    rectFill(48 + 3 * 3, 7, 3, 5, 3)\n    rectFill(48 + 3 * 4, 7, 3, 5, 4)\n    rectFill(48 + 3 * 5, 7, 3, 5, 5)\n    rectFill(48 + 3 * 6, 7, 3, 5, 4)\n    rectFill(48 + 3 * 7, 7, 3, 5, 3)\n    rectFill(48 + 3 * 8, 7, 3, 5, 2)\n    rectFill(48 + 3 * 9, 7, 3, 5, 1)\n    rectFill(48 + 3 * 10, 7, 3, 5, 0)\n    print(7, 7 * 11, '> click to run', 3)\n    rectFill(7, 7 * 12, 4, 5, Math.floor(state.counter / 25) % 2 ? 0 : 6)\n  }\n}\n\n`\n\nexport default boot\n","const trimCanvas = ({ ctx, width, height }) => {\n  const pixels = ctx.getImageData(0, 0, width, height)\n  const length = pixels.data.length\n  let i\n  const bound = {\n    top: null,\n    left: null,\n    right: null,\n    bottom: null\n  }\n  let x\n  let y\n\n  for (i = 0; i < length; i += 4) {\n    if (pixels.data[i + 3] !== 0) {\n      x = (i / 4) % width\n      y = ~~(i / 4 / width)\n\n      if (bound.top === null) {\n        bound.top = y\n      }\n\n      if (bound.left === null) {\n        bound.left = x\n      } else if (x < bound.left) {\n        bound.left = x\n      }\n\n      if (bound.right === null) {\n        bound.right = x\n      } else if (bound.right < x) {\n        bound.right = x\n      }\n\n      if (bound.bottom === null) {\n        bound.bottom = y\n      } else if (bound.bottom < y) {\n        bound.bottom = y\n      }\n    }\n  }\n\n  bound.bottom += 1\n  bound.right += 1\n\n  const copyCanvas = document.createElement('canvas')\n  const copy = copyCanvas.getContext('2d')\n  const trimHeight = bound.bottom - bound.top\n  const trimWidth = bound.right - bound.left\n  const side = Math.max(trimWidth, trimHeight)\n  const trimmed = ctx.getImageData(bound.left, bound.top, trimWidth, trimHeight)\n\n  copy.canvas.width = side\n  copy.canvas.height = side\n  copy.putImageData(trimmed, 0, 0)\n  return copyCanvas\n}\n\nexport default trimCanvas\n","const validateToken = ({ token, blacklist, globals, shadows }) => {\n  let isValid\n\n  // If user types a token in blacklist,\n  // it's most definitely invalid.\n  if (blacklist.has(token)) {\n    isValid = false\n  } else if (\n    // If user types a token defined in globals or updateableGlobals,\n    // it's valid.\n    globals.has(token) ||\n    token === 'initialState' ||\n    token === 'update' ||\n    token === 'drawActors' ||\n    token === 'draw'\n  ) {\n    isValid = true\n  } else if (window.hasOwnProperty(token)) {\n    // If user types a token on window scope (e.g. `screen`),\n    // add it to the list of __shadows, and make it valid.\n    shadows.add(token)\n    isValid = true\n  } else {\n    // Otherwise, return valid.\n    isValid = true\n  }\n\n  return isValid\n}\n\nexport default validateToken\n","const createReducer = logger => {\n  // Create the reducer, with the script8 state or an empty object.\n  const reducer = (state = window.initialState || {}, action) => {\n    switch (action.type) {\n      case 'TICK': {\n        if (window.update) {\n          let newState\n          try {\n            newState = JSON.parse(JSON.stringify(state))\n            window.update(newState, action.input, action.elapsed)\n            if (newState.actors) {\n              // Find actors with no id.\n              const namelessActors = newState.actors.filter(actor => !actor.id)\n              if (namelessActors.length) {\n                throw new Error('Actors must have an id property.')\n              }\n            }\n            logger({ type: 'reducerError' })\n          } catch (error) {\n            logger({ type: 'reducerError', error })\n            return state\n          }\n          return newState\n        } else {\n          return state\n        }\n      }\n      default:\n        return state\n    }\n  }\n  return reducer\n}\n\nexport default createReducer\n","import _ from 'lodash'\nimport initialState from '../store/initialState.js'\n\nconst extractGistMap = data =>\n  JSON.parse(\n    _.get(\n      data,\n      'files[\"map.json\"].content',\n      JSON.stringify(initialState.map, null, 2)\n    )\n  )\n\nexport { extractGistMap }\n","import _ from 'lodash'\nimport initialState from '../store/initialState.js'\n\nconst extractGistSprites = data =>\n  JSON.parse(\n    _.get(\n      data,\n      'files[\"sprites.json\"].content',\n      JSON.stringify(initialState.sprites, null, 2)\n    )\n  )\nexport { extractGistSprites }\n","import _ from 'lodash'\nimport omitEmpty from 'omit-empty'\nimport initialState from '../store/initialState.js'\nimport toLetter, { letterToNumber } from '../toLetter.js'\n\nconst compressPhrases = phrases => {\n  const result = _.mapValues(phrases, phrase => {\n    const notes = _.map(phrase.notes, (note, noteIndex) =>\n      [noteIndex, toLetter(note.note), note.octave, note.volume].join('')\n    )\n    return {\n      notes,\n      tempo: _.isNil(phrase.tempo) ? 0 : phrase.tempo\n    }\n  })\n  return result\n}\n\nconst expandPhrases = phrases => {\n  // `phrases` is an object, e.g. (old style)\n  // {\n  //   \"0\": [\n  //     \"0f17\",\n  //     \"1g17\",\n  //     \"2a17\",\n\n  const result = omitEmpty(\n    _.mapValues(phrases, phrase => {\n      // If phrase is an array, it's an old kind. We have to convert it.\n      const phraseIsArray = Array.isArray(phrase)\n      const notes = _(phraseIsArray ? phrase : phrase.notes)\n        .map(note => note.match(/^(\\d+)(.*)(\\d)(\\d)/).slice(1, 5))\n        .map(match => ({\n          index: match[0],\n          note: letterToNumber(match[1]),\n          octave: +match[2],\n          volume: +match[3]\n        }))\n        .keyBy('index')\n        .mapValues(d => _.omit(d, 'index'))\n        .value()\n\n      return _.isEmpty(notes)\n        ? null\n        : {\n            notes,\n            tempo: phraseIsArray ? 0 : _.isNil(phrase.tempo) ? 0 : phrase.tempo\n          }\n    })\n  )\n\n  return result\n}\n\nconst extractGistPhrases = data =>\n  expandPhrases(\n    JSON.parse(\n      _.get(\n        data,\n        'files[\"phrases.json\"].content',\n        JSON.stringify(initialState.phrases, null, 2)\n      )\n    )\n  )\n\nexport { extractGistPhrases, compressPhrases, expandPhrases }\n","const screenTypes = {\n  BOOT: 'BOOT',\n  HOME: 'HOME',\n  RUN: 'RUN',\n  HELP: 'HELP',\n  CODE: 'CODE',\n  SPRITE: 'SPRITE',\n  MAP: 'MAP',\n  SONG: 'SONG',\n  CHAIN: 'CHAIN',\n  PHRASE: 'PHRASE',\n  SHELF: 'SHELF'\n}\n\nconst cycleOrder = [\n  screenTypes.HOME,\n  screenTypes.CODE,\n  screenTypes.SPRITE,\n  screenTypes.MAP,\n  screenTypes.PHRASE,\n  screenTypes.CHAIN,\n  screenTypes.SONG,\n  screenTypes.HELP,\n  screenTypes.SHELF,\n  screenTypes.RUN\n]\n\nconst getNextScreen = screen => {\n  const index = cycleOrder.indexOf(screen)\n  return cycleOrder[(index + 1) % cycleOrder.length]\n}\n\nconst getPreviousScreen = screen => {\n  const index = cycleOrder.indexOf(screen)\n  return cycleOrder[(index - 1 + cycleOrder.length) % cycleOrder.length]\n}\n\nexport { getNextScreen, getPreviousScreen }\n\nexport default screenTypes\n","import screenTypes from '../utils/screenTypes.js'\nimport blank from '../blank.js'\nimport { version } from '../../package.json'\n\n// TODO: why do we have to make game keys?\nconst initialState = {\n  iframeVersion: version,\n  errorLine: null,\n  screen: screenTypes.BOOT,\n  // screen: screenTypes.CODE,\n  booted: false,\n  gist: {},\n  game: {\n    0: {\n      text: blank,\n      active: true,\n      key: 0\n    }\n  },\n  token: {},\n  nextAction: null,\n  sprites: {},\n  map: [],\n  phrases: {},\n  chains: {},\n  songs: {},\n  docHistories: {},\n  dismissedNotices: [],\n  selectedUi: {\n    phrase: 0,\n    chain: 0,\n    song: 0\n  },\n  // tutorial: {\n  //   lessonIndex: 1,\n  //   slideIndex: 0\n  // },\n  tutorial: null,\n  sound: true,\n  shelving: false\n}\n\nexport default initialState\n","export default ``\n","import _ from 'lodash'\nimport initialState from '../store/initialState.js'\n\nconst extractGistChains = data =>\n  JSON.parse(\n    _.get(\n      data,\n      'files[\"chains.json\"].content',\n      JSON.stringify(initialState.chains, null, 2)\n    )\n  )\n\nexport { extractGistChains }\n","import _ from 'lodash'\nimport initialState from '../store/initialState.js'\n\nconst extractGistSongs = data =>\n  JSON.parse(\n    _.get(\n      data,\n      'files[\"songs.json\"].content',\n      JSON.stringify(initialState.songs, null, 2)\n    )\n  )\n\nexport { extractGistSongs }\n","import { detect } from 'detect-browser'\n\nconst browser = detect()\n\nconst regexLookup = {\n  /* Chrome Stack Trace Example:\n\n     TypeError: Cannot read property 'toString' of undefined\n     at print (print.js:7)\n     at print (index.js:72)\n     at draw (eval at <anonymous> (eval at evalCode (Iframe.js:644)), <anonymous>:2:3)\n     at Iframe.drawUserGraphics (Iframe.js:397)\n     at timerCallback (Iframe.js:702)\n     at tick (interval.js:10)\n     at timerFlush (timer.js:61)\n     at wake (timer.js:71)\n  */\n  chrome: /\\(eval at <anonymous> \\(eval at evalCode \\(.+:\\d+\\)\\), <anonymous>:(\\d+):(\\d+)\\)/,\n  /* Firefox Stack Trace Example:\n\n     print@http://localhost:3001/static/js/bundle.js:69091:7\n     print@http://localhost:3001/static/js/bundle.js:68699:7\n     draw@http://localhost:3001/static/js/bundle.js line 67598 > eval line 6 > eval:2:3\n     drawUserGraphics@http://localhost:3001/static/js/bundle.js:67340:9\n     timerCallback@http://localhost:3001/static/js/bundle.js:67650:11\n     tick@http://localhost:3001/static/js/bundle.js:1475:5\n     timerFlush@http://localhost:3001/static/js/bundle.js:1580:40\n     wake@http://localhost:3001/static/js/bundle.js:1590:5\n\n  */\n  firefox: /line \\d+ > eval line \\d+ > eval:(\\d+):(\\d+)/,\n  /* Edge Stack Trace Example:\n\n     TypeError: Unable to get property 'toString' of undefined or null reference\n     at print (http://localhost:3001/static/js/bundle.js:69091:3)\n     at print (http://localhost:3001/static/js/bundle.js:68699:7)\n     at draw (eval code:2:3)\n     at drawUserGraphics (http://localhost:3001/static/js/bundle.js:67340:9)\n     at timerCallback (http://localhost:3001/static/js/bundle.js:67650:11)\n     at tick (http://localhost:3001/static/js/bundle.js:1475:5)\n     at timerFlush (http://localhost:3001/static/js/bundle.js:1580:40)\n     at wake (http://localhost:3001/static/js/bundle.js:1590:5)\n  */\n  edge: /\\(eval code:(\\d+):(\\d+)\\)/\n}\n\nexport function getEvaledErrorPosition(error) {\n  const regex = regexLookup[browser.name]\n  if (regex && error.stack) {\n    const match = regex.exec(error.stack)\n    if (match) {\n      return {\n        line: match[1],\n        column: match[2]\n      }\n    }\n  } else if (browser.name === 'safari') {\n    return {\n      line: error.line,\n      column: error.column\n    }\n  }\n}\n","const drawLine = ({ x1, y1, x2, y2, setPixel, color }) => {\n  let steep = false\n\n  if (Math.abs(x1 - x2) < Math.abs(y1 - y2)) {\n    ;[x1, y1] = [y1, x1]\n    ;[x2, y2] = [y2, x2]\n    steep = true\n  }\n  if (x1 > x2) {\n    ;[x1, x2] = [x2, x1]\n    ;[y1, y2] = [y2, y1]\n  }\n\n  const dx = x2 - x1\n  const dy = y2 - y1\n  const derror = Math.abs(dy) * 2\n  let error = 0\n  let y = y1\n\n  for (let x = x1; x <= x2; x++) {\n    if (steep) {\n      setPixel(y, x, color)\n    } else {\n      setPixel(x, y, color)\n    }\n    error += derror\n    if (error > dx) {\n      if (y2 > y1) {\n        y++\n      } else {\n        y--\n      }\n      error -= dx * 2\n    }\n  }\n}\n\nexport default drawLine\n","const drawPolyStroke = ({ points, args, line }) => {\n  if (!points.length) {\n    return\n  }\n  let c, newPoints, xRot, yRot, midX, midY\n  switch (args.length) {\n    case 1:\n      // polyStroke(points, color)\n      newPoints = points.map(p => [...p])\n      c = args[0]\n      break\n    case 2:\n      // polyStroke(points, rotate, color)\n      xRot = Math.cos((args[0] / 180) * Math.PI)\n      yRot = Math.sin((args[0] / 180) * Math.PI)\n      const xs = points.map(p => p[0])\n      const ys = points.map(p => p[1])\n      midX = (Math.min.apply(Math, xs) + Math.max.apply(Math, xs)) / 2\n      midY = (Math.min.apply(Math, ys) + Math.max.apply(Math, ys)) / 2\n      newPoints = points.map(p => [\n        (p[0] - midX) * xRot - (p[1] - midY) * yRot + midX,\n        (p[0] - midX) * yRot + (p[1] - midY) * xRot + midY\n      ])\n      c = args[1]\n      break\n    case 3:\n      throw Error('`polyStroke` found 3 arguments instead of 2, 3, or 5.')\n    default:\n      // polyStroke(points, rotate, x, y, color)\n      xRot = Math.cos((args[0] / 180) * Math.PI)\n      yRot = Math.sin((args[0] / 180) * Math.PI)\n      midX = args[1]\n      midY = args[2]\n      c = args[3]\n      newPoints = points.map(p => [\n        (p[0] - midX) * xRot - (p[1] - midY) * yRot + midX,\n        (p[0] - midX) * yRot + (p[1] - midY) * xRot + midY\n      ])\n      break\n  }\n  for (let i = 1; i < points.length; i++) {\n    line(\n      Math.round(newPoints[i - 1][0]), // x1\n      Math.round(newPoints[i - 1][1]), // y1\n      Math.round(newPoints[i][0]), // x2\n      Math.round(newPoints[i][1]), // y2\n      c\n    )\n  }\n  line(\n    Math.round(newPoints[newPoints.length - 1][0]), // x1\n    Math.round(newPoints[newPoints.length - 1][1]), // y1\n    Math.round(newPoints[0][0]), // x2\n    Math.round(newPoints[0][1]), // y2\n    c\n  )\n}\n\nexport default drawPolyStroke\n","const drawCircle = ({ cx, cy, radius, color, onlyStroke, setPixel, line }) => {\n  let x = radius - 1\n  let y = 0\n  let dx = 1\n  let dy = 1\n  let err = dx - (radius << 1)\n\n  // Draw the correct primitive at x offset from the center, and y above and below the center\n  // If onlyStroke, then draw two points\n  // otherwise, draw a line connecting the two points\n  const drawReflectedPair = (x, y) => {\n    if (onlyStroke) {\n      setPixel(cx + x, cy + y, color)\n      setPixel(cx + x, cy - y, color)\n    } else {\n      line(cx + x, cy + y, cx + x, cy - y, color)\n    }\n  }\n\n  if (radius === 2) {\n    // Draw Left Pixel\n    drawReflectedPair(-1, 0)\n    // Draw Top and Bottom Pixels\n    drawReflectedPair(0, 1)\n    // Draw Right Pixel\n    drawReflectedPair(1, 0)\n  } else if (radius === 3) {\n    // Draw Left Edge\n    drawReflectedPair(-2, 0)\n    drawReflectedPair(-2, 1)\n    // Draw Top and Bottom Edge\n    drawReflectedPair(-1, 2)\n    drawReflectedPair(-0, 2)\n    drawReflectedPair(1, 2)\n    // Draw Right Edge\n    drawReflectedPair(2, 1)\n    drawReflectedPair(2, 0)\n  } else {\n    while (x >= y) {\n      // Draw every octant\n      drawReflectedPair(x, y)\n      drawReflectedPair(-x, y)\n      drawReflectedPair(y, x)\n      drawReflectedPair(-y, x)\n\n      if (err <= 0) {\n        y++\n        err += dy\n        dy += 2\n      }\n\n      if (err > 0) {\n        x--\n        dx += 2\n        err += dx - (radius << 1)\n      }\n    }\n  }\n\n}\n\nexport default drawCircle\n","import clamp from 'lodash/clamp'\n\nconst drawSprite = ({ x, y, spriteIndex, darken, flipH, flipV, setPixel, sprites }) => {\n  if (sprites[spriteIndex]) {\n    sprites[spriteIndex].slice(0, 8).forEach((cells, rowIndex) => {\n      cells.split('').forEach((color, colIndex) => {\n        if (color !== ' ') {\n          const clamped = clamp(+color - darken, 0, 7)\n          setPixel(\n            Math.floor(x) + (flipH ? 7 - colIndex : colIndex),\n            Math.floor(y) + (flipV ? 7 - rowIndex : rowIndex),\n            clamped)\n        }\n      })\n    })\n  }\n}\n\nexport default drawSprite\n","const alphabet = {\n  '<': [\n    0, 0, 1,\n    0, 1, 0,\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1,\n    0, 0, 0,\n  ],\n  '>': [\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1,\n    0, 1, 0,\n    1, 0, 0,\n    0, 0, 0,\n  ],\n  '/': [\n    0, 0, 0,\n    0, 0, 1,\n    0, 1, 0,\n    0, 1, 0,\n    1, 0, 0,\n    0, 0, 0,\n  ],\n  ':': [\n    0, 0, 0,\n    0, 0, 0,\n    0, 1, 0,\n    0, 0, 0,\n    0, 1, 0,\n    0, 0, 0,\n  ],\n  '|': [\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 0, 0,\n  ],\n  '(': [\n    0, 1,\n    1, 0,\n    1, 0,\n    1, 0,\n    0, 1,\n    0, 0,\n  ],\n  ')': [\n    1, 0,\n    0, 1,\n    0, 1,\n    0, 1,\n    1, 0,\n    0, 0,\n  ],\n  0: [\n    0, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  1: [\n    1, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  2: [\n    1, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  3: [\n    1, 1, 1,\n    0, 0, 1,\n    0, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  4: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 0,\n  ],\n  5: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  6: [\n    1, 0, 0,\n    1, 0, 0,\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  7: [\n    1, 1, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 0,\n  ],\n  8: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  9: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 0,\n  ],\n\n  ' ': [\n    0, 0,\n    0, 0,\n    0, 0,\n    0, 0,\n    0, 0,\n    0, 0\n  ],\n  '.': [\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n  ],\n  ',': [\n    0,\n    0,\n    0,\n    0,\n    1,\n    1,\n  ],\n  '+': [\n    0, 0, 0,\n    0, 1, 0,\n    1, 1, 1,\n    0, 1, 0,\n    0, 0, 0,\n    0, 0, 0\n  ],\n  '-': [\n    0, 0, 0,\n    0, 0, 0,\n    1, 1, 1,\n    0, 0, 0,\n    0, 0, 0,\n    0, 0, 0\n  ],\n  '!': [\n    1,\n    1,\n    1,\n    0,\n    1,\n    0,\n  ],\n  '?': [\n    1, 1,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 0,\n    0, 0,\n  ],\n  a: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  b: [\n    1, 1, 0,\n    1, 0, 1,\n    1, 1, 0,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  c: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 0, 0,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  d: [\n    1, 1, 0,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  e: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  f: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    1, 0, 0,\n    1, 0, 0,\n    0, 0, 0\n  ],\n  g: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  h: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  i: [\n    1, 1, 1,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  j: [\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  k: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 0,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  l: [\n    1, 0, 0,\n    1, 0, 0,\n    1, 0, 0,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  m: [\n    1, 0, 1,\n    1, 1, 1,\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  n: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  o: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  p: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 0, 0,\n    1, 0, 0,\n    0, 0, 0\n  ],\n  q: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 1, 1,\n    0, 0, 0\n  ],\n  r: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 0,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  s: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  t: [\n    1, 1, 1,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 0, 0\n  ],\n  u: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  v: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 0,\n    0, 0, 0\n  ],\n  w: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 1, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  x: [\n    1, 0, 1,\n    1, 0, 1,\n    0, 1, 0,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  y: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  z: [\n    1, 1, 1,\n    0, 0, 1,\n    0, 1, 0,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n}\n\nexport default alphabet\n","import alphabet from './alphabet.js'\n\nconst drawText = ({ x, y, letters, c, setPixel }) => {\n  let currentX = Math.floor(x)\n  let currentY = Math.floor(y)\n\n  // Loop over every letter in the string to print.\n  for (let letter of letters.toString().split('')) {\n    // Lookup the pixels for the given letter.\n    const pixels = alphabet[letter.toLowerCase()]\n    // If we don't have any pixels, then treat this character as a space which\n    // is 3 pixels wide and continue to the next character.\n    if (!pixels) {\n      currentX += 3 // Couldn't find a character\n      continue\n    }\n\n    // Calculate the letter width by dividing the pixel count\n    // by the standard letter height of 6.\n    let letterWidth = pixels.length / 6\n\n    // Loop over every pixel and draw it to the screen.\n    for (let x = 0; x < letterWidth; x++) {\n      for (let y = 0; y < 6; y++) {\n        if (pixels[y * letterWidth + x]) {\n          setPixel(currentX + x, currentY + y, c)\n        }\n      }\n    }\n\n    // Move on to the next character position by moving the previous character\n    // width plus 1 for a slight space between characters.\n    currentX += letterWidth + 1\n  }\n}\n\nexport default drawText\n","import { get } from 'lodash'\nimport colors from '../colors.js'\nimport drawLine from './line.js'\nimport drawPolyStroke from './polyStroke.js'\nimport { drawRectStroke, drawRectFill } from './rect.js'\nimport drawCircle from './circle.js'\nimport drawSprite from './sprite.js'\nimport drawText from './print.js'\n\nconst backgroundColor = 7\n\nconst canvasAPI = ({\n  pixels,\n  width: canvasWidth,\n  height: canvasHeight,\n  sprites,\n  // Rename to initialMap, since we have a function named map.\n  map: initialMap = []\n}) => {\n  let _runningMap = JSON.parse(JSON.stringify(initialMap))\n  let _cameraX = 0\n  let _cameraY = 0\n\n  const camera = (x = 0, y = 0) => {\n    _cameraX = Math.floor(x)\n    _cameraY = Math.floor(y)\n  }\n\n  const clear = (c = 7) => {\n    pixels.fill(colors.int(c))\n  }\n\n  const setPixel = (x, y, c = 0) => {\n    x = Math.floor(x - _cameraX)\n    y = Math.floor(y - _cameraY)\n    if (x < 0 || x >= canvasWidth || y < 0 || y >= canvasHeight) return\n    const int = colors.int(c)\n    if (int) pixels[y * canvasWidth + x] = int\n  }\n\n  const getPixel = (x, y) => {\n    x = Math.floor(x - _cameraX)\n    y = Math.floor(y - _cameraY)\n    if (x < 0 || x >= canvasWidth || y < 0 || y >= canvasHeight)\n      return backgroundColor\n    return colors.lookupInt(pixels[y * canvasHeight + x])\n  }\n\n  const line = (x1, y1, x2, y2, c = 0) => {\n    drawLine({ x1, y1, x2, y2, setPixel, color: c })\n  }\n\n  const polyStroke = (points, ...args) => {\n    drawPolyStroke({ points, args, line })\n  }\n\n  const rectStroke = (x, y, w, h, c = 0) => {\n    drawRectStroke({\n      x,\n      y,\n      w,\n      h,\n      c,\n      line\n    })\n  }\n\n  const rectFill = (x, y, w, h, c = 0) => {\n    drawRectFill({\n      x,\n      y,\n      w,\n      h,\n      c,\n      line\n    })\n  }\n\n  const circStroke = (x, y, r, c = 0) => {\n    drawCircle({\n      cx: Math.floor(x),\n      cy: Math.floor(y),\n      radius: Math.floor(r),\n      color: c,\n      onlyStroke: true,\n      setPixel,\n      line\n    })\n  }\n\n  const circFill = (x, y, r, c = 0) => {\n    drawCircle({\n      cx: Math.floor(x),\n      cy: Math.floor(y),\n      radius: Math.floor(r),\n      color: c,\n      setPixel,\n      line\n    })\n  }\n\n  const print = (x, y, letters, c = 0) => {\n    drawText({\n      x,\n      y,\n      letters,\n      c,\n      setPixel\n    })\n  }\n\n  const sprite = (\n    x,\n    y,\n    spriteIndex,\n    darken = 0,\n    flipH = false,\n    flipV = false\n  ) => {\n    if (x - _cameraX < -8 || x - _cameraX > canvasWidth) return\n    if (y - _cameraY < -8 || y - _cameraY > canvasHeight) return\n\n    drawSprite({\n      x,\n      y,\n      spriteIndex,\n      darken,\n      flipH,\n      flipV,\n      setPixel,\n      sprites\n    })\n  }\n\n  const getTile = (mx, my) => {\n    const tile = get(_runningMap, [my, mx], null)\n    const result = tile !== null ? sprites[tile] : null\n    if (result) {\n      result.type = result[8] || 0\n      result.number = tile\n    }\n    return result\n  }\n\n  const setTile = (mx, my, spriteNumber) => {\n    _runningMap[my][mx] = spriteNumber\n  }\n\n  const map = (x = 0, y = 0) => {\n    // Loop over every element in the map\n    _runningMap.forEach((row, rowNumber) => {\n      row.forEach((spriteIndex, colNumber) => {\n        // If the element has a sprite index,\n        if (spriteIndex !== null) {\n          // Render at the correct offset position\n          const dx = (colNumber + x) * 8\n          const dy = rowNumber * 8\n          sprite(dx, dy, spriteIndex)\n        }\n      })\n    })\n  }\n\n  const resetMap = () => {\n    _runningMap = JSON.parse(JSON.stringify(initialMap))\n  }\n\n  return {\n    camera,\n    clear,\n    setPixel,\n    getPixel,\n    line,\n    polyStroke,\n    rectStroke,\n    rectFill,\n    circStroke,\n    circFill,\n    print,\n    sprite,\n    getTile,\n    setTile,\n    map,\n    resetMap\n  }\n}\n\nexport default canvasAPI\n","export const drawRectStroke = ({ x, y, w, h, c, line }) => {\n  let left = Math.floor(x)\n  let right = Math.floor(x + w - 1)\n  let top = Math.floor(y)\n  let bottom = Math.floor(y + h - 1)\n  line(left, top, right, top, c)\n  line(left, bottom, right, bottom, c)\n  line(left, top, left, bottom, c)\n  line(right, top, right, bottom, c)\n}\n\nexport const drawRectFill = ({ x, y, w, h, c, line }) => {\n  let left = Math.floor(x)\n  let right = Math.floor(x + w - 1)\n  let top = Math.floor(y)\n  let bottom = Math.floor(y + h - 1)\n\n  for (let rectX = left; rectX <= right; rectX++) {\n    line(rectX, top, rectX, bottom, c)\n  }\n}\n","const circle = ({ cx, cy, radius, ctx, color, onlyStroke }) => {\n  let x = radius - 1\n  let y = 0\n  let dx = 1\n  let dy = 1\n  let err = dx - (radius << 1)\n\n  ctx.fillStyle = color\n  ctx.strokeStyle = color\n\n  const drawPixel = (x, y) => {\n    ctx.fillRect(x, y, 1, 1)\n  }\n\n  const drawLine = ({ x0, x1, y }) => {\n    ctx.beginPath()\n    ctx.moveTo(x0 + 1, y + 0.5)\n    ctx.lineTo(x1, y + 0.5)\n    ctx.stroke()\n  }\n\n  if (radius === 2) {\n    drawPixel(cx + 1, cy)\n    drawPixel(cx - 1, cy)\n    drawPixel(cx, cy + 1)\n    drawPixel(cx, cy - 1)\n    if (!onlyStroke) {\n      drawPixel(cx, cy)\n    }\n  } else if (radius === 3) {\n    drawLine({ x0: cx - 2, x1: cx + 2, y: cy - 2 })\n    drawLine({ x0: cx - 2, x1: cx + 2, y: cy + 2 })\n    if (onlyStroke) {\n      drawPixel(cx + 2, cy - 1)\n      drawPixel(cx + 2, cy)\n      drawPixel(cx + 2, cy + 1)\n      drawPixel(cx - 2, cy - 1)\n      drawPixel(cx - 2, cy)\n      drawPixel(cx - 2, cy + 1)\n    } else {\n      drawLine({ x0: cx - 3, x1: cx + 3, y: cy - 1 })\n      drawLine({ x0: cx - 3, x1: cx + 3, y: cy })\n      drawLine({ x0: cx - 3, x1: cx + 3, y: cy + 1 })\n    }\n  } else {\n    while (x >= y) {\n      if (onlyStroke) {\n        drawPixel(cx + x, cy + y)\n        drawPixel(cx - x, cy + y)\n        drawPixel(cx + y, cy + x)\n        drawPixel(cx - y, cy + x)\n        drawPixel(cx + x, cy - y)\n        drawPixel(cx - x, cy - y)\n        drawPixel(cx + y, cy - x)\n        drawPixel(cx - y, cy - x)\n      } else {\n        drawLine({ x0: cx + y, x1: cx - y, y: cy - x })\n        drawLine({ x0: cx + x, x1: cx - x, y: cy - y })\n        drawLine({ x0: cx + x, x1: cx - x, y: cy + y })\n        drawLine({ x0: cx + y, x1: cx - y, y: cy + x })\n      }\n      if (err <= 0) {\n        y++\n        err += dy\n        dy += 2\n      }\n      if (err > 0) {\n        x--\n        dx += 2\n        err += dx - (radius << 1)\n      }\n    }\n  }\n}\n\nexport default circle\n","const line = ({ x1, y1, x2, y2, ctx, color }) => {\n  ctx.fillStyle = color\n  let steep = false\n\n  if (Math.abs(x1 - x2) < Math.abs(y1 - y2)) {\n    ;[x1, y1] = [y1, x1]\n    ;[x2, y2] = [y2, x2]\n    steep = true\n  }\n  if (x1 > x2) {\n    ;[x1, x2] = [x2, x1]\n    ;[y1, y2] = [y2, y1]\n  }\n\n  const dx = x2 - x1\n  const dy = y2 - y1\n  const derror = Math.abs(dy) * 2\n  let error = 0\n  let y = y1\n\n  for (let x = x1; x <= x2; x++) {\n    if (steep) {\n      ctx.fillRect(y, x, 1, 1)\n    } else {\n      ctx.fillRect(x, y, 1, 1)\n    }\n    error += derror\n    if (error > dx) {\n      if (y2 > y1) {\n        y++\n      } else {\n        y--\n      }\n      error -= dx * 2\n    }\n  }\n}\n\nexport default line\n","import colors from '../colors.js'\nimport line from './line.js'\n\nconst polyStroke = ({ points, args, ctx }) => {\n  if (!points.length) {\n    return\n  }\n  let c, newPoints, xRot, yRot, midX, midY\n  switch (args.length) {\n    case 1:\n      // polyStroke(points, color)\n      newPoints = points.map(p => [...p])\n      c = args[0]\n      break\n    case 2:\n      // polyStroke(points, rotate, color)\n      xRot = Math.cos((args[0] / 180) * Math.PI)\n      yRot = Math.sin((args[0] / 180) * Math.PI)\n      const xs = points.map(p => p[0])\n      const ys = points.map(p => p[1])\n      midX = (Math.min.apply(Math, xs) + Math.max.apply(Math, xs)) / 2\n      midY = (Math.min.apply(Math, ys) + Math.max.apply(Math, ys)) / 2\n      newPoints = points.map(p => [\n        (p[0] - midX) * xRot - (p[1] - midY) * yRot + midX,\n        (p[0] - midX) * yRot + (p[1] - midY) * xRot + midY\n      ])\n      c = args[1]\n      break\n    case 3:\n      throw Error('`polyStroke` found 3 arguments instead of 2, 3, or 5.')\n    default:\n      // polyStroke(points, rotate, x, y, color)\n      xRot = Math.cos((args[0] / 180) * Math.PI)\n      yRot = Math.sin((args[0] / 180) * Math.PI)\n      midX = args[1]\n      midY = args[2]\n      c = args[3]\n      newPoints = points.map(p => [\n        (p[0] - midX) * xRot - (p[1] - midY) * yRot + midX,\n        (p[0] - midX) * yRot + (p[1] - midY) * xRot + midY\n      ])\n      break\n  }\n  for (let i = 1; i < points.length; i++) {\n    line({\n      x1: Math.round(newPoints[i - 1][0]),\n      y1: Math.round(newPoints[i - 1][1]),\n      x2: Math.round(newPoints[i][0]),\n      y2: Math.round(newPoints[i][1]),\n      ctx,\n      color: colors.rgb(c)\n    })\n  }\n  line({\n    x1: Math.round(newPoints[newPoints.length - 1][0]),\n    y1: Math.round(newPoints[newPoints.length - 1][1]),\n    x2: Math.round(newPoints[0][0]),\n    y2: Math.round(newPoints[0][1]),\n    ctx,\n    color: colors.rgb(c)\n  })\n}\n\nexport default polyStroke\n","const alphabet = {\n  '<': [\n    0, 0, 1,\n    0, 1, 0,\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1,\n    0, 0, 0,\n  ],\n  '>': [\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1,\n    0, 1, 0,\n    1, 0, 0,\n    0, 0, 0,\n  ],\n  '/': [\n    0, 0, 0,\n    0, 0, 1,\n    0, 1, 0,\n    0, 1, 0,\n    1, 0, 0,\n    0, 0, 0,\n  ],\n  ':': [\n    0, 0, 0,\n    0, 0, 0,\n    0, 1, 0,\n    0, 0, 0,\n    0, 1, 0,\n    0, 0, 0,\n  ],\n  '|': [\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 0, 0,\n  ],\n  '(': [\n    0, 1,\n    1, 0,\n    1, 0,\n    1, 0,\n    0, 1,\n    0, 0,\n  ],\n  ')': [\n    1, 0,\n    0, 1,\n    0, 1,\n    0, 1,\n    1, 0,\n    0, 0,\n  ],\n  0: [\n    0, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  1: [\n    1, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  2: [\n    1, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  3: [\n    1, 1, 1,\n    0, 0, 1,\n    0, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  4: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 0,\n  ],\n  5: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  6: [\n    1, 0, 0,\n    1, 0, 0,\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  7: [\n    1, 1, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 0,\n  ],\n  8: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  9: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 0,\n  ],\n\n  ' ': [\n    0, 0,\n    0, 0,\n    0, 0,\n    0, 0,\n    0, 0,\n    0, 0\n  ],\n  '.': [\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n  ],\n  ',': [\n    0,\n    0,\n    0,\n    0,\n    1,\n    1,\n  ],\n  '+': [\n    0, 0, 0,\n    0, 1, 0,\n    1, 1, 1,\n    0, 1, 0,\n    0, 0, 0,\n    0, 0, 0\n  ],\n  '-': [\n    0, 0, 0,\n    0, 0, 0,\n    1, 1, 1,\n    0, 0, 0,\n    0, 0, 0,\n    0, 0, 0\n  ],\n  '!': [\n    1,\n    1,\n    1,\n    0,\n    1,\n    0,\n  ],\n  '?': [\n    1, 1,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 0,\n    0, 0,\n  ],\n  a: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  b: [\n    1, 1, 0,\n    1, 0, 1,\n    1, 1, 0,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  c: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 0, 0,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  d: [\n    1, 1, 0,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  e: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  f: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    1, 0, 0,\n    1, 0, 0,\n    0, 0, 0\n  ],\n  g: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  h: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  i: [\n    1, 1, 1,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  j: [\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  k: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 0,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  l: [\n    1, 0, 0,\n    1, 0, 0,\n    1, 0, 0,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  m: [\n    1, 0, 1,\n    1, 1, 1,\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  n: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  o: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  p: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 0, 0,\n    1, 0, 0,\n    0, 0, 0\n  ],\n  q: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 1, 1,\n    0, 0, 0\n  ],\n  r: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 0,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  s: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  t: [\n    1, 1, 1,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 0, 0\n  ],\n  u: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  v: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 0,\n    0, 0, 0\n  ],\n  w: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 1, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  x: [\n    1, 0, 1,\n    1, 0, 1,\n    0, 1, 0,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  y: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  z: [\n    1, 1, 1,\n    0, 0, 1,\n    0, 1, 0,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n}\n\nexport default alphabet\n","import colors from '../colors.js'\nimport alphabet from './alphabet.js'\n\nconst print = ({ x, y, letters, c, ctx }) => {\n  const color = colors.triplet(c)\n\n  const grids = letters\n    .toString()\n    // Split into individual letters.\n    .split('')\n    // Get the pixels and the letter's width.\n    .map(letter => {\n      const pixels = alphabet[letter.toLowerCase()]\n      return {\n        // If we found a matching letter in the alphabet,\n        // return its width.\n        // Otherwise if the user tries to print a character\n        // we haven't defined, just return 3.\n        width: pixels ? pixels.length / 6 : 3,\n        letter,\n        pixels\n      }\n    })\n    // Calculate running offsets.\n    .reduce((acc, current, index) => {\n      const previous = acc[index - 1]\n      const xOffset = previous ? previous.width + 1 + previous.xOffset : 0\n      const yOffset = previous ? previous.yOffset : 0\n\n      return [\n        ...acc,\n        {\n          ...current,\n          xOffset,\n          yOffset\n        }\n      ]\n    }, [])\n    // Ignore letters with no matches.\n    .filter(d => d.pixels)\n\n  // For each grid of pixels,\n  grids.forEach(grid => {\n    // get some properties,\n    const { pixels, xOffset, yOffset, width } = grid\n\n    // get the image data this letter will occupy,\n    const imageData = ctx.getImageData(x + xOffset, y + yOffset, width, 6)\n    const { data } = imageData\n\n    // and for each pixel,\n    pixels\n      .map((pixel, pixelIndex) => ({ pixel, pixelIndex }))\n      // ignore pixels set to 0,\n      .filter(d => d.pixel)\n      // and update the underlying canvas data.\n      .forEach(d => {\n        const offset = d.pixelIndex * 4\n        data[offset + 0] = color[0]\n        data[offset + 1] = color[1]\n        data[offset + 2] = color[2]\n        data[offset + 3] = 255\n      })\n\n    // And draw!\n    ctx.putImageData(imageData, x + xOffset, y + yOffset)\n  })\n}\n\nexport default print\n","import clamp from 'lodash/clamp'\nimport colors from '../colors.js'\n\nconst sprite = ({\n  x,\n  y,\n  spriteIndex,\n  darken = 0,\n  flipH = false,\n  flipV = false,\n  sprites,\n  ctx\n}) => {\n  if (sprites[spriteIndex]) {\n    sprites[spriteIndex].slice(0, 8).forEach((cells, rowIndex) => {\n      cells.split('').forEach((color, colIndex) => {\n        if (color !== ' ') {\n          const clamped = clamp(+color - darken, 0, 7)\n          ctx.fillStyle = colors.rgb(clamped)\n          ctx.fillRect(\n            Math.floor(x) + (flipH ? 7 - colIndex : colIndex),\n            Math.floor(y) + (flipV ? 7 - rowIndex : rowIndex),\n            1,\n            1\n          )\n        }\n      })\n    })\n  }\n}\n\nconst pixelSprite = ({ x, y, grid, ctx }) => {\n  grid.slice(0, 8).forEach((cells, rowIndex) => {\n    cells.split('').forEach((color, colIndex) => {\n      if (color !== ' ') {\n        ctx.fillStyle = colors.rgb(+color)\n        ctx.fillRect(Math.floor(x) + colIndex, Math.floor(y) + rowIndex, 1, 1)\n      }\n    })\n  })\n}\n\nexport { pixelSprite }\n\nexport default sprite\n","import { get, isNil } from 'lodash'\nimport colors from '../colors.js'\nimport circle from './circle.js'\nimport line from './line.js'\nimport polyStroke from './polyStroke.js'\nimport print from './print.js'\nimport sprite, { pixelSprite } from './sprite.js'\nimport { getPixel, setPixel } from './pixel.js'\n\n// let mapDraws = []\n// let avgDraws = []\n// let draws = 0\n// let skips = 0\n\nconst canvasAPI = ({\n  ctx,\n  width: canvasWidth,\n  height: canvasHeight,\n  sprites,\n  map = []\n}) => {\n  let _runningMap = JSON.parse(JSON.stringify(map))\n  ctx.setTransform(1, 0, 0, 1, 0, 0)\n\n  let _cameraX = 0\n\n  let _cameraY = 0\n\n  const _memoryCanvas = document.createElement('canvas')\n  _memoryCanvas.width = canvasWidth\n  _memoryCanvas.height = canvasHeight\n  const _mCtx = _memoryCanvas.getContext('2d')\n\n  Object.entries(sprites).forEach(([skey, value]) => {\n    const key = +skey\n    const row = Math.floor(key / 16)\n    const col = key % 16\n    pixelSprite({ x: col * 8, y: row * 8, grid: value, ctx: _mCtx })\n  })\n\n  return {\n    polyStroke(points, ...args) {\n      polyStroke({ points, args, ctx })\n    },\n\n    getTile(mx, my) {\n      const tile = get(_runningMap, [my, mx], null)\n      let result = tile !== null ? sprites[tile] : null\n      if (result) {\n        result.type = result[8] || 0\n        result.number = tile\n      }\n      return result\n    },\n\n    setTile(mx, my, spriteNumber) {\n      _runningMap[my][mx] = spriteNumber\n    },\n\n    line(x1, y1, x2, y2, c = 0) {\n      line({\n        x1: Math.floor(x1),\n        y1: Math.floor(y1),\n        x2: Math.floor(x2),\n        y2: Math.floor(y2),\n        ctx,\n        color: colors.rgb(c)\n      })\n    },\n\n    print(x, y, letters, c = 0) {\n      print({\n        x: x - _cameraX,\n        y: y - _cameraY,\n        letters,\n        c,\n        ctx\n      })\n    },\n\n    rectStroke(x, y, w, h, c = 0) {\n      ctx.strokeStyle = colors.rgb(c)\n      ctx.strokeRect(\n        Math.floor(x) + 0.5,\n        Math.floor(y) + 0.5,\n        Math.floor(w) - 1,\n        Math.floor(h) - 1\n      )\n    },\n\n    camera(x = 0, y = 0) {\n      _cameraX = Math.floor(x)\n      _cameraY = Math.floor(y)\n      ctx.setTransform(1, 0, 0, 1, 0, 0)\n      ctx.translate(-_cameraX, -_cameraY)\n    },\n\n    rectFill(x, y, w, h, c = 0) {\n      ctx.fillStyle = colors.rgb(c)\n      ctx.fillRect(Math.floor(x), Math.floor(y), Math.floor(w), Math.floor(h))\n    },\n\n    resetMap() {\n      _runningMap = JSON.parse(JSON.stringify(map))\n    },\n\n    map(x = 0, y = 0) {\n      // const before = Date.now()\n      _runningMap.forEach((row, rowNumber) => {\n        row.forEach((spriteIndex, colNumber) => {\n          if (spriteIndex !== null) {\n            const sx = (spriteIndex % 16) * 8\n            const sy = Math.floor(spriteIndex / 16) * 8\n            const sWidth = 8\n            const sHeight = 8\n            const dx = (colNumber + x) * 8\n            const dy = rowNumber * 8\n            const dWidth = 8\n            const dHeight = 8\n\n            if (\n              dx + 7 >= _cameraX &&\n              dx < _cameraX + 128 &&\n              dy + 7 >= _cameraY &&\n              dy < _cameraY + 128\n            ) {\n              // ++draws\n              ctx.drawImage(\n                _memoryCanvas,\n                sx,\n                sy,\n                sWidth,\n                sHeight,\n                dx,\n                dy,\n                dWidth,\n                dHeight\n              )\n            } else {\n              // ++skips\n            }\n          }\n        })\n      })\n\n      // const after = Date.now()\n      // mapDraws.push(after - before)\n      // if (mapDraws.length > 60) {\n      //   const avg = sum(mapDraws) / mapDraws.length\n      //   // console.log(`map() avg: ${sum(mapDraws) / mapDraws.length}ms`)\n      //   // console.log({ _cameraX, _cameraY })\n      //   mapDraws = []\n      //   avgDraws.push(avg)\n      //   if (avgDraws.length % 10 === 0) {\n      //     console.log(`AVG AVG: ${sum(avgDraws) / avgDraws.length}ms`)\n      //     console.log(`DRAWS/SKIPS: ${draws / skips} (${draws}/${skips})`)\n      //   }\n      // }\n    },\n\n    sprite(x, y, spriteIndex, darken = 0, flipH = false, flipV = false) {\n      sprite({\n        x,\n        y,\n        spriteIndex,\n        darken,\n        flipH,\n        flipV,\n        sprites,\n        ctx\n      })\n    },\n\n    circStroke(x, y, r, c = 0) {\n      circle({\n        cx: Math.floor(x),\n        cy: Math.floor(y),\n        radius: Math.floor(r),\n        ctx,\n        color: colors.rgb(c),\n        onlyStroke: true\n      })\n    },\n\n    circFill(x, y, r, c = 0) {\n      circle({\n        cx: Math.floor(x),\n        cy: Math.floor(y),\n        radius: Math.floor(r),\n        ctx,\n        color: colors.rgb(c)\n      })\n    },\n\n    clear(c) {\n      ctx.save()\n      ctx.setTransform(1, 0, 0, 1, 0, 0)\n      if (!isNil(c)) {\n        ctx.fillStyle = colors.rgb(c)\n        ctx.fillRect(0, 0, 128, 128)\n      } else {\n        ctx.clearRect(0, 0, canvasWidth, canvasHeight)\n      }\n      ctx.restore()\n    },\n\n    getPixel(x, y) {\n      return getPixel({\n        x: Math.floor(x - _cameraX),\n        y: Math.floor(y - _cameraY),\n        ctx\n      })\n    },\n\n    setPixel(x, y, c = 0) {\n      setPixel({\n        x: Math.floor(x),\n        y: Math.floor(y),\n        ctx,\n        color: colors.rgb(c)\n      })\n    }\n  }\n}\n\nexport default canvasAPI\n","import colors from '../colors.js'\n\nconst backgroundColor = 7\n\nconst getPixel = ({ x, y, ctx }) => {\n  // pixel: [r, g, b, a]\n  const [r, g, b, alpha] = ctx.getImageData(x, y, 1, 1).data\n\n  // If pixel isn't opaque, return default.\n  if (alpha !== 255) {\n    return backgroundColor\n  }\n\n  // If color wasn't recognized, return default.\n  const color = colors.lookup([r, g, b, alpha])\n  if (color === null) {\n    return backgroundColor\n  }\n\n  return color\n}\n\nconst setPixel = ({ x, y, ctx, color }) => {\n  ctx.fillStyle = color\n  ctx.fillRect(x, y, 1, 1)\n}\n\nexport { getPixel, setPixel }\n","const settings = {\n  octaves: 4,\n  volumes: 8,\n  phrases: 8 * 8,\n  chains: 8 * 8,\n  songs: 8,\n  matrixLength: 16,\n  chainChannels: 4,\n  startOffset: '+0.1',\n  startOffsetDouble: '+0.5',\n  bpm: 144,\n  subdivision: '4n'\n}\n\nexport default settings\n","import settings from './settings.js'\nconst normalize = {\n  volume: vol => (vol + 1) / settings.volumes,\n  note: note => note\n}\n\nexport default normalize\n","import * as Tone from 'tone'\nimport _ from 'lodash'\nimport toLetter from '../toLetter.js'\nimport normalize from '../normalize.js'\nimport settings from '../settings.js'\n\nconst pulseOptions = {\n  oscillator: {\n    type: 'triangle'\n  },\n  envelope: {\n    release: 0.07\n  }\n}\n\nconst tempoToPlaybackRate = tempo => [1, 2, 3, 5, 8, 13, 21, 34][tempo]\nconst tempoToSubdivision = tempo => tempoToPlaybackRate(tempo) * 4 + 'n'\n\nconst createSynth = volumeNode => {\n  const pulseSynth = new Tone.Synth(pulseOptions)\n  if (volumeNode) {\n    pulseSynth.chain(volumeNode, Tone.Master)\n  } else {\n    pulseSynth.chain(Tone.Master)\n  }\n  return pulseSynth\n}\n\nconst playNote = ({\n  note,\n  octave,\n  volume,\n  time = Tone.context.currentTime,\n  synth,\n  tempo\n}) => {\n  // If time is not provided, we want to play the note right now - use currentTime.\n  // If time is provided,\n  // if it is in the past (smaller than currentTime),\n  // don't play the note.\n  // Otherwise play the note.\n  if (time >= Tone.context.currentTime) {\n    const normalizedVolume = normalize.volume(volume)\n    const letter = toLetter(note + octave * 12, true, true)\n    const subdivision = tempoToSubdivision(tempo)\n    synth.triggerAttackRelease(letter, subdivision, time, normalizedVolume)\n  }\n}\n\nconst soundAPI = volumeNode => {\n  const chainSynths = _.range(settings.chainChannels).map(() =>\n    createSynth(volumeNode)\n  )\n  const phraseSynth = createSynth(volumeNode)\n\n  Tone.Transport.bpm.value = settings.bpm\n  Tone.Transport.start(settings.startOffset)\n\n  let songContainers = {}\n  let localPhrases = {}\n  let phrasePool = []\n\n  const stopSong = () => {\n    // Stop all sequences.\n    // console.log('soundAPI.stopSong() BEGIN----------')\n    // const before = Date.now()\n    _.forEach(songContainers, ({ sequence }, key) => {\n      if (sequence) {\n        sequence.stop()\n        // console.log(`stopping song with key: ${key}`)\n      }\n    })\n    // const after = Date.now()\n    // console.log(`soundAPI.stopSong() END ${after - before}ms`)\n  }\n\n  const makeSongs = ({ songs, chains, phrases }) => {\n    // console.log(`soundAPI.makeSongs() BEGIN----------`)\n    // const before = Date.now()\n    stopSong()\n    localPhrases = phrases\n    songContainers = _.mapValues(songs, song =>\n      makeSongContainer({ song, chains, phrases })\n    )\n    // const after = Date.now()\n    // console.log(`soundAPI.makeSongs() END ${after - before}ms`)\n  }\n\n  const makeSongContainer = ({ song, chains, phrases }) => {\n    // const before = Date.now()\n    // Create an array of note positions.\n    // There's a lot going on here, but the gist:\n    // create an array of all the notes, but remove nulls from the end,\n    // so that we can make a Tone Sequence that is the right length and no more.\n    // This is good for performance.\n\n    // For matrixLength cubed (chains * phrases * notes),\n    const notePositions = _(_.range(Math.pow(settings.matrixLength, 3)))\n      .map(index => {\n        // Get the chain, phrase and note positions by using base math.\n        const [chainPosition, phrasePosition, notePosition] = _.padStart(\n          index.toString(settings.matrixLength),\n          3,\n          0\n        )\n          .split('')\n          .map(d => parseInt(d, settings.matrixLength))\n\n        // Get the chain index for this position.\n        const chainIndex = _.get(song, chainPosition)\n\n        // Get the chain.\n        const chain = _.get(chains, chainIndex)\n\n        // Get the phrase indices for this position, e.g. { 0: 0, 1: 11, 2: 2 }\n        const phrasesIndices = _.get(chain, phrasePosition)\n\n        // For each channel,\n        return (\n          _.range(settings.chainChannels)\n            .map(channel => {\n              // Get the phrase index for this channel.\n              const phraseIndex = _.get(phrasesIndices, channel)\n              let result\n\n              // If the phrase index exists,\n              if (!_.isNil(phraseIndex)) {\n                // get the phrase assigned to this channel.\n                const phrase = _.get(phrases, phraseIndex, {})\n\n                // Get the note element for this position.\n                const noteElement = _.get(phrase.notes, notePosition)\n\n                // If we have a note,\n                if (!_.isNil(noteElement)) {\n                  // add it to the result.\n                  result = {\n                    channel,\n                    noteElement\n                  }\n                }\n              }\n              return result\n            })\n            // Only keep non-null elements.\n            .filter(d => d)\n        )\n      })\n      // NOW we can drop from right.\n      .dropRightWhile(_.isEmpty)\n      .value()\n\n    const callback = (time, position) => {\n      notePositions[position].forEach(d => {\n        const { channel, noteElement } = d\n        playNote({\n          ...noteElement,\n          time: time,\n          synth: chainSynths[channel],\n          tempo: 0\n        })\n      })\n    }\n\n    const events = _.range(notePositions.length)\n\n    // const after = Date.now()\n    // console.log(`soundAPI.makeSongContainer() took ${after - before}ms`)\n\n    return {\n      callback,\n      events,\n      sequence: null\n    }\n  }\n\n  const playSong = (number, loop = false) => {\n    // console.log(`soundAPI.playSong() BEGIN----------`)\n    // const before = Date.now()\n    stopSong()\n\n    // console.log(`going to play song with key ${number}`)\n    _.forEach(songContainers, (value, key) => {\n      if (+key === number) {\n        // console.log(`found one: key ${key}`)\n        value.sequence = new Tone.Sequence(\n          value.callback,\n          value.events,\n          settings.subdivision\n        )\n        value.sequence.loop = loop\n        value.sequence.playbackRate = tempoToPlaybackRate(0)\n        value.sequence.start(settings.startOffset)\n      }\n    })\n    // const after = Date.now()\n    // console.log(`soundAPI.playSong() END took ${after - before}ms`)\n  }\n\n  const playPhrase = number => {\n    // const before = Date.now()\n    const phrase = _.get(localPhrases, number)\n    if (phrase) {\n      while (phrasePool.length) {\n        const popped = phrasePool.pop()\n        popped.dispose()\n      }\n\n      const { tempo } = phrase\n\n      const sequence = new Tone.Sequence(\n        (time, index) => {\n          const value = phrase.notes[index]\n          if (value) {\n            // console.log(`phraseSynth volume`)\n            // console.log({ volume: phraseSynth.volume.value })\n            playNote({ ...value, time, synth: phraseSynth, tempo })\n          }\n        },\n        _.range(settings.matrixLength),\n        settings.subdivision\n      )\n      sequence.loop = false\n      sequence.playbackRate = tempoToPlaybackRate(tempo)\n      sequence.start()\n      phrasePool.push(sequence)\n      // const after = Date.now()\n      // console.log(`soundAPI.playPhrase() took ${after - before}ms`)\n    }\n  }\n  return {\n    playSong,\n    makeSongs,\n    stopSong,\n    playPhrase\n  }\n}\n\nexport { createSynth, playNote, tempoToPlaybackRate }\n\nexport default soundAPI\n"],"sourceRoot":""}