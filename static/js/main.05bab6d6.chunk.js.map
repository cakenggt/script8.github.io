{"version":3,"sources":["settings.js","normalize.js","soundAPI/index.js","index.js","toLetter.js","colors.js","skeleton.js","getUserInput.js","utils/runningSum.js","gistParsers/game.js","Iframe.js","utils/bios.js","contextCanvasAPI/trimCanvas.js","validateToken.js","createReducer.js","utils/screenTypes.js","store/initialState.js","blank.js","gistParsers/map.js","gistParsers/sprites.js","gistParsers/phrases.js","gistParsers/chains.js","gistParsers/songs.js","utils/errorLocation.js","frameBufferCanvasAPI/line.js","frameBufferCanvasAPI/polyStroke.js","frameBufferCanvasAPI/circle.js","frameBufferCanvasAPI/sprite.js","frameBufferCanvasAPI/alphabet.js","frameBufferCanvasAPI/print.js","frameBufferCanvasAPI/index.js","frameBufferCanvasAPI/rect.js","contextCanvasAPI/circle.js","contextCanvasAPI/line.js","contextCanvasAPI/polyStroke.js","contextCanvasAPI/alphabet.js","contextCanvasAPI/print.js","contextCanvasAPI/sprite.js","contextCanvasAPI/index.js","contextCanvasAPI/pixel.js"],"names":["settings","octaves","volumes","phrases","chains","songs","matrixLength","chainChannels","startOffset","startOffsetDouble","bpm","subdivision","normalize","volume","vol","note","pulseOptions","oscillator","type","envelope","release","tempoToPlaybackRate","tempo","createSynth","volumeNode","pulseSynth","Tone","chain","playNote","_ref","octave","_ref$time","time","currentTime","synth","normalizedVolume","letter","toLetter","tempoToSubdivision","triggerAttackRelease","soundAPI","chainSynths","_","range","map","phraseSynth","value","start","songContainers","localPhrases","phrasePool","stopSong","forEach","_ref2","key","sequence","stop","makeSongContainer","_ref4","song","notePositions","Math","pow","index","_$padStart$split$map","padStart","toString","split","d","parseInt","_$padStart$split$map2","Object","slicedToArray","chainPosition","phrasePosition","notePosition","chainIndex","get","phrasesIndices","channel","result","phraseIndex","isNil","phrase","noteElement","notes","filter","dropRightWhile","isEmpty","callback","position","objectSpread","events","length","playSong","number","loop","arguments","undefined","playbackRate","makeSongs","_ref3","mapValues","playPhrase","pop","dispose","push","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","_Iframe__WEBPACK_IMPORTED_MODULE_2__","ReactDOM","render","a","createElement","document","getElementById","letterToNumber","indexOf","includeOctave","numberToNote","floor","numberToOctave","concat","triplets","rgbStrings","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","g","b","intLookup","i","values","possiblyNegativeInteger","reverseIntLookup","colors","rgb","triplet","int","lookupInt","allowedKeys","previousUserInput","getUserInput","keys","buttons","window","navigator","getGamepads","newUserInput","__mousedown","has","up","pressed","right","down","left","select","_arr","_i","startsWith","keyPressed","keyReleased","runningSum","array","reduce","acc","cur","idx","previous","toConsumableArray","assembleOrderedGame","game","orderBy","join","parseGistGame","data","misc","JSON","parse","content","lines","ranges","contentLines","defineProperty","text","slice","apply","active","0","platform","console","log","stringify","version","getUniqueErrorMessages","errors","sortBy","uniqBy","init","update","drawActors","draw","_script8","embedState","reservedTokens","Set","NOOP","FPS","REDUX_HISTORY_SECONDS","CANVAS_SIZE","ACTOR_FRAME_SKIP","Iframe","props","_this","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","this","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","call","ArrowUpElement","setArrowUpRef","e","ArrowRightElement","setArrowRightRef","ArrowDownElement","setArrowDownRef","ArrowLeftElement","setArrowLeftRef","aElement","setaRef","bElement","setbRef","EnterElement","setEnterRef","SpaceElement","setSpaceRef","touchstartArrowUp","bind","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","touchstartArrowRight","touchstartArrowDown","touchstartArrowLeft","touchstarta","touchstartb","touchstartEnter","touchstartSpace","touchendArrowUp","touchendArrowRight","touchendArrowDown","touchendArrowLeft","touchenda","touchendb","touchendEnter","touchendSpace","sendLogToParent","sendErrorToParent","loggerErrors","printErrorsToCassetteScreen","updateGlobals","evalCode","startTimer","handleTimelineInput","handleActorClick","handlePauseClick","handleRestartClick","heightSent","shadows","blacklist","timer","previousElapsed","pastFpsValues","reducer","createReducer","store","previousInitString","reduxHistory","reduxLogger","next","action","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","state","getState","soundFunctions","songSequences","started","fps","sprites","timelineIndex","actors","selectedActors","message","callbacks","isPaused","alteredStates","run","sound","_pixelData","ImageData","_pixelBuffer","ArrayBuffer","_pixelBytes","Uint8ClampedArray","_pixelIntegers","Uint32Array","classList","add","remove","delete","isEmbed","_this$state","ports","postMessage","_ref$error","error","_this$state2","errorData","getEvaledErrorPosition","errorMessages","chunk","errorMessage","theString","x","y","print","useFrameBufferRenderer","writePixelDataToCanvas","providedGlobals","globals","canvasAPI","frameBufferCanvasAPI","contextCanvasAPI","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","StateMachine","Array","pixels","ctx","_canvas","getContext","width","height","flatten","random","clamp","set","putImageData","_this2","USE_FRAME_BUFFER_RENDERER","mousedownHandler","mouseupHandler","keydownHandler","event","altKey","metaKey","ctrlKey","includes","preventDefault","shortcut","stopPropagation","keyupHandler","addEventListener","handleData","_message$data","payload","_Users_floritg_Documents_other_script_8_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","setState","invalidTokenIndex","tokens","findIndex","token","validateToken","smallCanvas","drawImage","toDataURL","SCRIPT_8_EMBEDDED_GIST_ID","fetch","process","then","response","json","gist","bios","isDoneFetching","extractGistSongs","extractGistChains","extractGistPhrases","extractGistSprites","extractGistMap","removeEventListener","_this3","end","once","endCallback","shadowString","innerSkeleton","skeleton","eval","_this4","interval","elapsed","newFps","tickLength","round","sum","userInput","dispatch","input","drawUserGraphics","target","actorName","Date","now","forceUpdate","stopTimer","prevProps","prevState","_this5","equal","mute","_ul","querySelectorAll","canvases","tempCtx","actor","fill","save","setTransform","clearRect","lilCanvas","trimCanvas","appendChild","restore","createStore","newTimelineIndex","stateToDraw","allActors","id","matchingActors","lastAlteredState","storeState","applyMiddleware","body","querySelector","scrollHeight","_this6","_this$state3","react__WEBPACK_IMPORTED_MODULE_9___default","className","ref","classNames","hide","onTouchStart","onTouchEnd","invisible","onClick","min","max","onChange","Component","_package_json__WEBPACK_IMPORTED_MODULE_0__","_skeleton_js__WEBPACK_IMPORTED_MODULE_1__","boot","getImageData","bound","top","bottom","copyCanvas","copy","trimHeight","trimWidth","side","trimmed","canvas","isValid","hasOwnProperty","logger","newState","Error","screenTypes","BOOT","HOME","RUN","HELP","CODE","SPRITE","MAP","SONG","CHAIN","PHRASE","SHELF","initialState","iframeVersion","errorLine","screen","booted","nextAction","docHistories","dismissedNotices","selectedUi","tutorial","shelving","lodash__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_0___default","_store_initialState_js__WEBPACK_IMPORTED_MODULE_1__","omit_empty__WEBPACK_IMPORTED_MODULE_1__","omit_empty__WEBPACK_IMPORTED_MODULE_1___default","_store_initialState_js__WEBPACK_IMPORTED_MODULE_2__","_toLetter_js__WEBPACK_IMPORTED_MODULE_3__","omitEmpty","phraseIsArray","isArray","match","keyBy","omit","detect_browser__WEBPACK_IMPORTED_MODULE_0__","browser","detect","regexLookup","chrome","firefox","edge","regex","name","stack","exec","line","column","drawLine","x1","y1","x2","y2","setPixel","color","steep","abs","_ref5","dx","dy","derror","drawPolyStroke","points","args","c","newPoints","xRot","yRot","midX","midY","p","cos","PI","sin","xs","ys","drawCircle","cx","cy","radius","onlyStroke","err","drawReflectedPair","drawSprite","spriteIndex","darken","flipH","flipV","cells","rowIndex","colIndex","clamped","alphabet","<",">","/",":","|","(",")","1","2","3","4","5","6","7","8","9"," ",".",",","+","-","!","?","f","h","j","k","l","m","o","q","s","t","u","v","w","z","drawText","letters","currentX","currentY","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","toLowerCase","letterWidth","return","canvasWidth","canvasHeight","_ref$map","initialMap","_runningMap","_cameraX","_cameraY","sprite","camera","clear","getPixel","polyStroke","_len","_key","rectStroke","drawRectStroke","rectFill","rectX","drawRectFill","circStroke","circFill","getTile","mx","my","tile","setTile","spriteNumber","row","rowNumber","colNumber","resetMap","circle","fillStyle","strokeStyle","drawPixel","fillRect","x0","beginPath","moveTo","lineTo","stroke","current","xOffset","yOffset","grid","imageData","pixel","pixelIndex","offset","_ref$darken","_ref$flipH","_ref$flipV","_memoryCanvas","_mCtx","entries","skey","pixelSprite","strokeRect","translate","sx","sy","_ctx$getImageData$dat","alpha","lookup"],"mappings":"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","file":"static/js/main.05bab6d6.chunk.js","sourcesContent":["const settings = {\n  octaves: 4,\n  volumes: 8,\n  phrases: 8 * 8,\n  chains: 8 * 8,\n  songs: 8,\n  matrixLength: 16,\n  chainChannels: 4,\n  startOffset: '+0.1',\n  startOffsetDouble: '+0.5',\n  bpm: 144,\n  subdivision: '4n'\n}\n\nexport default settings\n","import settings from './settings.js'\nconst normalize = {\n  volume: vol => (vol + 1) / settings.volumes,\n  note: note => note\n}\n\nexport default normalize\n","import * as Tone from 'tone'\nimport _ from 'lodash'\nimport toLetter from '../toLetter.js'\nimport normalize from '../normalize.js'\nimport settings from '../settings.js'\n\nconst pulseOptions = {\n  oscillator: {\n    type: 'triangle'\n  },\n  envelope: {\n    release: 0.07\n  }\n}\n\nconst tempoToPlaybackRate = tempo => [1, 2, 3, 5, 8, 13, 21, 34][tempo]\nconst tempoToSubdivision = tempo => tempoToPlaybackRate(tempo) * 4 + 'n'\n\nconst createSynth = volumeNode => {\n  const pulseSynth = new Tone.Synth(pulseOptions)\n  if (volumeNode) {\n    pulseSynth.chain(volumeNode, Tone.Master)\n  } else {\n    pulseSynth.chain(Tone.Master)\n  }\n  return pulseSynth\n}\n\nconst playNote = ({\n  note,\n  octave,\n  volume,\n  time = Tone.context.currentTime,\n  synth,\n  tempo\n}) => {\n  // If time is not provided, we want to play the note right now - use currentTime.\n  // If time is provided,\n  // if it is in the past (smaller than currentTime),\n  // don't play the note.\n  // Otherwise play the note.\n  if (time >= Tone.context.currentTime) {\n    const normalizedVolume = normalize.volume(volume)\n    const letter = toLetter(note + octave * 12, true, true)\n    const subdivision = tempoToSubdivision(tempo)\n    synth.triggerAttackRelease(letter, subdivision, time, normalizedVolume)\n  }\n}\n\nconst soundAPI = volumeNode => {\n  const chainSynths = _.range(settings.chainChannels).map(() =>\n    createSynth(volumeNode)\n  )\n  const phraseSynth = createSynth(volumeNode)\n\n  Tone.Transport.bpm.value = settings.bpm\n  Tone.Transport.start(settings.startOffset)\n\n  let songContainers = {}\n  let localPhrases = {}\n  let phrasePool = []\n\n  const stopSong = () => {\n    // Stop all sequences.\n    // console.log('soundAPI.stopSong() BEGIN----------')\n    // const before = Date.now()\n    _.forEach(songContainers, ({ sequence }, key) => {\n      if (sequence) {\n        sequence.stop()\n        // console.log(`stopping song with key: ${key}`)\n      }\n    })\n    // const after = Date.now()\n    // console.log(`soundAPI.stopSong() END ${after - before}ms`)\n  }\n\n  const makeSongs = ({ songs, chains, phrases }) => {\n    // console.log(`soundAPI.makeSongs() BEGIN----------`)\n    // const before = Date.now()\n    stopSong()\n    localPhrases = phrases\n    songContainers = _.mapValues(songs, song =>\n      makeSongContainer({ song, chains, phrases })\n    )\n    // const after = Date.now()\n    // console.log(`soundAPI.makeSongs() END ${after - before}ms`)\n  }\n\n  const makeSongContainer = ({ song, chains, phrases }) => {\n    // const before = Date.now()\n    // Create an array of note positions.\n    // There's a lot going on here, but the gist:\n    // create an array of all the notes, but remove nulls from the end,\n    // so that we can make a Tone Sequence that is the right length and no more.\n    // This is good for performance.\n\n    // For matrixLength cubed (chains * phrases * notes),\n    const notePositions = _(_.range(Math.pow(settings.matrixLength, 3)))\n      .map(index => {\n        // Get the chain, phrase and note positions by using base math.\n        const [chainPosition, phrasePosition, notePosition] = _.padStart(\n          index.toString(settings.matrixLength),\n          3,\n          0\n        )\n          .split('')\n          .map(d => parseInt(d, settings.matrixLength))\n\n        // Get the chain index for this position.\n        const chainIndex = _.get(song, chainPosition)\n\n        // Get the chain.\n        const chain = _.get(chains, chainIndex)\n\n        // Get the phrase indices for this position, e.g. { 0: 0, 1: 11, 2: 2 }\n        const phrasesIndices = _.get(chain, phrasePosition)\n\n        // For each channel,\n        return (\n          _.range(settings.chainChannels)\n            .map(channel => {\n              // Get the phrase index for this channel.\n              const phraseIndex = _.get(phrasesIndices, channel)\n              let result\n\n              // If the phrase index exists,\n              if (!_.isNil(phraseIndex)) {\n                // get the phrase assigned to this channel.\n                const phrase = _.get(phrases, phraseIndex, {})\n\n                // Get the note element for this position.\n                const noteElement = _.get(phrase.notes, notePosition)\n\n                // If we have a note,\n                if (!_.isNil(noteElement)) {\n                  // add it to the result.\n                  result = {\n                    channel,\n                    noteElement\n                  }\n                }\n              }\n              return result\n            })\n            // Only keep non-null elements.\n            .filter(d => d)\n        )\n      })\n      // NOW we can drop from right.\n      .dropRightWhile(_.isEmpty)\n      .value()\n\n    const callback = (time, position) => {\n      notePositions[position].forEach(d => {\n        const { channel, noteElement } = d\n        playNote({\n          ...noteElement,\n          time: time,\n          synth: chainSynths[channel],\n          tempo: 0\n        })\n      })\n    }\n\n    const events = _.range(notePositions.length)\n\n    // const after = Date.now()\n    // console.log(`soundAPI.makeSongContainer() took ${after - before}ms`)\n\n    return {\n      callback,\n      events,\n      sequence: null\n    }\n  }\n\n  const playSong = (number, loop = false) => {\n    // console.log(`soundAPI.playSong() BEGIN----------`)\n    // const before = Date.now()\n    stopSong()\n\n    // console.log(`going to play song with key ${number}`)\n    _.forEach(songContainers, (value, key) => {\n      if (+key === number) {\n        // console.log(`found one: key ${key}`)\n        value.sequence = new Tone.Sequence(\n          value.callback,\n          value.events,\n          settings.subdivision\n        )\n        value.sequence.loop = loop\n        value.sequence.playbackRate = tempoToPlaybackRate(0)\n        value.sequence.start(settings.startOffset)\n      }\n    })\n    // const after = Date.now()\n    // console.log(`soundAPI.playSong() END took ${after - before}ms`)\n  }\n\n  const playPhrase = number => {\n    // const before = Date.now()\n    const phrase = _.get(localPhrases, number)\n    if (phrase) {\n      while (phrasePool.length) {\n        const popped = phrasePool.pop()\n        popped.dispose()\n      }\n\n      const { tempo } = phrase\n\n      const sequence = new Tone.Sequence(\n        (time, index) => {\n          const value = phrase.notes[index]\n          if (value) {\n            // console.log(`phraseSynth volume`)\n            // console.log({ volume: phraseSynth.volume.value })\n            playNote({ ...value, time, synth: phraseSynth, tempo })\n          }\n        },\n        _.range(settings.matrixLength),\n        settings.subdivision\n      )\n      sequence.loop = false\n      sequence.playbackRate = tempoToPlaybackRate(tempo)\n      sequence.start()\n      phrasePool.push(sequence)\n      // const after = Date.now()\n      // console.log(`soundAPI.playPhrase() took ${after - before}ms`)\n    }\n  }\n  return {\n    playSong,\n    makeSongs,\n    stopSong,\n    playPhrase\n  }\n}\n\nexport { createSynth, playNote, tempoToPlaybackRate }\n\nexport default soundAPI\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Iframe from './Iframe'\n\nReactDOM.render(<Iframe />, document.getElementById('root'))\n","const notes = ['c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b']\n\nconst numberToNote = number => notes[number % notes.length]\n\nconst numberToOctave = number => Math.floor(number / notes.length)\n\nconst toLetter = (number, includeOctave, normalize) => {\n  const letter = numberToNote(number)\n  const octave = numberToOctave(number) + (normalize ? 2 : 0)\n  return !includeOctave ? letter : `${letter}${octave}`\n}\n\nconst letterToNumber = letter => notes.indexOf(letter)\n\nexport { numberToOctave, letterToNumber }\n\nexport default toLetter\n","// Lookup table for triplet arrays containing R, G, and B values.\nconst triplets = [\n  [246, 214, 189],\n  [195, 163, 138],\n  [153, 117, 119],\n  [129, 98, 113],\n  [78, 73, 95],\n  [32, 57, 79],\n  [15, 42, 63],\n  [8, 20, 30]\n]\n\n// Lookup table for the css color strings.\nconst rgbStrings = triplets.map(([r, g, b]) => `rgb(${r},${g},${b})`)\n\n// Lookup tree for the combined integer representation of each color.\nlet intLookup = []\n\n// Loops over each of the color indexes, looks up associated color triplet, and\n// calculates the equivalent integer representation by bit shifting each byte\n// into the correct position.\nfor (let i = 0; i < 8; i++) {\n  let values = triplets[i]\n\n  // Shift each byte into the correct integer position.\n  let possiblyNegativeInteger =\n    (255 << 24) | // Alpha byte\n    (values[2] << 16) | // B byte\n    (values[1] << 8) | // G byte\n    values[0] // R byte\n\n  // Set the positive version of the above calculated integer into the lookup\n  // table. A bitwise right shift of 0 places forces the number to be\n  // interpreted as a positive integer.\n  intLookup[i] = possiblyNegativeInteger >>> 0\n\n  // For example, intLookup[0] = 4290631414.\n}\n\n// The opposite of the intLookup. Each index is the color integer, and the value\n// is the SCRIPT-8 integer color.\nconst reverseIntLookup = {}\nfor (let i = 0; i < 8; i++) {\n  reverseIntLookup[intLookup[i]] = i\n}\n\nconst colors = {\n  rgb(i) {\n    return rgbStrings[i % rgbStrings.length]\n  },\n\n  triplet(i) {\n    return triplets[i % triplets.length]\n  },\n\n  int(i) {\n    return intLookup[i % intLookup.length]\n  },\n\n  // Looks up the integer value in the reverseIntLookup table. If it doesn't\n  // exist, then the background color of 7 is returned instead.\n  lookupInt(int) {\n    if (int in reverseIntLookup) {\n      return reverseIntLookup[int]\n    }\n    return 7\n  }\n}\n\nexport default colors\n","export default `init = () => ({\n})\n\nupdate = (state, input, elapsed) => ({\n  ...state,\n})\n\ndrawActors = (state, fade) =>\n  state.actors && state.actors.forEach(actor =>\n    sprite(\n      actor.x,\n      actor.y,\n      actor.sprite,\n      fade ? actor.trailBrighten || -3 : actor.brighten,\n      actor.flipH,\n      actor.flipV\n    )\n  )\n\ndraw = state => {\n  camera()\n  clear()\n}`\n","let previousUserInput = {}\n\nconst allowedKeys = [\n  'mousedown',\n  'ArrowUp',\n  'ArrowRight',\n  'ArrowDown',\n  'ArrowLeft',\n  'a',\n  'b',\n  'Enter',\n  ' '\n]\n\nconst getUserInput = keys => {\n  const { buttons } = window.navigator.getGamepads\n    ? window.navigator.getGamepads()[0] || {}\n    : {}\n\n  let newUserInput = {\n    __mousedown: keys.has('mousedown'),\n    up: keys.has('ArrowUp') || (buttons && buttons[12].pressed),\n    right: keys.has('ArrowRight') || (buttons && buttons[15].pressed),\n    down: keys.has('ArrowDown') || (buttons && buttons[13].pressed),\n    left: keys.has('ArrowLeft') || (buttons && buttons[14].pressed),\n    a: keys.has('a') || (buttons && (buttons[1].pressed || buttons[2].pressed)),\n    b: keys.has('b') || (buttons && (buttons[0].pressed || buttons[3].pressed)),\n    start: keys.has('Enter') || (buttons && buttons[9].pressed),\n    select: keys.has(' ') || (buttons && buttons[8].pressed)\n  }\n\n  for (const key of Object.keys(newUserInput)) {\n    if (key.startsWith('__')) continue\n\n    let keyPressed = !previousUserInput[key] && newUserInput[key]\n    newUserInput[key + 'Pressed'] = keyPressed\n\n    let keyReleased = previousUserInput[key] && !newUserInput[key]\n    newUserInput[key + 'Released'] = keyReleased\n  }\n\n  previousUserInput = newUserInput\n\n  return newUserInput\n}\n\nexport { allowedKeys }\n\nexport default getUserInput\n","const runningSum = array => {\n  if (!array.length) array.push(0)\n  return array.reduce((acc, cur, idx) => {\n    if (idx > 0) {\n      const previous = acc[idx - 1]\n      return [...acc, [previous[1], previous[1] + cur]]\n    } else {\n      return [[0, cur]]\n    }\n  }, [])\n}\n\nexport default runningSum\n","import _ from 'lodash'\nimport runningSum from '../utils/runningSum.js'\n\nconst assembleOrderedGame = game =>\n  _(game)\n    .orderBy((value, key) => key)\n    .map('text')\n    .filter(d => !_.isEmpty(d))\n    .value()\n    .join('\\n')\n\nconst parseGistGame = data => {\n  const misc = JSON.parse(_.get(data, 'files[\"misc.json\"].content', '{}'))\n  const content = _.get(data, 'files[\"code.js\"].content', '')\n  if (misc.lines) {\n    const ranges = runningSum(misc.lines)\n    const contentLines = content.split('\\n')\n    return ranges.reduce(\n      (acc, cur, idx) => ({\n        ...acc,\n        [idx]: {\n          text: contentLines.slice(...cur).join('\\n'),\n          active: idx === 0,\n          key: idx\n        }\n      }),\n      {}\n    )\n  } else {\n    return {\n      0: {\n        text: content,\n        active: true,\n        key: 0\n      }\n    }\n  }\n}\n\nexport { parseGistGame, assembleOrderedGame }\n","/*\n  TODO:\n  - #6 upgrade all my creations\n */\n\nimport React, { Component } from 'react'\nimport classNames from 'classnames'\nimport equal from 'deep-equal'\nimport * as Tone from 'tone'\nimport { interval } from 'd3-timer'\nimport { createStore, applyMiddleware } from 'redux'\nimport _ from 'lodash'\nimport sum from 'lodash/sum'\nimport range from 'lodash/range'\nimport flatten from 'lodash/flatten'\nimport random from 'lodash/random'\nimport clamp from 'lodash/clamp'\nimport once from 'lodash/once'\nimport uniqBy from 'lodash/uniqBy'\nimport isEmpty from 'lodash/isEmpty'\nimport chunk from 'lodash/chunk'\nimport bios from './utils/bios.js'\nimport StateMachine from 'javascript-state-machine'\nimport soundAPI from './soundAPI/index.js'\nimport { default as frameBufferCanvasAPI } from './frameBufferCanvasAPI/index.js'\nimport { default as contextCanvasAPI } from './contextCanvasAPI/index.js'\nimport trimCanvas from './contextCanvasAPI/trimCanvas.js'\nimport validateToken from './validateToken.js'\nimport getUserInput, { allowedKeys } from './getUserInput.js'\nimport createReducer from './createReducer.js'\nimport skeleton from './skeleton.js'\nimport { extractGistMap } from './gistParsers/map.js'\nimport { extractGistSprites } from './gistParsers/sprites.js'\nimport { extractGistPhrases } from './gistParsers/phrases.js'\nimport { extractGistChains } from './gistParsers/chains.js'\nimport { extractGistSongs } from './gistParsers/songs.js'\nimport { parseGistGame, assembleOrderedGame } from './gistParsers/game.js'\nimport { getEvaledErrorPosition } from './utils/errorLocation.js'\nimport './css/Iframe.css'\nimport { version } from '../package.json'\n\n// window.USE_FRAME_BUFFER_RENDERER = true\n// window.SCRIPT_8_EMBEDDED_GIST_ID = 'd5dacf8f639a775996c4ed9f9156d4d5'\n\n// Get the browser platform.\nconst { platform } = window.navigator\n\n// Print the SCRIPT-8 iframe version to the console.\nconsole.log(JSON.stringify(`SCRIPT-8 iframe v ${version}`, null, 2))\n\n// This function takes an object of errors, keyed by type, and converts them\n// to an array of objects with properties { type, data },\n// filters down to errors that have both type and data,\n// sorts by type,\n// and only keeps those with unique data.\nconst getUniqueErrorMessages = errors =>\n  _(errors)\n    .map((data, type) => ({ type, data }))\n    .filter(d => d.data && d.type)\n    .sortBy('type')\n    .uniqBy(d => JSON.stringify(d.data))\n    .value()\n\n// These four are part of the SCRIPT-8 API.\nwindow.init = null\nwindow.update = null\nwindow.drawActors = null\nwindow.draw = null\n\n// Create window-scoped variables under the _script8 object.\n// This key will be passed to a validation function,\n// to prevent the user from using them.\nwindow._script8 = {\n  embedState: {},\n  reservedTokens: new Set(['init', 'update', 'drawActors', 'draw'])\n}\n\n// Convenience function.\nconst NOOP = () => {}\n\n// Use this to set SCRIPT-8's desired FPS.\nconst FPS = 60\n\n// Use this to set how far in the past we want to rewind.\nconst REDUX_HISTORY_SECONDS = 2\n\n// Convenience constant placeholder for 128. Theoretically this could enable\n// us to adjust the canvas size, but in reality this will never happen.\nconst CANVAS_SIZE = 128\n\n// Number of frames to skip when drawing an actor's past. If we were to draw\n// every single frame, we wouldn't be able to distinguish the actor's trail.\nconst ACTOR_FRAME_SKIP = 5\n\nclass Iframe extends Component {\n  constructor(props) {\n    super(props)\n\n    // The following ref-binding functions set up keyboard listeners.\n    this.ArrowUpElement = null\n    this.setArrowUpRef = e => {\n      this.ArrowUpElement = e\n    }\n    this.ArrowRightElement = null\n    this.setArrowRightRef = e => {\n      this.ArrowRightElement = e\n    }\n    this.ArrowDownElement = null\n    this.setArrowDownRef = e => {\n      this.ArrowDownElement = e\n    }\n    this.ArrowLeftElement = null\n    this.setArrowLeftRef = e => {\n      this.ArrowLeftElement = e\n    }\n    this.aElement = null\n    this.setaRef = e => {\n      this.aElement = e\n    }\n    this.bElement = null\n    this.setbRef = e => {\n      this.bElement = e\n    }\n    this.EnterElement = null\n    this.setEnterRef = e => {\n      this.EnterElement = e\n    }\n    this.SpaceElement = null\n    this.setSpaceRef = e => {\n      this.SpaceElement = e\n    }\n\n    this.touchstartArrowUp = this.touchstartArrowUp.bind(this)\n    this.touchstartArrowRight = this.touchstartArrowRight.bind(this)\n    this.touchstartArrowDown = this.touchstartArrowDown.bind(this)\n    this.touchstartArrowLeft = this.touchstartArrowLeft.bind(this)\n    this.touchstarta = this.touchstarta.bind(this)\n    this.touchstartb = this.touchstartb.bind(this)\n    this.touchstartEnter = this.touchstartEnter.bind(this)\n    this.touchstartSpace = this.touchstartSpace.bind(this)\n\n    this.touchendArrowUp = this.touchendArrowUp.bind(this)\n    this.touchendArrowRight = this.touchendArrowRight.bind(this)\n    this.touchendArrowDown = this.touchendArrowDown.bind(this)\n    this.touchendArrowLeft = this.touchendArrowLeft.bind(this)\n    this.touchenda = this.touchenda.bind(this)\n    this.touchendb = this.touchendb.bind(this)\n    this.touchendEnter = this.touchendEnter.bind(this)\n    this.touchendSpace = this.touchendSpace.bind(this)\n\n    this.sendLogToParent = this.sendLogToParent.bind(this)\n    this.log = null\n    this.sendErrorToParent = this.sendErrorToParent.bind(this)\n    this.loggerErrors = {}\n    this.printErrorsToCassetteScreen = this.printErrorsToCassetteScreen.bind(\n      this\n    )\n\n    this.updateGlobals = this.updateGlobals.bind(this)\n    this.evalCode = this.evalCode.bind(this)\n    this.startTimer = this.startTimer.bind(this)\n    this.handleTimelineInput = this.handleTimelineInput.bind(this)\n    this.handleActorClick = this.handleActorClick.bind(this)\n    this.handlePauseClick = this.handlePauseClick.bind(this)\n    this.handleRestartClick = this.handleRestartClick.bind(this)\n\n    this.heightSent = 0\n\n    this.shadows = new Set(['document'])\n    this.blacklist = new Set(['eval', 'alert', '_script8'])\n    this.keys = new Set()\n\n    this.timer = null\n    this.previousElapsed = 0\n    this.pastFpsValues = []\n\n    this.volumeNode = new Tone.Volume()\n\n    this.reducer = createReducer(this.sendErrorToParent)\n    this.store = null\n    this.previousInitString = null\n    this.reduxHistory = []\n    this.reduxLogger = store => next => action => {\n      // Add this state and action to history,\n      // and limit it to the 3 seconds worth of entries.\n      // We calculate this by using fps.\n      this.reduxHistory = [\n        ...this.reduxHistory,\n        {\n          state: store.getState(),\n          action\n        }\n      ].slice(-(FPS * REDUX_HISTORY_SECONDS))\n\n      return next(action)\n    }\n\n    this.soundFunctions = null\n    this.songSequences = null\n\n    this.state = {\n      started: false,\n      fps: null,\n      game: '',\n      sprites: {},\n      map: {},\n      songs: {},\n      chains: {},\n      phrases: {},\n      timelineIndex: 0,\n      actors: [],\n      selectedActors: [],\n      message: null,\n      callbacks: {},\n      isPaused: false,\n      alteredStates: [],\n      run: true,\n      sound: true\n    }\n\n    // Pixel data has the actual image data object which can be passed to putImageData.\n    this._pixelData = new ImageData(CANVAS_SIZE, CANVAS_SIZE)\n\n    // This contains the actual binary data for setting on _pixelData. It cannot\n    // be accessed directly, but is instead modified through TypedArrays such as\n    // Uint8ClampedArray and Uint32Array. Both the TypedArrays below refer to\n    // the same backing buffer, so modifying values via one will be reflected in\n    // the other.\n    this._pixelBuffer = new ArrayBuffer(4 * CANVAS_SIZE * CANVAS_SIZE)\n\n    // The pixelBytes array is only used to set the data in the _pixelData\n    // object. ImageData only has an Uint8ClampedArray to access the underlying\n    // bytes, so a Uint8ClampedArray must be kept around to copy the data.\n    this._pixelBytes = new Uint8ClampedArray(this._pixelBuffer)\n\n    // It turns out that setting pixels all at once via a single integer is much\n    // faster than setting each byte individually. So the pixel data is only\n    // ever modified via the Uint32Array for performance reasons.\n    this._pixelIntegers = new Uint32Array(this._pixelBuffer)\n  }\n\n  // The following event listeners add/remove css classes from the DOM elements,\n  // and also add/remove keys from the input object.\n  touchstartArrowUp() {\n    this.ArrowUpElement.classList.add('on')\n    this.keys.add('ArrowUp')\n  }\n  touchstartArrowRight() {\n    this.ArrowRightElement.classList.add('on')\n    this.keys.add('ArrowRight')\n  }\n  touchstartArrowDown() {\n    this.ArrowDownElement.classList.add('on')\n    this.keys.add('ArrowDown')\n  }\n  touchstartArrowLeft() {\n    this.ArrowLeftElement.classList.add('on')\n    this.keys.add('ArrowLeft')\n  }\n  touchstarta() {\n    this.aElement.classList.add('on')\n    this.keys.add('a')\n  }\n  touchstartb() {\n    this.bElement.classList.add('on')\n    this.keys.add('b')\n  }\n  touchstartEnter() {\n    this.EnterElement.classList.add('on')\n    this.keys.add('Enter')\n  }\n  touchstartSpace() {\n    this.SpaceElement.classList.add('on')\n    this.keys.add(' ')\n  }\n\n  touchendArrowUp() {\n    this.ArrowUpElement.classList.remove('on')\n    this.keys.delete('ArrowUp')\n  }\n  touchendArrowRight() {\n    this.ArrowRightElement.classList.remove('on')\n    this.keys.delete('ArrowRight')\n  }\n  touchendArrowDown() {\n    this.ArrowDownElement.classList.remove('on')\n    this.keys.delete('ArrowDown')\n  }\n  touchendArrowLeft() {\n    this.ArrowLeftElement.classList.remove('on')\n    this.keys.delete('ArrowLeft')\n  }\n  touchenda() {\n    this.aElement.classList.remove('on')\n    this.keys.delete('a')\n  }\n  touchendb() {\n    this.bElement.classList.remove('on')\n    this.keys.delete('b')\n  }\n  touchendEnter() {\n    this.EnterElement.classList.remove('on')\n    this.keys.delete('Enter')\n  }\n  touchendSpace() {\n    this.SpaceElement.classList.remove('on')\n    this.keys.delete(' ')\n  }\n\n  // Send log message to parent.\n  sendLogToParent(value) {\n    // Also print to console.\n    console.log(value)\n    // Don't use sendLogToParent if we're on embed mode.\n    if (!this.isEmbed) {\n      const { message, run } = this.state\n      // If we have something to log,\n      if (!run && !_.isNil(value)) {\n        // and it is different than the previous one,\n        if (JSON.stringify(this.log) !== JSON.stringify(this.value)) {\n          // update the log,\n          this.log = value\n          // and send to parent.\n          message.ports[0].postMessage({\n            log: this.log\n          })\n        }\n      }\n    }\n  }\n\n  // Send error message to parent,\n  // and if in RUN mode, print it to cassette screen.\n  sendErrorToParent({ type, error = null }) {\n    const { message, run } = this.state\n    // If we have an error,\n    if (error) {\n      const errorData = {\n        message: error.message,\n        position: getEvaledErrorPosition(error)\n      }\n\n      if (errorData.message.startsWith('enhancer(...) is not a function')) {\n        errorData.message = 'The init or update functions are invalid.'\n      }\n\n      // and it is different than the previous one,\n      if (\n        JSON.stringify(this.loggerErrors[type]) !== JSON.stringify(errorData)\n      ) {\n        // update the loggerErrors,\n        this.loggerErrors[type] = errorData\n        // and send to parent.\n        if (!this.isEmbed) {\n          message.ports[0].postMessage({\n            errors: getUniqueErrorMessages(this.loggerErrors)\n          })\n        }\n      }\n    } else {\n      // If we don't have an error, and we had one before,\n      if (this.loggerErrors[type]) {\n        // update the loggerErrors for this type,\n        this.loggerErrors[type] = null\n        // and send to parent.\n        if (!this.isEmbed) {\n          message.ports[0].postMessage({\n            errors: getUniqueErrorMessages(this.loggerErrors)\n          })\n        }\n      }\n    }\n\n    // If we're on run mode,\n    if (run) {\n      this.printErrorsToCassetteScreen()\n    }\n  }\n\n  // Print errors to cassette screen.\n  printErrorsToCassetteScreen() {\n    // Create one string with all the unique error messages.\n    const errorMessages = getUniqueErrorMessages(this.loggerErrors)\n      .map(error => `error: ${error.data.message}`)\n      .join('. ')\n\n    if (errorMessages.length) {\n      // Print the error message in black, offset.\n      chunk(errorMessages, 32).forEach((errorMessage, i) => {\n        const theString = errorMessage.join('')\n        range(3).forEach(x => {\n          range(3).forEach(y => {\n            window.print(1 + x, 1 + y + i * 8, theString, 7)\n          })\n        })\n        // Now print the error message in white.\n        window.print(2, 2 + i * 8, theString, 0)\n      })\n\n      // If we're in framebuffer mode,\n      if (this.useFrameBufferRenderer) {\n        // draw it now.\n        this.writePixelDataToCanvas()\n      }\n    }\n  }\n\n  // Assign various properties to global scope, for the user.\n  // Also add them to the list of reserved tokens.\n  updateGlobals(providedGlobals) {\n    let globals\n\n    if (!providedGlobals) {\n      const canvasAPI = this.useFrameBufferRenderer\n        ? frameBufferCanvasAPI\n        : contextCanvasAPI\n\n      globals = {\n        console,\n        StateMachine,\n        JSON,\n        Math,\n        Object,\n        Array,\n        log: this.sendLogToParent,\n        ...canvasAPI({\n          pixels: this._pixelIntegers,\n          ctx: this._canvas.getContext('2d'),\n          width: CANVAS_SIZE,\n          height: CANVAS_SIZE,\n          sprites: this.state.sprites,\n          map: this.state.map\n        }),\n        range,\n        flatten,\n        random,\n        clamp\n      }\n    } else {\n      globals = providedGlobals\n    }\n\n    // For each global key,\n    Object.keys(globals).forEach(key => {\n      // assign the corresponding global object to window,\n      window[key] = globals[key]\n\n      // and add the key to the list of reserved tokens.\n      window._script8.reservedTokens.add(key)\n    })\n  }\n\n  // Writes pixel data buffer to canvas.\n  writePixelDataToCanvas() {\n    this._pixelData.data.set(this._pixelBytes)\n    const ctx = this._canvas.getContext('2d')\n    ctx.putImageData(this._pixelData, 0, 0)\n  }\n\n  // Calls window.draw(state) .\n  // Works with either context or frame buffer renderer.\n  drawUserGraphics(state) {\n    if (window.draw) {\n      window.draw(state)\n      if (this.useFrameBufferRenderer) {\n        this.writePixelDataToCanvas()\n      }\n    }\n  }\n\n  componentDidMount() {\n    // If the framebuffer flag is set (this should only happen in embed mode),\n    // use the framebuffer renderer.\n    if (window.USE_FRAME_BUFFER_RENDERER) {\n      this.useFrameBufferRenderer = true\n    }\n\n    // Initialize sound API with this Tone.js volumeNode.\n    this.soundFunctions = soundAPI(this.volumeNode)\n\n    // Update globals with sound API functions.\n    this.updateGlobals({\n      playSong: this.soundFunctions.playSong,\n      playPhrase: this.soundFunctions.playPhrase,\n      stopSong: this.soundFunctions.stopSong\n    })\n\n    // Listen for mouse down / up events.\n    this.mousedownHandler = () => {\n      this.keys.add('mousedown')\n    }\n    this.mouseupHandler = () => {\n      this.keys.delete('mousedown')\n    }\n\n    // Listen for key down events.\n    this.keydownHandler = event => {\n      // Listen for record cassette and go to previous/next screen,\n      // and send them to parent.\n      const { altKey, metaKey, ctrlKey, key } = event\n      const { message } = this.state\n\n      // Listen to Ctrl-s / Cmd-s.\n      if (\n        (!this.isEmbed &&\n          (metaKey && key === 's' && _.includes(platform, 'Mac'))) ||\n        (ctrlKey && key === 's' && !_.includes(platform, 'Mac'))\n      ) {\n        event.preventDefault()\n        message.ports[0].postMessage({\n          shortcut: 'save'\n        })\n      }\n\n      // Listen Alt-. / Alt-/ .\n      if (!this.isEmbed && altKey) {\n        if (key === '.') {\n          event.preventDefault()\n          message.ports[0].postMessage({\n            shortcut: 'previous'\n          })\n        }\n        if (key === '/') {\n          event.preventDefault()\n          message.ports[0].postMessage({\n            shortcut: 'next'\n          })\n        }\n      }\n\n      // If we pressed an allowed key, e.g. up, down, a, etc,\n      if (allowedKeys.includes(key)) {\n        // don't let it bubble up to the parent.\n        // The inverse of this means that something like Ctrl-R (reload on windows)\n        // will be indeed allowed to bubble up.\n        event.preventDefault()\n        event.stopPropagation()\n      }\n\n      // Finally, add the keyDown to the keys object.\n      this.keys.add(key)\n    }\n    this.keyupHandler = event => {\n      // Only handle the keys we want. Same as above.\n      const { key } = event\n      if (allowedKeys.includes(key)) {\n        event.preventDefault()\n        event.stopPropagation()\n      }\n      this.keys.delete(key)\n    }\n\n    // Add touch / mouse / key event handlers.\n    document.addEventListener('touchstart', this.mousedownHandler)\n    document.addEventListener('mousedown', this.mousedownHandler)\n    document.addEventListener('touchend', this.mouseupHandler)\n    document.addEventListener('mouseup', this.mouseupHandler)\n    document.addEventListener('keydown', this.keydownHandler)\n    document.addEventListener('keyup', this.keyupHandler)\n\n    // Listen for `callCode`, `findInvalidToken`, or `image` messages.\n    // `callCode` can come from either the parent\n    // or from here, if we're in embed mode.\n    // The other two will come from the parent.\n    const handleData = message => {\n      const { type, ...payload } = message.data\n      const { blacklist, shadows } = this\n\n      if (\n        // If the message is of type callCode,\n        // it means we are getting new game data (e.g. code, sprites, etc).\n        type === 'callCode'\n      ) {\n        // If the payload says to use the frame buffer renderer,\n        // (i.e. the parent, via query param)\n        if (payload.useFrameBufferRenderer) {\n          // set the frame buffer renderer flag,\n          this.useFrameBufferRenderer = true\n          // and update the globals.\n          // so that the drawing functions come from the fb renderer.\n          this.updateGlobals()\n        }\n\n        // Finally, set this react state with payload data,\n        // and also add the message.\n        this.setState({\n          ...payload,\n          message\n        })\n      } else if (\n        // If we're trying to find an invalid token,\n        type === 'findInvalidToken'\n      ) {\n        // Find the first invalid token in the provided tokens array,\n        const invalidTokenIndex = payload.tokens.findIndex(\n          token =>\n            !validateToken({\n              token,\n              blacklist,\n              globals: window._script8.reservedTokens,\n              shadows\n            })\n        )\n        // and if found, send to parent.\n        message.ports[0].postMessage(invalidTokenIndex)\n      } else if (\n        // If we want an image, e.g. the parent wants a cassette screenshot,\n        type === 'image'\n      ) {\n        // create a temporary canvas,\n        const smallCanvas = document.createElement('canvas')\n        // set its dimensions,\n        const size = 128\n        smallCanvas.width = size\n        smallCanvas.height = size\n        // draw onto it the pixels from the main canvas,\n        smallCanvas.getContext('2d').drawImage(this._canvas, 0, 0, size, size)\n        // and send the dataURL to the parent.\n        message.ports[0].postMessage(smallCanvas.toDataURL())\n      }\n    }\n\n    // If there's an id in the embed,\n    if (window.SCRIPT_8_EMBEDDED_GIST_ID) {\n      // set the isEmbed flag,\n      this.isEmbed = true\n      // and try fetching the gist.\n      window\n        .fetch(\n          `${process.env.REACT_APP_NOW}/gist/${\n            window.SCRIPT_8_EMBEDDED_GIST_ID\n          }`\n        )\n        .then(response => response.json())\n        .then(json => {\n          // Then, parse the gist, and send data to `handleData`,\n          // which starts the game.\n          this.gist = json\n          handleData({\n            data: {\n              type: 'callCode',\n              game: bios,\n              isDoneFetching: true,\n              songs: extractGistSongs(json),\n              chains: extractGistChains(json),\n              phrases: extractGistPhrases(json),\n              sprites: extractGistSprites(json),\n              map: extractGistMap(json),\n              run: true,\n              callbacks: {},\n              sound: true\n            }\n          })\n        })\n    } else {\n      // Otherwise, wait for messages from parent.\n      window.addEventListener('message', handleData)\n    }\n\n    // Finally, update globals - e.g. set `console`, `range`, the canvasAPI functions, etc\n    // to the global scope for our user.\n    this.updateGlobals()\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('touchstart', this.mousedownHandler)\n    document.removeEventListener('mousedown', this.mousedownHandler)\n    document.removeEventListener('touchend', this.mouseupHandler)\n    document.removeEventListener('mouseup', this.mouseupHandler)\n    document.removeEventListener('keydown', this.keydownHandler)\n    document.removeEventListener('keyup', this.keyupHandler)\n  }\n\n  // Call `eval` on user-supplied code.\n  // TODO: for some reason all usages of this function did this:\n  // evalCode({ ...state, shadows })\n  evalCode() {\n    const { shadows, state } = this\n    // eslint-disable-next-line no-unused-vars\n    const { game, message, callbacks, isDoneFetching } = state\n    try {\n      // If we're done fetching,\n      if (isDoneFetching)\n        // define the following end function, which we can only call once:\n        window._script8.end = once(() => {\n          // when the user calls this (which should only happen once, in bios),\n          this.setState({\n            // assemble the game code,\n            game: assembleOrderedGame(parseGistGame(this.gist)),\n            // and let us know we can show the play/pause buttons.\n            started: true\n          })\n          // If Tone.js is not running,\n          if (Tone.context.state !== 'running') {\n            // start it.\n            // This is allowed because the root event is a click event.\n            Tone.start()\n          }\n          // Then, call the callback once, if we're not in embed mode\n          // (if we're in embed mode, there's no parent to talk to).\n          if (!this.isEmbed) {\n            message.ports[0].postMessage({\n              callback: callbacks.endCallback\n            })\n          }\n        })\n\n      // Save previous init. Why?\n      // Because if it has changed, we take it the user wants to restart\n      // the game. So we will run init again.\n      this.previousInitString = window.init ? window.init.toString() : null\n\n      // Get ready to eval the supplied game:\n\n      // First, create a list of variables we want to shadow.\n      const shadowString = `var ${[...shadows].join(',')}`\n\n      // Declare a locally-scoped variable pointing to skeleton, so we can eval it.\n      // eslint-disable-next-line no-unused-vars\n      const innerSkeleton = skeleton\n\n      // Eval!\n      // eslint-disable-next-line no-eval\n      eval(`\n      // Shadow variables we don't want available.\n      ${shadowString}\n      // The inception eval allows the user to declare vars (e.g. screen).\n      eval(innerSkeleton)\n      eval(game)\n    `)\n\n      // If we got to this point, send a null error to parent.\n      this.sendErrorToParent({ type: 'evalCode' })\n    } catch (e) {\n      // Error! Send it to parent.\n      this.sendErrorToParent({ type: 'evalCode', error: e })\n    }\n  }\n\n  stopTimer() {\n    if (this.timer) {\n      this.timer.stop()\n    }\n  }\n\n  // Start the timer that calls update and draw every tick.\n  startTimer() {\n    // Create a function that d3.interval calls every tick.\n    const timerCallback = elapsed => {\n      // Wrap it in try/catch, since the reducer may throw errors.\n      try {\n        // Calculate the actual FPS by looking at the difference\n        // between now and the last time the tick was called.\n        const tickLength = elapsed - this.previousElapsed\n        const fps = Math.round(1000 / tickLength)\n\n        // Save this fps.\n        this.pastFpsValues.push(fps)\n\n        // Every 60 ticks,\n        // calculate the average FPS for those 60 ticks,\n        // and clear out the pastFpsValues array.\n        let newFps\n        if (this.pastFpsValues.length > 60) {\n          newFps = Math.round(\n            sum(this.pastFpsValues) / this.pastFpsValues.length\n          )\n          this.pastFpsValues = []\n        }\n\n        // Save current elapsed so we can use it next tick to calculate FPS.\n        this.previousElapsed = elapsed\n\n        // Get the user input (keys pressed / released, mouse down / up).\n        const userInput = getUserInput(this.keys)\n\n        // If we're running in embed mode,\n        if (this.isEmbed) {\n          // update the embed state.\n          window.update(window._script8.embedState, userInput, tickLength)\n        } else {\n          // Otherwise update the redux store with the user input and tick length.\n          this.store.dispatch({\n            type: 'UPDATE',\n            input: userInput,\n            elapsed: tickLength\n          })\n        }\n\n        // Draw this state.\n        this.drawUserGraphics(\n          this.isEmbed ? window._script8.embedState : this.store.getState()\n        )\n\n        // Update fps, only if we had a new measurement.\n        if (newFps !== undefined && newFps !== this.state.fps) {\n          this.setState({\n            fps: newFps\n          })\n        }\n\n        // If we got to this point, send a null error to parent.\n        this.sendErrorToParent({ type: 'startTimer' })\n      } catch (e) {\n        // Error! Send it to parent.\n        this.sendErrorToParent({ type: 'startTimer', error: e })\n      }\n    }\n    // If the timer exists, make sure to stop it first.\n    if (this.timer) {\n      this.timer.stop()\n    }\n    // Clear out previousElapsed before we start the timer.\n    this.previousElapsed = 0\n    // Start the timer at our desired FPS rate.\n    this.timer = interval(timerCallback, 1000 / FPS)\n  }\n\n  handleTimelineInput(e) {\n    this.setState({\n      timelineIndex: +e.target.value\n    })\n  }\n\n  handleActorClick(actorName) {\n    const { selectedActors } = this.state\n\n    // If actorName is in selectedActors, take it out.\n    // Otherwise put it in.\n    const actors = selectedActors.includes(actorName)\n      ? selectedActors.filter(d => d !== actorName)\n      : [...selectedActors, actorName]\n\n    this.setState({\n      selectedActors: actors\n    })\n  }\n\n  handleRestartClick() {\n    // Make init be something unique. This will force it to be reset.\n    window.init = Date.now()\n    // If we're embedded, setting embedState to this string will also force a reset.\n    window._script8.embedState = 'SCRIPT-8-RESTART'\n    this.reduxHistory = []\n    this.pastFpsValues = []\n    this.forceUpdate()\n  }\n\n  handlePauseClick() {\n    if (this.state.isPaused) {\n      this.reduxHistory = []\n      this.startTimer()\n    } else {\n      this.stopTimer()\n    }\n\n    this.setState({\n      selectedActors: [],\n      actors: [],\n      fps: null,\n      isPaused: !this.state.isPaused\n    })\n  }\n\n  // When the app's UI state has changed,\n  componentDidUpdate(prevProps, prevState) {\n    const { state } = this\n    const {\n      message,\n      isPaused,\n      game,\n      sprites,\n      map,\n      timelineIndex,\n      actors,\n      selectedActors,\n      sound,\n      songs,\n      chains,\n      phrases,\n      run\n    } = state\n\n    try {\n      // If the sprites or map have changed, update the globals.\n      if (!equal(sprites, prevState.sprites) || !equal(map, prevState.map)) {\n        this.updateGlobals()\n      }\n\n      // If soundon/soundoff has changed,\n      // toggle volume.\n      // Also resume AudioContext IF it's not running.\n      if (!equal(sound, prevState.sound)) {\n        Tone.Master.mute = !sound\n      }\n\n      // If the music data changed,\n      if (\n        !equal(songs, prevState.songs) ||\n        !equal(chains, prevState.chains) ||\n        !equal(phrases, prevState.phrases)\n      ) {\n        // make sequences,\n        this.soundFunctions.makeSongs({\n          songs,\n          chains,\n          phrases\n        })\n        // and restart game.\n        this.handleRestartClick()\n      }\n\n      // If we are not on a run screen,\n      if (!run) {\n        // mute the volume node.\n        this.volumeNode.mute = true\n      } else {\n        // If we are on the run screen,\n        // unmute the volume node.\n        this.volumeNode.mute = false\n      }\n\n      // If we're playing, check for two overall scenarios:\n      if (!isPaused) {\n        // 1 - We're embedded.\n        if (this.isEmbed) {\n          // Then, if the game is different,\n          // or the initialState has changed,\n          if (\n            game !== prevState.game ||\n            window._script8.embedState === 'SCRIPT-8-RESTART'\n          ) {\n            // evaluate user code,\n            this.evalCode()\n            // and run init.\n            window._script8.embedState = {}\n            window.init(window._script8.embedState)\n          }\n        } else {\n          // 2 - We're not embedded.\n          // Then, if we came back from being paused,\n          // or the game is different,\n          // or the run mode was different,\n          // or init has changed,\n          if (\n            prevState.isPaused ||\n            game !== prevState.game ||\n            run !== prevState.run ||\n            !equal(\n              window.init ? window.init.toString() : null,\n              this.previousInitString\n            )\n          ) {\n            // evaluate user code,\n            // get redux state,\n            // and create redux store.\n\n            // Evaluate user code.\n            this.evalCode()\n\n            // Before we create a redux store, let's think about what state we want.\n            // If the user has changed init, use that.\n            // This way we let the user start over when they modify init.\n            // This is an escape hatch of sorts.\n            // Otherwise use the current store state. This will enable us to modify game\n            // code and not lose game state.\n            if (\n              !equal(\n                window.init ? window.init.toString() : null,\n                this.previousInitString\n              )\n            ) {\n              // If init has changed, first create the store,\n              this.store = createStore(\n                this.reducer,\n                {},\n                applyMiddleware(this.reduxLogger)\n              )\n              // initialize the game,\n              this.store.dispatch({\n                type: 'INIT'\n              })\n              // and clear out the redux history.\n              this.reduxHistory = []\n            } else {\n              // If init hasn't changed, get the store state,\n              const storeState = (this.store && this.store.getState()) || {}\n              // and create a new store with this state.\n              this.store = createStore(\n                this.reducer,\n                storeState,\n                applyMiddleware(this.reduxLogger)\n              )\n            }\n          }\n        }\n      } else {\n        // If we're not playing,\n        // we can have several different kinds of inputs:\n        // - game has changed\n        // - sprites have changed\n        // - timelineIndex has changed\n        // - selectedActors has changed\n        // Stop the timer (ONLY when pause was clicked).\n        // Evaluate user code (ONLY when game has changed).\n        // Create array of alteredStates (ONLY when game has changed).\n        // Populated list of actor buttons (ONLY when game has changed).\n        // Set timeline length to alteredStates' length (ONLY when pause was clicked).\n        // Set timeline index to max (ONLY when pause was clicked).\n        // Draw the last state, and draw selected actors (highlight timeline index actors).\n\n        // If we're paused,\n        // and either game, timelineIndex, or selectedActors is different:\n        if (\n          !equal(isPaused, prevState.isPaused) ||\n          !equal(game, prevState.game) ||\n          !equal(sprites, prevState.sprites) ||\n          !equal(map, prevState.map) ||\n          !equal(timelineIndex, prevState.timelineIndex) ||\n          !equal(selectedActors, prevState.selectedActors)\n        ) {\n          try {\n            if (this.reduxHistory.length) {\n              // Evaluate user code.\n              this.evalCode()\n\n              // Create the store with the first item in reduxHistory as initial state.\n              // Save that state to alteredStates.\n              // Then, for all next actions in the history, dispatch the action,\n              // and save resulting state to alteredStates.\n              let alteredStates = []\n              this.store = createStore(this.reducer, this.reduxHistory[0].state)\n              alteredStates.push(this.store.getState())\n\n              this.reduxHistory.forEach(({ state, action }, i) => {\n                if (i === timelineIndex - 1) {\n                  // Enable logging only if this is the selected frame.\n                  this.updateGlobals({ log: this.sendLogToParent })\n                } else {\n                  this.updateGlobals({ log: NOOP })\n                }\n                this.store.dispatch(action)\n\n                alteredStates.push(this.store.getState())\n              })\n\n              // Re-enable logging.\n              this.updateGlobals({ log: this.sendLogToParent })\n\n              alteredStates = alteredStates.filter(d => !isEmpty(d))\n\n              // If we were previously in pause mode,\n              // use the provided timelineIndex.\n              // Otherwise,\n              // set the timeline to the max.\n              const newTimelineIndex = prevState.isPaused\n                ? timelineIndex\n                : alteredStates.length - 1\n\n              // Draw the timeline index state.\n              const stateToDraw = alteredStates[newTimelineIndex]\n              this.drawUserGraphics(stateToDraw)\n\n              // Get all unique actors.\n              const allActors = flatten(\n                alteredStates.map(state => state.actors)\n              ).filter(d => d)\n              const actors = uniqBy(allActors, d => d.id)\n\n              // For each altered state, minus the timeLineIndex one,\n              // draw the actors, if they're selected, faded.\n              alteredStates.forEach((state, i) => {\n                if (\n                  (i !== newTimelineIndex && i % ACTOR_FRAME_SKIP === 0) ||\n                  i === alteredStates.length - 1\n                ) {\n                  const matchingActors =\n                    (state.actors &&\n                      state.actors.filter(d =>\n                        selectedActors.includes(d.id)\n                      )) ||\n                    []\n                  // Disable logging during window.draw calls.\n                  this.updateGlobals({ log: NOOP })\n                  window.drawActors &&\n                    window.drawActors({ actors: matchingActors }, true)\n                  // Re-enable console.log.\n                  this.updateGlobals({ log: this.sendLogToParent })\n                }\n              })\n\n              // Draw the timeLineIndex one last, not faded.\n              const lastAlteredState = alteredStates[newTimelineIndex]\n              if (\n                window.drawActors &&\n                lastAlteredState &&\n                lastAlteredState.actors\n              ) {\n                window.drawActors({\n                  actors: lastAlteredState.actors.filter(d =>\n                    selectedActors.includes(d.id)\n                  )\n                })\n              }\n\n              // If we're using the framebuffer renderer,\n              // draw it to canvas right now.\n              if (this.useFrameBufferRenderer) {\n                this.writePixelDataToCanvas()\n              }\n\n              // Finally, set the store to point to the timeLineIndex altered state,\n              // so that when we hit play, we can resume right from this point.\n              this.store = createStore(this.reducer, stateToDraw)\n\n              this.setState({\n                alteredStates,\n                actors,\n                timelineIndex: newTimelineIndex\n              })\n            }\n            this.sendErrorToParent({ type: 'isPaused' })\n          } catch (e) {\n            this.sendErrorToParent({ type: 'isPaused', error: e })\n          }\n        } else {\n          // If the ul buttons don't have any canvases, add them!\n          const buttons = [...this._ul.querySelectorAll('button')]\n          const canvases = [...this._ul.querySelectorAll('canvas')]\n\n          if (buttons.length !== canvases.length) {\n            let tempCtx = this._canvas.getContext('2d')\n            actors.forEach((actor, i) => {\n              // If we're using the framebuffer renderer,\n              // fill the buffer with 0.\n              if (this.useFrameBufferRenderer) {\n                this._pixelIntegers.fill(0)\n              } else {\n                // Otherwise reset the context.\n                tempCtx.save()\n                tempCtx.setTransform(1, 0, 0, 1, 0, 0)\n                tempCtx.clearRect(0, 0, CANVAS_SIZE, CANVAS_SIZE)\n              }\n\n              // Draw this actor on the center of the screen.\n              window.drawActors({\n                actors: [\n                  {\n                    ...actor,\n                    x: 64,\n                    y: 64\n                  }\n                ]\n              })\n\n              // If we're using the framebuffer renderer,\n              // draw it to canvas right now.\n              if (this.useFrameBufferRenderer) {\n                this.writePixelDataToCanvas()\n              }\n\n              // Get its canvas.\n              const lilCanvas = trimCanvas({\n                ctx: this._canvas.getContext('2d'),\n                width: CANVAS_SIZE,\n                height: CANVAS_SIZE\n              })\n\n              // and append to button.\n              buttons[i].appendChild(lilCanvas)\n            })\n\n            this.drawUserGraphics(this.store.getState())\n            if (!this.useFrameBufferRenderer) {\n              tempCtx.restore()\n            }\n          }\n        }\n      }\n      // If we got to this point, send a null error to parent.\n      this.sendErrorToParent({ type: 'componentDidMount' })\n    } catch (e) {\n      // Error! Send it to parent.\n      this.sendErrorToParent({ type: 'componentDidMount', error: e })\n    }\n\n    // If we haven't started the timer yet, do so now.\n    if (!this.timer && !isPaused) {\n      this.startTimer()\n    }\n\n    // If we had a message,\n    if (message) {\n      // send the height to parent.\n      const height = document.body.querySelector('.container').scrollHeight\n      if (height !== this.heightSent && !this.isEmbed) {\n        message.ports[0].postMessage({ height })\n        this.heightSent = height\n      }\n    }\n  }\n\n  render() {\n    const {\n      isPaused,\n      actors,\n      alteredStates,\n      timelineIndex,\n      selectedActors,\n      fps,\n      run,\n      started\n    } = this.state\n    return (\n      <div className=\"Iframe\">\n        <div className=\"container\">\n          <canvas\n            className=\"master\"\n            width={CANVAS_SIZE}\n            height={CANVAS_SIZE}\n            ref={_canvas => {\n              this._canvas = _canvas\n            }}\n          />\n\n          <div\n            className={classNames('mobile-buttons', {\n              hide: !run\n            })}\n          >\n            <div\n              ref={this.setArrowLeftRef}\n              className=\"button left\"\n              onTouchStart={this.touchstartArrowLeft}\n              onTouchEnd={this.touchendArrowLeft}\n            >\n              &lt;\n            </div>\n            <div\n              ref={this.setArrowUpRef}\n              className=\"button up\"\n              onTouchStart={this.touchstartArrowUp}\n              onTouchEnd={this.touchendArrowUp}\n            >\n              <span>&gt;</span>\n            </div>\n            <div\n              ref={this.setArrowRightRef}\n              className=\"button right\"\n              onTouchStart={this.touchstartArrowRight}\n              onTouchEnd={this.touchendArrowRight}\n            >\n              &gt;\n            </div>\n            <div\n              ref={this.setaRef}\n              className=\"button a\"\n              onTouchStart={this.touchstarta}\n              onTouchEnd={this.touchenda}\n            >\n              A\n            </div>\n            <div\n              ref={this.setbRef}\n              className=\"button b\"\n              onTouchStart={this.touchstartb}\n              onTouchEnd={this.touchendb}\n            >\n              B\n            </div>\n            <div\n              ref={this.setArrowDownRef}\n              className=\"button down\"\n              onTouchStart={this.touchstartArrowDown}\n              onTouchEnd={this.touchendArrowDown}\n            >\n              <span>&lt;</span>\n            </div>\n            <div\n              ref={this.setSpaceRef}\n              className=\"button select\"\n              onTouchStart={this.touchstartSpace}\n              onTouchEnd={this.touchendSpace}\n            >\n              Select\n            </div>\n            <div\n              ref={this.setEnterRef}\n              className=\"button start\"\n              onTouchStart={this.touchstartEnter}\n              onTouchEnd={this.touchendEnter}\n            >\n              Start\n            </div>\n          </div>\n          <div className={classNames('stats', { invisible: run && !started })}>\n            <button className=\"button play\" onClick={this.handlePauseClick}>\n              {isPaused ? 'play' : 'pause'}\n            </button>\n\n            <button\n              className={classNames('button play', {\n                hide: isPaused\n              })}\n              onClick={this.handleRestartClick}\n            >\n              restart\n            </button>\n\n            <div\n              className={classNames('fps', {\n                hide: isPaused || true\n              })}\n            >\n              fps (avg): <span>{fps}</span>\n            </div>\n          </div>\n          <div\n            className={classNames('timeline', {\n              hide: run || alteredStates.length === 0,\n              invisible: !isPaused\n            })}\n          >\n            <input\n              type=\"range\"\n              value={timelineIndex}\n              min={0}\n              max={alteredStates.length - 1}\n              onChange={this.handleTimelineInput}\n            />\n            <ul\n              ref={_ul => {\n                this._ul = _ul\n              }}\n            >\n              {actors.map((actor, i) => (\n                <li\n                  key={actor.id}\n                  className={classNames({\n                    hide: i > 6\n                  })}\n                >\n                  <button\n                    className={classNames({\n                      active: selectedActors.includes(actor.id)\n                    })}\n                    onClick={() => this.handleActorClick(actor.id)}\n                  />\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Iframe\n","import { version } from '../../package.json'\nimport skeleton from '../skeleton.js'\nconst boot = `\n\nconst modes = ['glitch', 'numbers', 'pre-ram', 'ram', 'run', 'end']\n\nconst size = range(128)\nconst d = 1\n\nconst rects = flatten(size.map(x => size.map(y => [x, y, d, 128])))\n\nconst biosLines = range(18).map(() => {\n  return (\n    '  ' +\n    range(4)\n      .map(() => random(1000, 9999))\n      .join('      ')\n  )\n})\n\n// init = state => {\n//   state.counter = 0\n//   state.totalElapsed = 0\n//   state.modeIndex = 0\n// }\n\nlet hasStarted = false\nupdate = (state, input, elapsed) => {\n  if (!hasStarted) {\n    state.counter = 0\n    state.totalElapsed = 0\n    state.modeIndex = 0\n    hasStarted = true\n  }\n\n  const mode = modes[state.modeIndex]\n\n  state.counter++\n  state.totalElapsed += elapsed\n\n  if (mode === 'glitch' && state.totalElapsed > 500) {\n    state.modeIndex++\n    state.totalElapsed = 0\n  } else if (mode === 'numbers' && state.totalElapsed > 100) {\n    state.modeIndex++\n    state.totalElapsed = 0\n  } else if (mode === 'pre-ram' && state.totalElapsed > 100) {\n    state.modeIndex++\n    state.totalElapsed = 0\n    state.counter = 0\n  } else if (mode === 'ram' && state.counter > 64 && _script8.end) {\n    // The _script8.end function is not defined until we're done fetching the gist.\n    state.modeIndex++\n    state.totalElapsed = 0\n    state.counter++\n  } else if (mode === 'run') {\n    if (input.__mousedown) {\n      ${skeleton}\n      _script8.end()\n    }\n  }\n}\n\ndraw = state => {\n  const { modeIndex, counter } = state\n  const mode = modes[modeIndex]\n\n  if (mode === 'glitch') {\n    rects.forEach(rect => {\n      rectFill(...rect, rect[0] + (rect[1] * counter) / 100)\n    })\n  }\n\n  if (mode === 'numbers') {\n    const factor = 4\n    if (counter % factor === 0) {\n      rectFill(0, 0, 128, 128, 7)\n      biosLines.forEach((line, j) => {\n        print(0, 128 + 7 * j - (7 * counter) / factor, line, 5)\n      })\n    }\n  }\n\n  if (mode === 'pre-ram') {\n    rectFill(0, 0, 128, 128, 7)\n  }\n\n  if (mode === 'ram') {\n    rectFill(0, 0, 128, 128, 6)\n    print(7, 7 * 1, 'script-8', 0)\n    print(7, 7 * 3, 'bios (c) 1980 pantron inc.', 3)\n    print(7, 7 * 4, 'version ${version}', 3)\n    print(7, 7 * 6, 'RAM: ' + Math.min(state.counter, 32) + ' kb', 3)\n\n    print(\n      7,\n      7 * 9,\n      'booting cassette ' +\n        (Math.floor(state.counter / 20) % 2 === 0 ? '' : '+'),\n      3\n    )\n\n    rectFill(48 + 3 * 0, 7, 3, 5, 0)\n    rectFill(48 + 3 * 1, 7, 3, 5, 1)\n    rectFill(48 + 3 * 2, 7, 3, 5, 2)\n    rectFill(48 + 3 * 3, 7, 3, 5, 3)\n    rectFill(48 + 3 * 4, 7, 3, 5, 4)\n    rectFill(48 + 3 * 5, 7, 3, 5, 5)\n    rectFill(48 + 3 * 6, 7, 3, 5, 4)\n    rectFill(48 + 3 * 7, 7, 3, 5, 3)\n    rectFill(48 + 3 * 8, 7, 3, 5, 2)\n    rectFill(48 + 3 * 9, 7, 3, 5, 1)\n    rectFill(48 + 3 * 10, 7, 3, 5, 0)\n  }\n\n  if (mode === 'run') {\n    rectFill(0, 0, 128, 128, 6)\n    print(7, 7 * 1, 'script-8', 0)\n    print(7, 7 * 3, 'bios (c) 1980 pantron inc.', 3)\n    print(7, 7 * 4, 'version ${version}', 3)\n    print(7, 7 * 6, 'RAM: ' + Math.min(state.counter, 32) + ' kb', 3)\n\n    print(7, 7 * 9, 'booting cassette done. ', 3)\n\n    rectFill(48 + 3 * 0, 7, 3, 5, 0)\n    rectFill(48 + 3 * 1, 7, 3, 5, 1)\n    rectFill(48 + 3 * 2, 7, 3, 5, 2)\n    rectFill(48 + 3 * 3, 7, 3, 5, 3)\n    rectFill(48 + 3 * 4, 7, 3, 5, 4)\n    rectFill(48 + 3 * 5, 7, 3, 5, 5)\n    rectFill(48 + 3 * 6, 7, 3, 5, 4)\n    rectFill(48 + 3 * 7, 7, 3, 5, 3)\n    rectFill(48 + 3 * 8, 7, 3, 5, 2)\n    rectFill(48 + 3 * 9, 7, 3, 5, 1)\n    rectFill(48 + 3 * 10, 7, 3, 5, 0)\n    print(7, 7 * 11, '> click to run', 3)\n    rectFill(7, 7 * 12, 4, 5, Math.floor(state.counter / 25) % 2 ? 0 : 6)\n  }\n}\n\n`\n\nexport default boot\n","const trimCanvas = ({ ctx, width, height }) => {\n  const pixels = ctx.getImageData(0, 0, width, height)\n  const length = pixels.data.length\n  let i\n  const bound = {\n    top: null,\n    left: null,\n    right: null,\n    bottom: null\n  }\n  let x\n  let y\n\n  for (i = 0; i < length; i += 4) {\n    if (pixels.data[i + 3] !== 0) {\n      x = (i / 4) % width\n      y = ~~(i / 4 / width)\n\n      if (bound.top === null) {\n        bound.top = y\n      }\n\n      if (bound.left === null) {\n        bound.left = x\n      } else if (x < bound.left) {\n        bound.left = x\n      }\n\n      if (bound.right === null) {\n        bound.right = x\n      } else if (bound.right < x) {\n        bound.right = x\n      }\n\n      if (bound.bottom === null) {\n        bound.bottom = y\n      } else if (bound.bottom < y) {\n        bound.bottom = y\n      }\n    }\n  }\n\n  bound.bottom += 1\n  bound.right += 1\n\n  const copyCanvas = document.createElement('canvas')\n  const copy = copyCanvas.getContext('2d')\n  const trimHeight = bound.bottom - bound.top\n  const trimWidth = bound.right - bound.left\n  const side = Math.max(trimWidth, trimHeight)\n  const trimmed = ctx.getImageData(bound.left, bound.top, trimWidth, trimHeight)\n\n  copy.canvas.width = side\n  copy.canvas.height = side\n  copy.putImageData(trimmed, 0, 0)\n  return copyCanvas\n}\n\nexport default trimCanvas\n","const validateToken = ({ token, blacklist, globals, shadows }) => {\n  let isValid\n\n  // If user types a token in blacklist,\n  // it's most definitely invalid.\n  if (blacklist.has(token)) {\n    isValid = false\n  } else if (\n    // If user types a token defined in globals or updateableGlobals,\n    // it's valid.\n    globals.has(token)\n  ) {\n    isValid = true\n  } else if (window.hasOwnProperty(token)) {\n    // If user types a token on window scope (e.g. `screen`),\n    // add it to the list of __shadows, and make it valid.\n    shadows.add(token)\n    isValid = true\n  } else {\n    // Otherwise, return valid.\n    isValid = true\n  }\n\n  return isValid\n}\n\nexport default validateToken\n","const createReducer = logger => {\n  const reducer = (state = {}, action) => {\n    switch (action.type) {\n      case 'INIT': {\n        let newState\n        try {\n          // This approach mutates state.\n          newState = JSON.parse(JSON.stringify(state))\n          window.init(newState)\n\n          // This approach does not mutate state.\n          // newState = window.init() || {}\n\n          if (newState.actors) {\n            // Find actors with no id.\n            const namelessActors = newState.actors.filter(actor => !actor.id)\n            if (namelessActors.length) {\n              throw new Error('Actors must have an id property.')\n            }\n          }\n          logger({ type: 'reducerError' })\n        } catch (error) {\n          newState = state\n          logger({ type: 'reducerError', error })\n        } finally {\n          return newState\n        }\n      }\n      case 'UPDATE': {\n        let newState\n        try {\n          // This approach mutates state.\n          newState = JSON.parse(JSON.stringify(state))\n          window.update(newState, action.input, action.elapsed)\n\n          // This approach does not mutate state.\n          // newState = window.update(state, action.input, action.elapsed) || {}\n\n          if (newState.actors) {\n            // Find actors with no id.\n            const namelessActors = newState.actors.filter(actor => !actor.id)\n            if (namelessActors.length) {\n              throw new Error('Actors must have an id property.')\n            }\n          }\n          logger({ type: 'reducerError' })\n        } catch (error) {\n          newState = state\n          logger({ type: 'reducerError', error })\n        } finally {\n          return newState\n        }\n      }\n      default:\n        return state\n    }\n  }\n  return reducer\n}\n\nexport default createReducer\n","const screenTypes = {\n  BOOT: 'BOOT',\n  HOME: 'HOME',\n  RUN: 'RUN',\n  HELP: 'HELP',\n  CODE: 'CODE',\n  SPRITE: 'SPRITE',\n  MAP: 'MAP',\n  SONG: 'SONG',\n  CHAIN: 'CHAIN',\n  PHRASE: 'PHRASE',\n  SHELF: 'SHELF'\n}\n\nconst cycleOrder = [\n  screenTypes.HOME,\n  screenTypes.CODE,\n  screenTypes.SPRITE,\n  screenTypes.MAP,\n  screenTypes.PHRASE,\n  screenTypes.CHAIN,\n  screenTypes.SONG,\n  screenTypes.HELP,\n  screenTypes.SHELF,\n  screenTypes.RUN\n]\n\nconst getNextScreen = screen => {\n  const index = cycleOrder.indexOf(screen)\n  return cycleOrder[(index + 1) % cycleOrder.length]\n}\n\nconst getPreviousScreen = screen => {\n  const index = cycleOrder.indexOf(screen)\n  return cycleOrder[(index - 1 + cycleOrder.length) % cycleOrder.length]\n}\n\nexport { getNextScreen, getPreviousScreen }\n\nexport default screenTypes\n","import screenTypes from '../utils/screenTypes.js'\nimport blank from '../blank.js'\nimport { version } from '../../package.json'\n\n// TODO: why do we have to make game keys?\nconst initialState = {\n  iframeVersion: version,\n  errorLine: null,\n  screen: screenTypes.BOOT,\n  // screen: screenTypes.HOME,\n  booted: false,\n  gist: {},\n  game: {\n    0: {\n      text: blank,\n      active: true,\n      key: 0\n    }\n  },\n  token: {},\n  nextAction: null,\n  sprites: {},\n  map: [],\n  phrases: {},\n  chains: {},\n  songs: {},\n  docHistories: {},\n  dismissedNotices: [],\n  selectedUi: {\n    phrase: 0,\n    chain: 0,\n    song: 0\n  },\n  // tutorial: {\n  //   lessonIndex: 1,\n  //   slideIndex: 0\n  // },\n  tutorial: null,\n  sound: true,\n  shelving: false\n}\n\nexport default initialState\n","export default ``\n","import _ from 'lodash'\nimport initialState from '../store/initialState.js'\n\nconst extractGistMap = data =>\n  JSON.parse(\n    _.get(\n      data,\n      'files[\"map.json\"].content',\n      JSON.stringify(initialState.map, null, 2)\n    )\n  )\n\nexport { extractGistMap }\n","import _ from 'lodash'\nimport initialState from '../store/initialState.js'\n\nconst extractGistSprites = data =>\n  JSON.parse(\n    _.get(\n      data,\n      'files[\"sprites.json\"].content',\n      JSON.stringify(initialState.sprites, null, 2)\n    )\n  )\nexport { extractGistSprites }\n","import _ from 'lodash'\nimport omitEmpty from 'omit-empty'\nimport initialState from '../store/initialState.js'\nimport toLetter, { letterToNumber } from '../toLetter.js'\n\nconst compressPhrases = phrases => {\n  const result = _.mapValues(phrases, phrase => {\n    const notes = _.map(phrase.notes, (note, noteIndex) =>\n      [noteIndex, toLetter(note.note), note.octave, note.volume].join('')\n    )\n    return {\n      notes,\n      tempo: _.isNil(phrase.tempo) ? 0 : phrase.tempo\n    }\n  })\n  return result\n}\n\nconst expandPhrases = phrases => {\n  // `phrases` is an object, e.g. (old style)\n  // {\n  //   \"0\": [\n  //     \"0f17\",\n  //     \"1g17\",\n  //     \"2a17\",\n\n  const result = omitEmpty(\n    _.mapValues(phrases, phrase => {\n      // If phrase is an array, it's an old kind. We have to convert it.\n      const phraseIsArray = Array.isArray(phrase)\n      const notes = _(phraseIsArray ? phrase : phrase.notes)\n        .map(note => note.match(/^(\\d+)(.*)(\\d)(\\d)/).slice(1, 5))\n        .map(match => ({\n          index: match[0],\n          note: letterToNumber(match[1]),\n          octave: +match[2],\n          volume: +match[3]\n        }))\n        .keyBy('index')\n        .mapValues(d => _.omit(d, 'index'))\n        .value()\n\n      return _.isEmpty(notes)\n        ? null\n        : {\n            notes,\n            tempo: phraseIsArray ? 0 : _.isNil(phrase.tempo) ? 0 : phrase.tempo\n          }\n    })\n  )\n\n  return result\n}\n\nconst extractGistPhrases = data =>\n  expandPhrases(\n    JSON.parse(\n      _.get(\n        data,\n        'files[\"phrases.json\"].content',\n        JSON.stringify(initialState.phrases, null, 2)\n      )\n    )\n  )\n\nexport { extractGistPhrases, compressPhrases, expandPhrases }\n","import _ from 'lodash'\nimport initialState from '../store/initialState.js'\n\nconst extractGistChains = data =>\n  JSON.parse(\n    _.get(\n      data,\n      'files[\"chains.json\"].content',\n      JSON.stringify(initialState.chains, null, 2)\n    )\n  )\n\nexport { extractGistChains }\n","import _ from 'lodash'\nimport initialState from '../store/initialState.js'\n\nconst extractGistSongs = data =>\n  JSON.parse(\n    _.get(\n      data,\n      'files[\"songs.json\"].content',\n      JSON.stringify(initialState.songs, null, 2)\n    )\n  )\n\nexport { extractGistSongs }\n","import { detect } from 'detect-browser'\n\nconst browser = detect()\n\nconst regexLookup = {\n  /* Chrome Stack Trace Example:\n\n     TypeError: Cannot read property 'toString' of undefined\n     at print (print.js:7)\n     at print (index.js:72)\n     at draw (eval at <anonymous> (eval at evalCode (Iframe.js:644)), <anonymous>:2:3)\n     at Iframe.drawUserGraphics (Iframe.js:397)\n     at timerCallback (Iframe.js:702)\n     at tick (interval.js:10)\n     at timerFlush (timer.js:61)\n     at wake (timer.js:71)\n  */\n  chrome: /\\(eval at <anonymous> \\(eval at evalCode \\(.+:\\d+\\)\\), <anonymous>:(\\d+):(\\d+)\\)/,\n  /* Firefox Stack Trace Example:\n\n     print@http://localhost:3001/static/js/bundle.js:69091:7\n     print@http://localhost:3001/static/js/bundle.js:68699:7\n     draw@http://localhost:3001/static/js/bundle.js line 67598 > eval line 6 > eval:2:3\n     drawUserGraphics@http://localhost:3001/static/js/bundle.js:67340:9\n     timerCallback@http://localhost:3001/static/js/bundle.js:67650:11\n     tick@http://localhost:3001/static/js/bundle.js:1475:5\n     timerFlush@http://localhost:3001/static/js/bundle.js:1580:40\n     wake@http://localhost:3001/static/js/bundle.js:1590:5\n\n  */\n  firefox: /line \\d+ > eval line \\d+ > eval:(\\d+):(\\d+)/,\n  /* Edge Stack Trace Example:\n\n     TypeError: Unable to get property 'toString' of undefined or null reference\n     at print (http://localhost:3001/static/js/bundle.js:69091:3)\n     at print (http://localhost:3001/static/js/bundle.js:68699:7)\n     at draw (eval code:2:3)\n     at drawUserGraphics (http://localhost:3001/static/js/bundle.js:67340:9)\n     at timerCallback (http://localhost:3001/static/js/bundle.js:67650:11)\n     at tick (http://localhost:3001/static/js/bundle.js:1475:5)\n     at timerFlush (http://localhost:3001/static/js/bundle.js:1580:40)\n     at wake (http://localhost:3001/static/js/bundle.js:1590:5)\n  */\n  edge: /\\(eval code:(\\d+):(\\d+)\\)/\n}\n\nexport function getEvaledErrorPosition(error) {\n  const regex = regexLookup[browser.name]\n  if (regex && error.stack) {\n    const match = regex.exec(error.stack)\n    if (match) {\n      return {\n        line: match[1],\n        column: match[2]\n      }\n    }\n  } else if (browser.name === 'safari') {\n    return {\n      line: error.line,\n      column: error.column\n    }\n  }\n}\n","const drawLine = ({ x1, y1, x2, y2, setPixel, color }) => {\n  let steep = false\n\n  if (Math.abs(x1 - x2) < Math.abs(y1 - y2)) {\n    ;[x1, y1] = [y1, x1]\n    ;[x2, y2] = [y2, x2]\n    steep = true\n  }\n  if (x1 > x2) {\n    ;[x1, x2] = [x2, x1]\n    ;[y1, y2] = [y2, y1]\n  }\n\n  const dx = x2 - x1\n  const dy = y2 - y1\n  const derror = Math.abs(dy) * 2\n  let error = 0\n  let y = y1\n\n  for (let x = x1; x <= x2; x++) {\n    if (steep) {\n      setPixel(y, x, color)\n    } else {\n      setPixel(x, y, color)\n    }\n    error += derror\n    if (error > dx) {\n      if (y2 > y1) {\n        y++\n      } else {\n        y--\n      }\n      error -= dx * 2\n    }\n  }\n}\n\nexport default drawLine\n","const drawPolyStroke = ({ points, args, line }) => {\n  if (!points.length) {\n    return\n  }\n  let c, newPoints, xRot, yRot, midX, midY\n  switch (args.length) {\n    case 1:\n      // polyStroke(points, color)\n      newPoints = points.map(p => [...p])\n      c = args[0]\n      break\n    case 2:\n      // polyStroke(points, rotate, color)\n      xRot = Math.cos((args[0] / 180) * Math.PI)\n      yRot = Math.sin((args[0] / 180) * Math.PI)\n      const xs = points.map(p => p[0])\n      const ys = points.map(p => p[1])\n      midX = (Math.min.apply(Math, xs) + Math.max.apply(Math, xs)) / 2\n      midY = (Math.min.apply(Math, ys) + Math.max.apply(Math, ys)) / 2\n      newPoints = points.map(p => [\n        (p[0] - midX) * xRot - (p[1] - midY) * yRot + midX,\n        (p[0] - midX) * yRot + (p[1] - midY) * xRot + midY\n      ])\n      c = args[1]\n      break\n    case 3:\n      throw Error('`polyStroke` found 3 arguments instead of 2, 3, or 5.')\n    default:\n      // polyStroke(points, rotate, x, y, color)\n      xRot = Math.cos((args[0] / 180) * Math.PI)\n      yRot = Math.sin((args[0] / 180) * Math.PI)\n      midX = args[1]\n      midY = args[2]\n      c = args[3]\n      newPoints = points.map(p => [\n        (p[0] - midX) * xRot - (p[1] - midY) * yRot + midX,\n        (p[0] - midX) * yRot + (p[1] - midY) * xRot + midY\n      ])\n      break\n  }\n  for (let i = 1; i < points.length; i++) {\n    line(\n      Math.round(newPoints[i - 1][0]), // x1\n      Math.round(newPoints[i - 1][1]), // y1\n      Math.round(newPoints[i][0]), // x2\n      Math.round(newPoints[i][1]), // y2\n      c\n    )\n  }\n  line(\n    Math.round(newPoints[newPoints.length - 1][0]), // x1\n    Math.round(newPoints[newPoints.length - 1][1]), // y1\n    Math.round(newPoints[0][0]), // x2\n    Math.round(newPoints[0][1]), // y2\n    c\n  )\n}\n\nexport default drawPolyStroke\n","const drawCircle = ({ cx, cy, radius, color, onlyStroke, setPixel, line }) => {\n  let x = radius - 1\n  let y = 0\n  let dx = 1\n  let dy = 1\n  let err = dx - (radius << 1)\n\n  // Draw the correct primitive at x offset from the center, and y above and below the center\n  // If onlyStroke, then draw two points\n  // otherwise, draw a line connecting the two points\n  const drawReflectedPair = (x, y) => {\n    if (onlyStroke) {\n      setPixel(cx + x, cy + y, color)\n      setPixel(cx + x, cy - y, color)\n    } else {\n      line(cx + x, cy + y, cx + x, cy - y, color)\n    }\n  }\n\n  if (radius === 2) {\n    // Draw Left Pixel\n    drawReflectedPair(-1, 0)\n    // Draw Top and Bottom Pixels\n    drawReflectedPair(0, 1)\n    // Draw Right Pixel\n    drawReflectedPair(1, 0)\n  } else if (radius === 3) {\n    // Draw Left Edge\n    drawReflectedPair(-2, 0)\n    drawReflectedPair(-2, 1)\n    // Draw Top and Bottom Edge\n    drawReflectedPair(-1, 2)\n    drawReflectedPair(-0, 2)\n    drawReflectedPair(1, 2)\n    // Draw Right Edge\n    drawReflectedPair(2, 1)\n    drawReflectedPair(2, 0)\n  } else {\n    while (x >= y) {\n      // Draw every octant\n      drawReflectedPair(x, y)\n      drawReflectedPair(-x, y)\n      drawReflectedPair(y, x)\n      drawReflectedPair(-y, x)\n\n      if (err <= 0) {\n        y++\n        err += dy\n        dy += 2\n      }\n\n      if (err > 0) {\n        x--\n        dx += 2\n        err += dx - (radius << 1)\n      }\n    }\n  }\n\n}\n\nexport default drawCircle\n","import clamp from 'lodash/clamp'\n\nconst drawSprite = ({ x, y, spriteIndex, darken, flipH, flipV, setPixel, sprites }) => {\n  if (sprites[spriteIndex]) {\n    sprites[spriteIndex].slice(0, 8).forEach((cells, rowIndex) => {\n      cells.split('').forEach((color, colIndex) => {\n        if (color !== ' ') {\n          const clamped = clamp(+color - darken, 0, 7)\n          setPixel(\n            Math.floor(x) + (flipH ? 7 - colIndex : colIndex),\n            Math.floor(y) + (flipV ? 7 - rowIndex : rowIndex),\n            clamped)\n        }\n      })\n    })\n  }\n}\n\nexport default drawSprite\n","const alphabet = {\n  '<': [\n    0, 0, 1,\n    0, 1, 0,\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1,\n    0, 0, 0,\n  ],\n  '>': [\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1,\n    0, 1, 0,\n    1, 0, 0,\n    0, 0, 0,\n  ],\n  '/': [\n    0, 0, 0,\n    0, 0, 1,\n    0, 1, 0,\n    0, 1, 0,\n    1, 0, 0,\n    0, 0, 0,\n  ],\n  ':': [\n    0, 0, 0,\n    0, 0, 0,\n    0, 1, 0,\n    0, 0, 0,\n    0, 1, 0,\n    0, 0, 0,\n  ],\n  '|': [\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 0, 0,\n  ],\n  '(': [\n    0, 1,\n    1, 0,\n    1, 0,\n    1, 0,\n    0, 1,\n    0, 0,\n  ],\n  ')': [\n    1, 0,\n    0, 1,\n    0, 1,\n    0, 1,\n    1, 0,\n    0, 0,\n  ],\n  0: [\n    0, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  1: [\n    1, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  2: [\n    1, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  3: [\n    1, 1, 1,\n    0, 0, 1,\n    0, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  4: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 0,\n  ],\n  5: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  6: [\n    1, 0, 0,\n    1, 0, 0,\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  7: [\n    1, 1, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 0,\n  ],\n  8: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  9: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 0,\n  ],\n\n  ' ': [\n    0, 0,\n    0, 0,\n    0, 0,\n    0, 0,\n    0, 0,\n    0, 0\n  ],\n  '.': [\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n  ],\n  ',': [\n    0,\n    0,\n    0,\n    0,\n    1,\n    1,\n  ],\n  '+': [\n    0, 0, 0,\n    0, 1, 0,\n    1, 1, 1,\n    0, 1, 0,\n    0, 0, 0,\n    0, 0, 0\n  ],\n  '-': [\n    0, 0, 0,\n    0, 0, 0,\n    1, 1, 1,\n    0, 0, 0,\n    0, 0, 0,\n    0, 0, 0\n  ],\n  '!': [\n    1,\n    1,\n    1,\n    0,\n    1,\n    0,\n  ],\n  '?': [\n    1, 1,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 0,\n    0, 0,\n  ],\n  a: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  b: [\n    1, 1, 0,\n    1, 0, 1,\n    1, 1, 0,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  c: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 0, 0,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  d: [\n    1, 1, 0,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  e: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  f: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    1, 0, 0,\n    1, 0, 0,\n    0, 0, 0\n  ],\n  g: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  h: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  i: [\n    1, 1, 1,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  j: [\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  k: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 0,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  l: [\n    1, 0, 0,\n    1, 0, 0,\n    1, 0, 0,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  m: [\n    1, 0, 1,\n    1, 1, 1,\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  n: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  o: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  p: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 0, 0,\n    1, 0, 0,\n    0, 0, 0\n  ],\n  q: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 1, 1,\n    0, 0, 0\n  ],\n  r: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 0,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  s: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  t: [\n    1, 1, 1,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 0, 0\n  ],\n  u: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  v: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 0,\n    0, 0, 0\n  ],\n  w: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 1, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  x: [\n    1, 0, 1,\n    1, 0, 1,\n    0, 1, 0,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  y: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  z: [\n    1, 1, 1,\n    0, 0, 1,\n    0, 1, 0,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n}\n\nexport default alphabet\n","import alphabet from './alphabet.js'\n\nconst drawText = ({ x, y, letters, c, setPixel }) => {\n  let currentX = Math.floor(x)\n  let currentY = Math.floor(y)\n\n  // Loop over every letter in the string to print.\n  for (let letter of letters.toString().split('')) {\n    // Lookup the pixels for the given letter.\n    const pixels = alphabet[letter.toLowerCase()]\n    // If we don't have any pixels, then treat this character as a space which\n    // is 3 pixels wide and continue to the next character.\n    if (!pixels) {\n      currentX += 3 // Couldn't find a character\n      continue\n    }\n\n    // Calculate the letter width by dividing the pixel count\n    // by the standard letter height of 6.\n    let letterWidth = pixels.length / 6\n\n    // Loop over every pixel and draw it to the screen.\n    for (let x = 0; x < letterWidth; x++) {\n      for (let y = 0; y < 6; y++) {\n        if (pixels[y * letterWidth + x]) {\n          setPixel(currentX + x, currentY + y, c)\n        }\n      }\n    }\n\n    // Move on to the next character position by moving the previous character\n    // width plus 1 for a slight space between characters.\n    currentX += letterWidth + 1\n  }\n}\n\nexport default drawText\n","import { get } from 'lodash'\nimport colors from '../colors.js'\nimport drawLine from './line.js'\nimport drawPolyStroke from './polyStroke.js'\nimport { drawRectStroke, drawRectFill } from './rect.js'\nimport drawCircle from './circle.js'\nimport drawSprite from './sprite.js'\nimport drawText from './print.js'\n\nconst backgroundColor = 7\n\nconst canvasAPI = ({\n  pixels,\n  width: canvasWidth,\n  height: canvasHeight,\n  sprites,\n  // Rename to initialMap, since we have a function named map.\n  map: initialMap = []\n}) => {\n  let _runningMap = JSON.parse(JSON.stringify(initialMap))\n  let _cameraX = 0\n  let _cameraY = 0\n\n  const camera = (x = 0, y = 0) => {\n    _cameraX = Math.floor(x)\n    _cameraY = Math.floor(y)\n  }\n\n  const clear = (c = 7) => {\n    pixels.fill(colors.int(c))\n  }\n\n  const setPixel = (x, y, c = 0) => {\n    x = Math.floor(x - _cameraX)\n    y = Math.floor(y - _cameraY)\n    if (x < 0 || x >= canvasWidth || y < 0 || y >= canvasHeight) return\n    const int = colors.int(c)\n    if (int) pixels[y * canvasWidth + x] = int\n  }\n\n  const getPixel = (x, y) => {\n    x = Math.floor(x - _cameraX)\n    y = Math.floor(y - _cameraY)\n    if (x < 0 || x >= canvasWidth || y < 0 || y >= canvasHeight)\n      return backgroundColor\n    return colors.lookupInt(pixels[y * canvasHeight + x])\n  }\n\n  const line = (x1, y1, x2, y2, c = 0) => {\n    drawLine({ x1, y1, x2, y2, setPixel, color: c })\n  }\n\n  const polyStroke = (points, ...args) => {\n    drawPolyStroke({ points, args, line })\n  }\n\n  const rectStroke = (x, y, w, h, c = 0) => {\n    drawRectStroke({\n      x,\n      y,\n      w,\n      h,\n      c,\n      line\n    })\n  }\n\n  const rectFill = (x, y, w, h, c = 0) => {\n    drawRectFill({\n      x,\n      y,\n      w,\n      h,\n      c,\n      line\n    })\n  }\n\n  const circStroke = (x, y, r, c = 0) => {\n    drawCircle({\n      cx: Math.floor(x),\n      cy: Math.floor(y),\n      radius: Math.floor(r),\n      color: c,\n      onlyStroke: true,\n      setPixel,\n      line\n    })\n  }\n\n  const circFill = (x, y, r, c = 0) => {\n    drawCircle({\n      cx: Math.floor(x),\n      cy: Math.floor(y),\n      radius: Math.floor(r),\n      color: c,\n      setPixel,\n      line\n    })\n  }\n\n  const print = (x, y, letters, c = 0) => {\n    drawText({\n      x,\n      y,\n      letters,\n      c,\n      setPixel\n    })\n  }\n\n  const sprite = (\n    x,\n    y,\n    spriteIndex,\n    darken = 0,\n    flipH = false,\n    flipV = false\n  ) => {\n    if (x - _cameraX < -8 || x - _cameraX > canvasWidth) return\n    if (y - _cameraY < -8 || y - _cameraY > canvasHeight) return\n\n    drawSprite({\n      x,\n      y,\n      spriteIndex,\n      darken,\n      flipH,\n      flipV,\n      setPixel,\n      sprites\n    })\n  }\n\n  const getTile = (mx, my) => {\n    const tile = get(_runningMap, [my, mx], null)\n    const result = tile !== null ? sprites[tile] : null\n    if (result) {\n      result.type = result[8] || 0\n      result.number = tile\n    }\n    return result\n  }\n\n  const setTile = (mx, my, spriteNumber) => {\n    _runningMap[my][mx] = spriteNumber\n  }\n\n  const map = (x = 0, y = 0) => {\n    // Loop over every element in the map\n    _runningMap.forEach((row, rowNumber) => {\n      row.forEach((spriteIndex, colNumber) => {\n        // If the element has a sprite index,\n        if (spriteIndex !== null) {\n          // Render at the correct offset position\n          const dx = (colNumber + x) * 8\n          const dy = rowNumber * 8\n          sprite(dx, dy, spriteIndex)\n        }\n      })\n    })\n  }\n\n  const resetMap = () => {\n    _runningMap = JSON.parse(JSON.stringify(initialMap))\n  }\n\n  return {\n    camera,\n    clear,\n    setPixel,\n    getPixel,\n    line,\n    polyStroke,\n    rectStroke,\n    rectFill,\n    circStroke,\n    circFill,\n    print,\n    sprite,\n    getTile,\n    setTile,\n    map,\n    resetMap\n  }\n}\n\nexport default canvasAPI\n","export const drawRectStroke = ({ x, y, w, h, c, line }) => {\n  let left = Math.floor(x)\n  let right = Math.floor(x + w - 1)\n  let top = Math.floor(y)\n  let bottom = Math.floor(y + h - 1)\n  line(left, top, right, top, c)\n  line(left, bottom, right, bottom, c)\n  line(left, top, left, bottom, c)\n  line(right, top, right, bottom, c)\n}\n\nexport const drawRectFill = ({ x, y, w, h, c, line }) => {\n  let left = Math.floor(x)\n  let right = Math.floor(x + w - 1)\n  let top = Math.floor(y)\n  let bottom = Math.floor(y + h - 1)\n\n  for (let rectX = left; rectX <= right; rectX++) {\n    line(rectX, top, rectX, bottom, c)\n  }\n}\n","const circle = ({ cx, cy, radius, ctx, color, onlyStroke }) => {\n  let x = radius - 1\n  let y = 0\n  let dx = 1\n  let dy = 1\n  let err = dx - (radius << 1)\n\n  ctx.fillStyle = color\n  ctx.strokeStyle = color\n\n  const drawPixel = (x, y) => {\n    ctx.fillRect(x, y, 1, 1)\n  }\n\n  const drawLine = ({ x0, x1, y }) => {\n    ctx.beginPath()\n    ctx.moveTo(x0 + 1, y + 0.5)\n    ctx.lineTo(x1, y + 0.5)\n    ctx.stroke()\n  }\n\n  if (radius === 2) {\n    drawPixel(cx + 1, cy)\n    drawPixel(cx - 1, cy)\n    drawPixel(cx, cy + 1)\n    drawPixel(cx, cy - 1)\n    if (!onlyStroke) {\n      drawPixel(cx, cy)\n    }\n  } else if (radius === 3) {\n    drawLine({ x0: cx - 2, x1: cx + 2, y: cy - 2 })\n    drawLine({ x0: cx - 2, x1: cx + 2, y: cy + 2 })\n    if (onlyStroke) {\n      drawPixel(cx + 2, cy - 1)\n      drawPixel(cx + 2, cy)\n      drawPixel(cx + 2, cy + 1)\n      drawPixel(cx - 2, cy - 1)\n      drawPixel(cx - 2, cy)\n      drawPixel(cx - 2, cy + 1)\n    } else {\n      drawLine({ x0: cx - 3, x1: cx + 3, y: cy - 1 })\n      drawLine({ x0: cx - 3, x1: cx + 3, y: cy })\n      drawLine({ x0: cx - 3, x1: cx + 3, y: cy + 1 })\n    }\n  } else {\n    while (x >= y) {\n      if (onlyStroke) {\n        drawPixel(cx + x, cy + y)\n        drawPixel(cx - x, cy + y)\n        drawPixel(cx + y, cy + x)\n        drawPixel(cx - y, cy + x)\n        drawPixel(cx + x, cy - y)\n        drawPixel(cx - x, cy - y)\n        drawPixel(cx + y, cy - x)\n        drawPixel(cx - y, cy - x)\n      } else {\n        drawLine({ x0: cx + y, x1: cx - y, y: cy - x })\n        drawLine({ x0: cx + x, x1: cx - x, y: cy - y })\n        drawLine({ x0: cx + x, x1: cx - x, y: cy + y })\n        drawLine({ x0: cx + y, x1: cx - y, y: cy + x })\n      }\n      if (err <= 0) {\n        y++\n        err += dy\n        dy += 2\n      }\n      if (err > 0) {\n        x--\n        dx += 2\n        err += dx - (radius << 1)\n      }\n    }\n  }\n}\n\nexport default circle\n","const line = ({ x1, y1, x2, y2, ctx, color }) => {\n  ctx.fillStyle = color\n  let steep = false\n\n  if (Math.abs(x1 - x2) < Math.abs(y1 - y2)) {\n    ;[x1, y1] = [y1, x1]\n    ;[x2, y2] = [y2, x2]\n    steep = true\n  }\n  if (x1 > x2) {\n    ;[x1, x2] = [x2, x1]\n    ;[y1, y2] = [y2, y1]\n  }\n\n  const dx = x2 - x1\n  const dy = y2 - y1\n  const derror = Math.abs(dy) * 2\n  let error = 0\n  let y = y1\n\n  for (let x = x1; x <= x2; x++) {\n    if (steep) {\n      ctx.fillRect(y, x, 1, 1)\n    } else {\n      ctx.fillRect(x, y, 1, 1)\n    }\n    error += derror\n    if (error > dx) {\n      if (y2 > y1) {\n        y++\n      } else {\n        y--\n      }\n      error -= dx * 2\n    }\n  }\n}\n\nexport default line\n","import colors from '../colors.js'\nimport line from './line.js'\n\nconst polyStroke = ({ points, args, ctx }) => {\n  if (!points.length) {\n    return\n  }\n  let c, newPoints, xRot, yRot, midX, midY\n  switch (args.length) {\n    case 1:\n      // polyStroke(points, color)\n      newPoints = points.map(p => [...p])\n      c = args[0]\n      break\n    case 2:\n      // polyStroke(points, rotate, color)\n      xRot = Math.cos((args[0] / 180) * Math.PI)\n      yRot = Math.sin((args[0] / 180) * Math.PI)\n      const xs = points.map(p => p[0])\n      const ys = points.map(p => p[1])\n      midX = (Math.min.apply(Math, xs) + Math.max.apply(Math, xs)) / 2\n      midY = (Math.min.apply(Math, ys) + Math.max.apply(Math, ys)) / 2\n      newPoints = points.map(p => [\n        (p[0] - midX) * xRot - (p[1] - midY) * yRot + midX,\n        (p[0] - midX) * yRot + (p[1] - midY) * xRot + midY\n      ])\n      c = args[1]\n      break\n    case 3:\n      throw Error('`polyStroke` found 3 arguments instead of 2, 3, or 5.')\n    default:\n      // polyStroke(points, rotate, x, y, color)\n      xRot = Math.cos((args[0] / 180) * Math.PI)\n      yRot = Math.sin((args[0] / 180) * Math.PI)\n      midX = args[1]\n      midY = args[2]\n      c = args[3]\n      newPoints = points.map(p => [\n        (p[0] - midX) * xRot - (p[1] - midY) * yRot + midX,\n        (p[0] - midX) * yRot + (p[1] - midY) * xRot + midY\n      ])\n      break\n  }\n  for (let i = 1; i < points.length; i++) {\n    line({\n      x1: Math.round(newPoints[i - 1][0]),\n      y1: Math.round(newPoints[i - 1][1]),\n      x2: Math.round(newPoints[i][0]),\n      y2: Math.round(newPoints[i][1]),\n      ctx,\n      color: colors.rgb(c)\n    })\n  }\n  line({\n    x1: Math.round(newPoints[newPoints.length - 1][0]),\n    y1: Math.round(newPoints[newPoints.length - 1][1]),\n    x2: Math.round(newPoints[0][0]),\n    y2: Math.round(newPoints[0][1]),\n    ctx,\n    color: colors.rgb(c)\n  })\n}\n\nexport default polyStroke\n","const alphabet = {\n  '<': [\n    0, 0, 1,\n    0, 1, 0,\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1,\n    0, 0, 0,\n  ],\n  '>': [\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1,\n    0, 1, 0,\n    1, 0, 0,\n    0, 0, 0,\n  ],\n  '/': [\n    0, 0, 0,\n    0, 0, 1,\n    0, 1, 0,\n    0, 1, 0,\n    1, 0, 0,\n    0, 0, 0,\n  ],\n  ':': [\n    0, 0, 0,\n    0, 0, 0,\n    0, 1, 0,\n    0, 0, 0,\n    0, 1, 0,\n    0, 0, 0,\n  ],\n  '|': [\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 0, 0,\n  ],\n  '(': [\n    0, 1,\n    1, 0,\n    1, 0,\n    1, 0,\n    0, 1,\n    0, 0,\n  ],\n  ')': [\n    1, 0,\n    0, 1,\n    0, 1,\n    0, 1,\n    1, 0,\n    0, 0,\n  ],\n  0: [\n    0, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  1: [\n    1, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  2: [\n    1, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  3: [\n    1, 1, 1,\n    0, 0, 1,\n    0, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  4: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 0,\n  ],\n  5: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  6: [\n    1, 0, 0,\n    1, 0, 0,\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  7: [\n    1, 1, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 0,\n  ],\n  8: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0,\n  ],\n  9: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 0,\n  ],\n\n  ' ': [\n    0, 0,\n    0, 0,\n    0, 0,\n    0, 0,\n    0, 0,\n    0, 0\n  ],\n  '.': [\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n  ],\n  ',': [\n    0,\n    0,\n    0,\n    0,\n    1,\n    1,\n  ],\n  '+': [\n    0, 0, 0,\n    0, 1, 0,\n    1, 1, 1,\n    0, 1, 0,\n    0, 0, 0,\n    0, 0, 0\n  ],\n  '-': [\n    0, 0, 0,\n    0, 0, 0,\n    1, 1, 1,\n    0, 0, 0,\n    0, 0, 0,\n    0, 0, 0\n  ],\n  '!': [\n    1,\n    1,\n    1,\n    0,\n    1,\n    0,\n  ],\n  '?': [\n    1, 1,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 0,\n    0, 0,\n  ],\n  a: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  b: [\n    1, 1, 0,\n    1, 0, 1,\n    1, 1, 0,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  c: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 0, 0,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  d: [\n    1, 1, 0,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  e: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  f: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    1, 0, 0,\n    1, 0, 0,\n    0, 0, 0\n  ],\n  g: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  h: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  i: [\n    1, 1, 1,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  j: [\n    0, 0, 1,\n    0, 0, 1,\n    0, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  k: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 0,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  l: [\n    1, 0, 0,\n    1, 0, 0,\n    1, 0, 0,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  m: [\n    1, 0, 1,\n    1, 1, 1,\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  n: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  o: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  p: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 0, 0,\n    1, 0, 0,\n    0, 0, 0\n  ],\n  q: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    0, 1, 1,\n    0, 0, 0\n  ],\n  r: [\n    1, 1, 1,\n    1, 0, 1,\n    1, 1, 0,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  s: [\n    1, 1, 1,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  t: [\n    1, 1, 1,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 1, 0,\n    0, 0, 0\n  ],\n  u: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  v: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 0,\n    0, 0, 0\n  ],\n  w: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    1, 1, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  x: [\n    1, 0, 1,\n    1, 0, 1,\n    0, 1, 0,\n    1, 0, 1,\n    1, 0, 1,\n    0, 0, 0\n  ],\n  y: [\n    1, 0, 1,\n    1, 0, 1,\n    1, 1, 1,\n    0, 0, 1,\n    1, 1, 1,\n    0, 0, 0\n  ],\n  z: [\n    1, 1, 1,\n    0, 0, 1,\n    0, 1, 0,\n    1, 0, 0,\n    1, 1, 1,\n    0, 0, 0\n  ],\n}\n\nexport default alphabet\n","import colors from '../colors.js'\nimport alphabet from './alphabet.js'\n\nconst print = ({ x, y, letters, c, ctx }) => {\n  const color = colors.triplet(c)\n\n  const grids = letters\n    .toString()\n    // Split into individual letters.\n    .split('')\n    // Get the pixels and the letter's width.\n    .map(letter => {\n      const pixels = alphabet[letter.toLowerCase()]\n      return {\n        // If we found a matching letter in the alphabet,\n        // return its width.\n        // Otherwise if the user tries to print a character\n        // we haven't defined, just return 3.\n        width: pixels ? pixels.length / 6 : 3,\n        letter,\n        pixels\n      }\n    })\n    // Calculate running offsets.\n    .reduce((acc, current, index) => {\n      const previous = acc[index - 1]\n      const xOffset = previous ? previous.width + 1 + previous.xOffset : 0\n      const yOffset = previous ? previous.yOffset : 0\n\n      return [\n        ...acc,\n        {\n          ...current,\n          xOffset,\n          yOffset\n        }\n      ]\n    }, [])\n    // Ignore letters with no matches.\n    .filter(d => d.pixels)\n\n  // For each grid of pixels,\n  grids.forEach(grid => {\n    // get some properties,\n    const { pixels, xOffset, yOffset, width } = grid\n\n    // get the image data this letter will occupy,\n    const imageData = ctx.getImageData(x + xOffset, y + yOffset, width, 6)\n    const { data } = imageData\n\n    // and for each pixel,\n    pixels\n      .map((pixel, pixelIndex) => ({ pixel, pixelIndex }))\n      // ignore pixels set to 0,\n      .filter(d => d.pixel)\n      // and update the underlying canvas data.\n      .forEach(d => {\n        const offset = d.pixelIndex * 4\n        data[offset + 0] = color[0]\n        data[offset + 1] = color[1]\n        data[offset + 2] = color[2]\n        data[offset + 3] = 255\n      })\n\n    // And draw!\n    ctx.putImageData(imageData, x + xOffset, y + yOffset)\n  })\n}\n\nexport default print\n","import clamp from 'lodash/clamp'\nimport colors from '../colors.js'\n\nconst sprite = ({\n  x,\n  y,\n  spriteIndex,\n  darken = 0,\n  flipH = false,\n  flipV = false,\n  sprites,\n  ctx\n}) => {\n  if (sprites[spriteIndex]) {\n    sprites[spriteIndex].slice(0, 8).forEach((cells, rowIndex) => {\n      cells.split('').forEach((color, colIndex) => {\n        if (color !== ' ') {\n          const clamped = clamp(+color - darken, 0, 7)\n          ctx.fillStyle = colors.rgb(clamped)\n          ctx.fillRect(\n            Math.floor(x) + (flipH ? 7 - colIndex : colIndex),\n            Math.floor(y) + (flipV ? 7 - rowIndex : rowIndex),\n            1,\n            1\n          )\n        }\n      })\n    })\n  }\n}\n\nconst pixelSprite = ({ x, y, grid, ctx }) => {\n  grid.slice(0, 8).forEach((cells, rowIndex) => {\n    cells.split('').forEach((color, colIndex) => {\n      if (color !== ' ') {\n        ctx.fillStyle = colors.rgb(+color)\n        ctx.fillRect(Math.floor(x) + colIndex, Math.floor(y) + rowIndex, 1, 1)\n      }\n    })\n  })\n}\n\nexport { pixelSprite }\n\nexport default sprite\n","import { get, isNil } from 'lodash'\nimport colors from '../colors.js'\nimport circle from './circle.js'\nimport line from './line.js'\nimport polyStroke from './polyStroke.js'\nimport print from './print.js'\nimport sprite, { pixelSprite } from './sprite.js'\nimport { getPixel, setPixel } from './pixel.js'\n\n// let mapDraws = []\n// let avgDraws = []\n// let draws = 0\n// let skips = 0\n\nconst canvasAPI = ({\n  ctx,\n  width: canvasWidth,\n  height: canvasHeight,\n  sprites,\n  map = []\n}) => {\n  let _runningMap = JSON.parse(JSON.stringify(map))\n  ctx.setTransform(1, 0, 0, 1, 0, 0)\n\n  let _cameraX = 0\n\n  let _cameraY = 0\n\n  const _memoryCanvas = document.createElement('canvas')\n  _memoryCanvas.width = canvasWidth\n  _memoryCanvas.height = canvasHeight\n  const _mCtx = _memoryCanvas.getContext('2d')\n\n  Object.entries(sprites).forEach(([skey, value]) => {\n    const key = +skey\n    const row = Math.floor(key / 16)\n    const col = key % 16\n    pixelSprite({ x: col * 8, y: row * 8, grid: value, ctx: _mCtx })\n  })\n\n  return {\n    polyStroke(points, ...args) {\n      polyStroke({ points, args, ctx })\n    },\n\n    getTile(mx, my) {\n      const tile = get(_runningMap, [my, mx], null)\n      let result = tile !== null ? sprites[tile] : null\n      if (result) {\n        result.type = result[8] || 0\n        result.number = tile\n      }\n      return result\n    },\n\n    setTile(mx, my, spriteNumber) {\n      _runningMap[my][mx] = spriteNumber\n    },\n\n    line(x1, y1, x2, y2, c = 0) {\n      line({\n        x1: Math.floor(x1),\n        y1: Math.floor(y1),\n        x2: Math.floor(x2),\n        y2: Math.floor(y2),\n        ctx,\n        color: colors.rgb(c)\n      })\n    },\n\n    print(x, y, letters, c = 0) {\n      print({\n        x: x - _cameraX,\n        y: y - _cameraY,\n        letters,\n        c,\n        ctx\n      })\n    },\n\n    rectStroke(x, y, w, h, c = 0) {\n      ctx.strokeStyle = colors.rgb(c)\n      ctx.strokeRect(\n        Math.floor(x) + 0.5,\n        Math.floor(y) + 0.5,\n        Math.floor(w) - 1,\n        Math.floor(h) - 1\n      )\n    },\n\n    camera(x = 0, y = 0) {\n      _cameraX = Math.floor(x)\n      _cameraY = Math.floor(y)\n      ctx.setTransform(1, 0, 0, 1, 0, 0)\n      ctx.translate(-_cameraX, -_cameraY)\n    },\n\n    rectFill(x, y, w, h, c = 0) {\n      ctx.fillStyle = colors.rgb(c)\n      ctx.fillRect(Math.floor(x), Math.floor(y), Math.floor(w), Math.floor(h))\n    },\n\n    resetMap() {\n      _runningMap = JSON.parse(JSON.stringify(map))\n    },\n\n    map(x = 0, y = 0) {\n      // const before = Date.now()\n      _runningMap.forEach((row, rowNumber) => {\n        row.forEach((spriteIndex, colNumber) => {\n          if (spriteIndex !== null) {\n            const sx = (spriteIndex % 16) * 8\n            const sy = Math.floor(spriteIndex / 16) * 8\n            const sWidth = 8\n            const sHeight = 8\n            const dx = (colNumber + x) * 8\n            const dy = rowNumber * 8\n            const dWidth = 8\n            const dHeight = 8\n\n            if (\n              dx + 7 >= _cameraX &&\n              dx < _cameraX + 128 &&\n              dy + 7 >= _cameraY &&\n              dy < _cameraY + 128\n            ) {\n              // ++draws\n              ctx.drawImage(\n                _memoryCanvas,\n                sx,\n                sy,\n                sWidth,\n                sHeight,\n                dx,\n                dy,\n                dWidth,\n                dHeight\n              )\n            } else {\n              // ++skips\n            }\n          }\n        })\n      })\n\n      // const after = Date.now()\n      // mapDraws.push(after - before)\n      // if (mapDraws.length > 60) {\n      //   const avg = sum(mapDraws) / mapDraws.length\n      //   // console.log(`map() avg: ${sum(mapDraws) / mapDraws.length}ms`)\n      //   // console.log({ _cameraX, _cameraY })\n      //   mapDraws = []\n      //   avgDraws.push(avg)\n      //   if (avgDraws.length % 10 === 0) {\n      //     console.log(`AVG AVG: ${sum(avgDraws) / avgDraws.length}ms`)\n      //     console.log(`DRAWS/SKIPS: ${draws / skips} (${draws}/${skips})`)\n      //   }\n      // }\n    },\n\n    sprite(x, y, spriteIndex, darken = 0, flipH = false, flipV = false) {\n      sprite({\n        x,\n        y,\n        spriteIndex,\n        darken,\n        flipH,\n        flipV,\n        sprites,\n        ctx\n      })\n    },\n\n    circStroke(x, y, r, c = 0) {\n      circle({\n        cx: Math.floor(x),\n        cy: Math.floor(y),\n        radius: Math.floor(r),\n        ctx,\n        color: colors.rgb(c),\n        onlyStroke: true\n      })\n    },\n\n    circFill(x, y, r, c = 0) {\n      circle({\n        cx: Math.floor(x),\n        cy: Math.floor(y),\n        radius: Math.floor(r),\n        ctx,\n        color: colors.rgb(c)\n      })\n    },\n\n    clear(c) {\n      ctx.save()\n      ctx.setTransform(1, 0, 0, 1, 0, 0)\n      if (!isNil(c)) {\n        ctx.fillStyle = colors.rgb(c)\n        ctx.fillRect(0, 0, 128, 128)\n      } else {\n        ctx.clearRect(0, 0, canvasWidth, canvasHeight)\n      }\n      ctx.restore()\n    },\n\n    getPixel(x, y) {\n      return getPixel({\n        x: Math.floor(x - _cameraX),\n        y: Math.floor(y - _cameraY),\n        ctx\n      })\n    },\n\n    setPixel(x, y, c = 0) {\n      setPixel({\n        x: Math.floor(x),\n        y: Math.floor(y),\n        ctx,\n        color: colors.rgb(c)\n      })\n    }\n  }\n}\n\nexport default canvasAPI\n","import colors from '../colors.js'\n\nconst backgroundColor = 7\n\nconst getPixel = ({ x, y, ctx }) => {\n  // pixel: [r, g, b, a]\n  const [r, g, b, alpha] = ctx.getImageData(x, y, 1, 1).data\n\n  // If pixel isn't opaque, return default.\n  if (alpha !== 255) {\n    return backgroundColor\n  }\n\n  // If color wasn't recognized, return default.\n  const color = colors.lookup([r, g, b, alpha])\n  if (color === null) {\n    return backgroundColor\n  }\n\n  return color\n}\n\nconst setPixel = ({ x, y, ctx, color }) => {\n  ctx.fillStyle = color\n  ctx.fillRect(x, y, 1, 1)\n}\n\nexport { getPixel, setPixel }\n"],"sourceRoot":""}